@using ArabyAds.AdFalcon.Web.Controllers.Core.ViewComponents.AppSite
@model IEnumerable<ArabyAds.AdFalcon.Services.Interfaces.DTOs.AppSite.LanguageFilterDto>
@{

    ArabyAds.AdFalcon.Services.Interfaces.Services.ILanguageService languageService = ArabyAds.Framework.IoC.Instance.Resolve<ArabyAds.AdFalcon.Services.Interfaces.Services.ILanguageService>();

    List<ArabyAds.AdFalcon.Services.Interfaces.DTOs.Core.LanguageDto> languagesDtos = languageService.GetAll().ToList();
    SelectList items = new SelectList(languagesDtos, "ID", "Name");
}
<script language="javascript" type="text/javascript">

    var LanguageVal;
    var LanguageIdVal;
    var LanguageFilterIdVal;
    var ActionNameVal;
    var yesbtn = "@Html.GetResource("Yes", "Global")";
    var nobtn = "@Html.GetResource("No", "Global")";
    var Confirmation = "@Html.GetResource("ProceedMsg", "Global")";
    var ConfriamtionBoxTitle = "@Html.GetResource("Confirm")";
    var FiltersActionurl = "@Url.Action("Filters", "AppSite")";
    var LanguagefiltersActionsUrl = "@Url.Action("LanguagefiltersActions", "AppSite")";

    $(document).ready(function () {
        var Message = "@(ViewBag.Message)";
        var Type = "@(ViewBag.kind)";

        if (Message != "") {

            if (Type == "Successful")
                showSuccessfullyMessage(Message, false);
            else
                showErrorMessage(Message, false);
        }
    });

    function TextFiltersDialog(Language, LanguageId, LanguageFilterId, ActionName) {

        var sendData = new Object();
        sendData.AppSiteId = $("#AppSiteId").val();
        sendData.actionName = ActionName;
        sendData.LanguageFilterDto = new Object();
        sendData.LanguageFilterDto.LanguageName = Language;
        sendData.LanguageFilterDto.LanguageId = LanguageId;
        sendData.LanguageFilterDto.languageFilterId = LanguageFilterId;

        if (ActionName == "delete") {

            $('<div id ="ConfirmationDialog" title="' + ConfriamtionBoxTitle + '"></div>').dialog({

                open: function (event, ui) {
                    $(this).html(Confirmation);
                },
                close: function () {
                    $(this).remove();
                },
                resizable: false,
                draggable: false,
              //  height: 140,
                modal: true,
                showCloseButton: false,

                buttons: [
           {
               text: yesbtn,
               click: function () { $(this).dialog("close"); CallTextFiltersActions(sendData); }
           },
           {
               text: nobtn,
               click: function () { $(this).dialog('close'); }
           }
                ]
            });


        } else {
            CallTextFiltersActions(sendData);
        }
  }


    function CallTextFiltersActions(sendData) {

        prams = $.toJSON(sendData);
        $.ajax({

            url: LanguagefiltersActionsUrl,
            dataType: "text json",
            contentType: 'application/json; charset=utf-8',
            type: "POST",
            data: prams,

            success: function (data) {
                window.location = FiltersActionurl +  "?Type=3" + "&Message=" + data.Message + "&Kind=" + data.Kind;
            },

            error: function (error) {}

        });
    }



    function EditAddFilter(Language, Language, LanguageFilterId, ActionName) {

        CommoDialogInitilize();
        InitilizeSaveButton();
        LanguageFilterIdVal = LanguageFilterId;
        ActionNameVal = ActionName;
        showDialog('party-add-dialog-form');
        $("#party-add-dialog-form").find('form').bind('keypress', function (e) {
            if (e.keyCode == 13) {
                $("#SaveButton").click();
                return false;
            }
        });

    }


    function collect() {
        LanguageVal = $("#list option:selected").text();
        LanguageIdVal = $("#list option:selected").val();
        TextFiltersDialog(LanguageVal, LanguageIdVal, LanguageFilterIdVal, ActionNameVal);
    }


</script>
<div class="ad-filter-text go-left floating-left">
    <h3>
        @Html.GetResource("Header", "LanguageFilters")
    </h3>
    @Html.Raw(Html.GetResource("Content", "LanguageFilters"))
</div>
<div class="go-left " style="width:40%">
    @*<h3>@Html.GetResource("CostElements", "Titles")</h3>*@

    <a class="primary-btn" href="javascript:void(0)" onclick="EditAddFilter('', '', '', 'insert')">@Html.GetResource("Add", "Keywords")</a>
    <br />
    <br />
</div>
<div class="ad-filter-data go-left floating-left">
    @(Html.Kendo().Grid(Model)
                            .Name("Grid")
                             // .DataKeys(p => p.Add(o => o.languageFilterId))
                             .DataSource(dataBinding =>
                             {

                                 dataBinding.Ajax().Events(x => x.Error("textFilterOperationError")).Create("LanguagefiltersActions", "appsite", new { actionName = "insert" }).Model(model =>
                                 {
                                     model.Id(m => m.languageFilterId); // Specify the property which is the unique identifier of the model.
                                     model.Field(m => m.LanguageName).Editable(false);
                                     // model.Field(m => m.SSPId).Editable(false);
                                     //model.Field(m => m.ExchangeName).Editable(false);
                                     // model.Field(m => m.SubPublisher).Editable(false);
                                     //model.Field(m => m.subPublisherId).Editable(false);
                                     // model.Field(m => m.SubAppSiteId).Editable(false);
                                     //model.Field(m => m.Include).Editable(false);
                                     //model.Field(m => m.SubPublisherMarketId).Editable(false);

                                     // Make the ProductID property not editable.
                                 });
                             })
                //.ToolBar(commands => commands.Position(GridToolBarPosition.Top).Template("<a class='t-button t-button-icon t-button-bare t-grid-add' onclick=EditAddFilter('','','','insert')><span class='t-icon t-add'></span></a> "))
                .Columns(columns =>
                 {
                     columns.Bound(o => o.LanguageName).Sortable(false).Title(Html.GetResource("LanguageDropDownList", "LanguageFilters"));

                     columns.Template(" <div style='width:60px;  margin-right:10px; float:left;'> <div><a class='t-button t-button-icon t-button-bare' style='float: left; margin-right: 5px' onclick=TextFiltersDialog('#=LanguageName#" + "" + "','#=LanguageId#" + "" + "','#=languageFilterId#" + "" + "','" + "delete" + "')><span class='t-icon t-delete'></span></a></div> <div><a class='t-button t-button-icon t-button-icon t-button-bare' style='float: left; margin-right: 5px' onclick=EditAddFilter('#=LanguageName#" + "" + "','#=LanguageId#" + "" + "','#=languageFilterId#" + "" + "','" + "update" + "')><span class='t-icon t-edit'></span></a></div> </div>");
                 })
                //.Editable(editing => editing.Mode(GridEditMode.InLine))
                .Sortable(sort => sort.Enabled(false))
                .Scrollable(scrolling => scrolling.Enabled(false))
                        )
</div>

<div id="party-add-dialog-form" class="adfalcon-dialog" title="@Html.GetResource("FromHeader", "TextFilters")" style="display: none; ">
    @using (Html.BeginForm())
    {
        <div class="data-row data-container">
            <div class="label-container">
                <span class="field-title required-field">@Html.GetResource("LanguageDropDownList", "LanguageFilters")</span>
            </div>
            <div class="field-container">
                <div class="field-container">
                    @Html.DropDownList("list", items)
                </div>
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    function textFilterOperationError(e) {
        if (e.xhr.status == "0") {
            clearErrorMessage();
            showErrorMessage(e.xhr.responseText);
            e.preventDefault();
        }
        if (e.xhr.status == "500") {
            e.preventDefault();
        }
    }
</script>