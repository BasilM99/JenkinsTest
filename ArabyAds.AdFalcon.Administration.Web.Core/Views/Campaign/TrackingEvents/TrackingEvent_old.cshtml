<style>
	#PreRequisitesListSelect .select2-container {
		min-width: 299px;
	}

	#select2-PreRequisitesList-results > .select2-results__option:before {
		content: "";
		display: inline-block;
		position: relative;
		height: 20px;
		width: 20px;
		border: 2px solid #e9e9e9;
		border-radius: 4px;
		background-color: #fff;
		margin-right: 10px;
		vertical-align: middle;
	}

	#select2-PreRequisitesList-results > .select2-results__option[aria-selected=true]:before {
		font-family: fontAwesome;
		content: "\f00c";
		color: #fff;
		background-color: #283f60;
		border: 0;
		display: inline-block;
		padding-left: 3px;
	}

	#select2-PreRequisitesList-results > .select2-results__option {
		/*padding-right: 210px;*/
		padding-bottom: 6px;
		padding-top: 6px;
		text-align: left;
		vertical-align: central;
	}


	#select2-PreRequisitesList-results > .select2-container--default .select2-results__option[aria-selected=true] {
		background-color: #fff;
	}

	#select2-PreRequisitesList-results > .select2-container--default .select2-results__option--highlighted[aria-selected] {
		background-color: #eaeaeb;
		color: #272727;
	}

	#select2-PreRequisitesList-results > .select2-container--default .select2-selection--multiple {
		margin-bottom: 10px;
	}

	#select2-PreRequisitesList-results > .select2-container--default.select2-container--open.select2-container--below .select2-selection--multiple {
		border-radius: 4px;
	}

	#select2-PreRequisitesList-results > .select2-container--default.select2-container--focus .select2-selection--multiple {
		border-color: #6591b7;
		border-width: 2px;
	}

	#select2-PreRequisitesList-results > .select2-container--default .select2-selection--multiple {
		border-width: 2px;
	}

	#select2-PreRequisitesList-results > .select2-container--open .select2-dropdown--below {
		border-radius: 6px;
		box-shadow: 0 0 10px rgba(0,0,0,0.5);
	}


	
</style>
@model ArabyAds.AdFalcon.Services.Interfaces.DTOs.Campaign.AdGroupTrackingEventSaveDto

@{
	Layout = null;
	string TrackingEventValidForSecondMaxAndMin = string.Format(
		Html.GetResource("TrackingEventValidForSecondMaxAndMin", "Time"),
		ArabyAds.AdFalcon.Web.Controllers.Utilities.Config.TrackingEvent_ValidForSecondMin,
		ArabyAds.AdFalcon.Web.Controllers.Utilities.Config.TrackingEvent_ValidForSecondMax
		);
}

<script type="text/javascript">
    var checkSystemEventFraudUrl = '@Url.Action("checkSystemEventFraud", "Campaign")';

    $(document).ready(function () {
        //-------------
        $("#Code").keypress(function (e) {
            if ($("#Code").val().length > 5)
                e.preventDefault();
        });
        //----------

        $("#CodesComboBox-input").bind({
            paste: function (e) {
                e.preventDefault();
            },
            change: function () {
                validateEventCodeAndName();
            },
            keypress: function (e) {
                $("#validation_Code").attr("style", "Display:none");
                var CodesCombobox = $("#CodesComboBox").data('tComboBox');
                if ($("#CodesComboBox-input").val().length > 5 && CodesCombobox.selectedIndex != 0) {
                    e.preventDefault();
                }
            },
        });
        $("#NamesComboBox-input").bind({
            paste: function (e) {
                e.preventDefault();
            },
            change: function () {
                validateEventCodeAndName();
            },
            keypress: function (e) {
                $("#validation_Description").attr("style", "Display:none");
                if ($("#NamesComboBox-input").val().length > 24) {
                    e.preventDefault();
                }
            },
        });
    });

    function validateEventCodeAndName() {
        var NamesCombobox = $("#NamesComboBox").data('tComboBox');
        var ColdesCombobox = $("#CodesComboBox").data('tComboBox');
        $.ajax({
            type: 'POST',
            url: checkSystemEventFraudUrl,
            cache: false,
            async: false,
            dataType: 'json',
            data: { code: ColdesCombobox.text().trim(), name: NamesCombobox.text().trim() },
            success: function (data) {

                if (data) {
                    NamesCombobox.select(0);
                    ColdesCombobox.select(0);
                    ColdesCombobox.open();
                    NamesCombobox.open();
                    ColdesCombobox.close();
                    NamesCombobox.close();
                    chooseCodeFlag = true;
                    chooseNameFlag = true;
                }
            }
        });

    }

    function eventhandler() {
        elem = $("#PreRequisites");
        if ($("#PreRequisitesList").find(":selected").length == 0) {
            elem.hide();
        } else {
            elem.show();
        }
    }


       //==============================================================================================


</script>
@using ArabyAds.AdFalcon.Services.Interfaces.DTOs.Core

@Html.HiddenFor(m => m.ValidFor)

@Html.HiddenFor(m => m.SegmentsMapId)


@Html.HiddenFor(m => m.SegmentsId)
@Html.HiddenFor(m => m.SegmentString)
<div class="field-container">
	<span class="field-validation-error" style="display:none" name="MoreThanZeroSecondValidationDiv" id="MoreThanZeroSecondValidationDiv">

		<span>@TrackingEventValidForSecondMaxAndMin</span>
	</span>
</div>
<div class="section-form-inner-container" style="width:550px">
	<div class="data-row red-box" style="display:none" id="party-divErrorMessages">
	</div>

	<div id="TrackingEventTobeNotEdit">
		<div class="data-row data-container">
			<div class="label-container">
				<span class="field-title required-field">@Html.GetResource("Description", "AdGroupTrackingEvent")</span>
			</div>

			<div class="field-container2" style="width:50%">


				@*@(Html.Telerik().ComboBoxFor(p => p.Description)
				.Name("NamesComboBox")
				.Filterable(filtering => filtering.FilterMode(AutoCompleteFilterMode.Contains))
				.BindTo((IEnumerable<DropDownItem>)ViewData["trackingEventsNamesIdsList"])
					.ClientEvents(events => events.OnChange("ComboBox_Names_onChange"))
					.ClientEvents(events => events.OnLoad("ComboBox_Names_onLoad")))*@
			</div>
			<div class="field-container">
				<select class="sss normal" name="selectDescription" asp-for="Description">
					<option></option>
				</select>

			</div>
			<div class="field-container">
				<span class="field-validation-error" data-valmsg-for="Description" data-valmsg-replace="true" style="display:none" id="validation_Description_length">
					<span htmlfor="Description" generated="true" class="">Please enter no more than 25 characters.</span>
				</span>
			</div>
			<div class="field-container">
				<span class="field-validation-error" data-valmsg-for="Description" data-valmsg-replace="true" style="display:none" id="validation_Description">
					<span htmlfor="Description" generated="true" class="">@Html.GetResource("RequiredMessage", "ResourceSet")</span>
				</span>
			</div>
			<div class="field-container">
				<span class="field-validation-error" data-valmsg-for="Description" data-valmsg-replace="true" style="display:none" id="validation_Description_Format">
					<span htmlfor="Description" generated="true" class="">Please input alphanumeric characters only</span>
				</span>
			</div>
		</div>
		<div class="data-row data-container">

			<div class="label-container">
				<span class="field-title required-field">@Html.GetResource("Code", "Global")</span>
			</div>
			<div class="field-container2" style="width:50%">

				@*@(Html.Telerik().ComboBoxFor(p => p.Code)
				.Name("CodesComboBox")
				.Filterable(filtering => filtering.FilterMode(AutoCompleteFilterMode.Contains))
					.BindTo((IEnumerable<DropDownItem>)ViewData["trackingEventsCodesIdsList"])
					.ClientEvents(events => events.OnChange("ComboBox_Codes_onChange"))
					.ClientEvents(events => events.OnLoad("ComboBox_Codes_onLoad")))*@



			</div>
			<div class="field-container">
				<select class="sss2 normal" name="selectCode" asp-for="Code">
					<option></option>
				</select>
				@*@Html.DropDownListFor(p => p.Code, new SelectList(new string[] { "Football", "Rugby", "Horse Racing" }, Model.Code));*@

			</div>
			<div class="field-container">
				<span class="field-validation-error" data-valmsg-for="Code" data-valmsg-replace="true" style="display:none" id="validation_Code">
					<span htmlfor="Code" generated="true" class="">@Html.GetResource("RequiredMessage", "ResourceSet")</span>
				</span>
			</div>
			<div class="field-container">
				<span class="field-validation-error" data-valmsg-for="Code" data-valmsg-replace="true" style="display:none" id="validation_Code_length">
					<span htmlfor="Code" generated="true" class="">Please enter no more than 6 characters.</span>
				</span>
			</div>
			<div class="field-container">
				<span class="field-validation-error" data-valmsg-for="Code" data-valmsg-replace="true" style="display:none" id="validation_Code_Format">
					<span htmlfor="Code" generated="true" class="">Please input alphanumeric characters only.</span>
				</span>
			</div>
		</div>
		<div class="data-row data-container">
			<div class="label-container">
				<span class="field-title required-field">&nbsp;</span>
			</div>
			<div class="field-container">
				@Html.GetCheckBox("AllowDuplicate", Html.GetResource("AllowDuplicate", "Global"))

			</div>
		</div>
		<div class="data-row data-container">
			<div class="label-container">
				<span class="field-title required-field">&nbsp;</span>
			</div>
			<div class="field-container">
				@Html.GetCheckBox("IsBillable", Html.GetResource("IsBillable", "AdGroupTrackingEvent"))

			</div>
		</div>
		<div class="data-row data-container" style="margin-bottom: -10px; display:none">
			<div class="label-container">
				<span class="field-title required-field">&nbsp;</span>
			</div>
			<div class="field-container">
				<label style="width: 70px;font-weight: initial;">@Html.GetResource("Days", "Time")</label>
				<label style="width: 70px;font-weight: initial;">@Html.GetResource("Hours", "Time")</label>
				<label style="width: 70px;font-weight: initial;">@Html.GetResource("Minutes", "Time")</label>
				<label style="width: 70px;font-weight: initial;">@Html.GetResource("Seconds", "Time")</label>
			</div>
		</div>
		<div class="data-row data-container" style="display:none">
			<div class="label-container">
				<span class="field-title required-field"> @Html.GetResource("ValidFor", "Time")</span>
			</div>
			<div class="field-container">
				<input id="TrackingEvent_days" type="number" min="0" placeholder="@Html.GetResource("Days", "Time")" style="width: 70px;">
				<input id="TrackingEvent_hours" type="number" min="0" max="23" placeholder="@Html.GetResource("Hours", "Time")" style="width: 70px;">
				<input id="TrackingEvent_minutes" type="number" min="0" max="59" placeholder="@Html.GetResource("Minutes", "Time")" style="width: 70px;">
				<input id="TrackingEvent_seconds" type="number" min="0" max="59" placeholder="@Html.GetResource("Seconds", "Time")" style="width: 70px;">
			</div>

		</div>
		<div class="data-row data-container" style="overflow:visible">
			<div class="label-container">
				<span class="field-title required-field">@Html.GetResource("PreRequisites", "AdGroupTrackingEvent")</span>
			</div>
			<span class="field-validation-error" data-valmsg-for="Code" data-valmsg-replace="true" style="display:none" id="validation_Code">
				<span htmlfor="Code" generated="true" class="">@Html.GetResource("RequiredMessage", "ResourceSet")</span>
			</span>
			<div class="field-container testanasccc" id="PreRequisitesListSelect">
				@Html.ListBox("PreRequisitesList", new List<SelectListItem>(), new { @class = "multiselelct", onchange = "eventhandler()" })
			</div>
			@*<div class="field-container">
				<select id="PreRequisitesList"  multiple="multiple" onchange = "eventhandler()"></select>
			</div>*@

		</div>
		<div class="data-row data-container" id="PreRequisites" style="display:none">
			<div class="label-container">
				<span class="field-title required-field">&nbsp;</span>
			</div>
			<div class="field-container">
				@Html.GetCheckBox("AllPreRequisitesRequired", Html.GetResource("AllPreRequisitesRequired", "AdGroupTrackingEvent"), divid: "PreRequisites")

			</div>
		</div>

	</div>

	<div id="TrackingEventTobeEdit">
		<div class="label-container">
			<span class="field-title required-field">@Html.GetResource("Description", "AdGroupTrackingEvent")</span>
		</div>
		<div class="field-container">
			<span class="small-big-field">@Html.TextBox("TrackingEventName", string.Empty , new {@class="", @disabled = "disabled"  , @readonly= "readonly"})</span>
			</div>
		</div>
		<div class="data-row data-container" id="AudienceListListDllDiv" style="overflow:visible !important;z-index:333">

			<div class="label-container">
				<span class="field-title required-field">@Html.GetResource("AudienceListOne", "Global")</span>
			</div>
			<div class="field-container">




				<select id="AudienceListListDll" name="AudienceListListDll" class="js-example-theme-multiple js-states form-control select2-hidden-accessible sss3 normal" style="width: 299px;" multiple="" tabindex="-1" aria-hidden="true"></select>

				<script>


    var ElemnetID2 = "";

				var AdvaudieceListUrl = '@Url.Action("GetSegmentsList", "Campaign")';
				var SegmentsByIdUrl = '@Url.Action("GetBySegmentsId", "Campaign")';

				var selectElemnt2;
				var ListOfSegments = '';
    $(document).ready(function () {
        //$('#tokenize').tokenize();

		ElemnetID2 = "#" + "AudienceListListDll";

						selectElemnt2 = $(ElemnetID2);

       // fillCountries();

		$("#AudienceListListDll").select2({

							placeholder: "@Html.GetResource("Choose", "Global")",
							tags: false,
			dropdownParent: $("#AudienceListListDll").parent(),
            multiple: true,
						tokenSeparators: [',', ' '],
					allowClear: true,
						closeOnSelect:true,
						ajax: {
				delay:250,
							url: AdvaudieceListUrl,
                dataType: "json",
						type: "GET",

                data: function (params) {

                    var queryParameters = {
						q: params.term,

						AdvAccId: GlobalAdvertiserAccountId
                    }
                    return queryParameters;
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
								text: item.en,
								id: item.ID
                            }
                        })
                    };
                }



            }

						});






		$('#AudienceListListDll').on("select2:select", function (e) {


							//$('[name="list"]').val($('#CampListDll').val());
			var split = $('#AudienceListListDll').val();

		var stringis=	$('#AudienceListListDll').select2("data").map(function (val) {
				return val.text;
			}).join(',');


			$('[name="SegmentsId"]').val(split);

			$('[name="SegmentString"]').val(stringis);



						});
		$('#AudienceListListDll').on("select2:unselect", function (e) {

			$('[name="SegmentsId"]').val('');

			$('[name="SegmentString"]').val('');



						});





						//CustomInitSelect2();

						//$('#CampListDll').trigger('select2:opening');


		//CustomTrackingEventInitSelect2();
    });


				function CustomTrackingEventInitSelect2() {
					//var arrpush = [];
					//if (typeof (ListOfSegments) != "undefined") {
					//	$.each(ListOfSegments.split(","), function (i, e) {
					//		if (e != "Not Set" && e != "" && e != null && e != undefined) {
					//			//if (!/[0-9]+$/.test(e)) {
					//			//    //var newList = $.merge($(nameoflist).select2('data'), [{
					//			//    //    id: e,
					//			//    //    tag: e
					//			//    //}]);
					//			//    //$(nameoflist).select2('data', newList);
					//			//    //$(nameoflist).append('<option value="' + e + '">' + e + '</option>');

					//			//    $(nameoflist).select2().val(e).trigger("change");
					//			//}
					//			//else {
					//			//    $(nameoflist).select2().val(e).trigger("change");
					//			//}

					//			arrpush.push(e);
					//			//$(nameoflist + " option[value='" + e + "']").prop("selected", true);

					//		}
					//	});


						var arrResult = [];


						$.ajax({
							type: 'GET',
							url: SegmentsByIdUrl + "?Ids=" + ListOfSegments,
						}).then(function (data) {
							// create the option and append to Select2
							for (var i = 0; i < data.length; i++) {
								var option = new Option(data[i].Name.Value, data[i].ID, true, true);
								var resultData = {
									text: data[i].en,
									id: data[i].ID
								}
								selectElemnt2.append(option).trigger('change');
								arrResult.push(resultData);

							}
							// manually trigger the `select2:select` event
							selectElemnt2.trigger({
								type: 'select2:select',
								params: {
									data: arrResult
								}
							});
						});
					}





				</script>

			</div>



		</div>
	</div>

	<script>
		$(document).ready(function () {
		

        var trackingEventsNamesIdsList = @Html.Raw(Json.Serialize(ViewData["trackingEventsNamesIdsList"]));
        trackingEventsNamesIdsList.splice(0, 1);
        var data2 = $.map(trackingEventsNamesIdsList, function (obj1) {
        obj1.id = obj1.id || obj1.Text;

        return obj1;
    });
        var data2 = $.map(trackingEventsNamesIdsList, function (obj1) {
        obj1.text = obj1.text || obj1.Text;

        return obj1;
    });

        var trackingEventsCodesIdsList = @Html.Raw(Json.Serialize(ViewData["trackingEventsCodesIdsList"]));
        trackingEventsCodesIdsList.splice(0, 1);
        var data = $.map(trackingEventsCodesIdsList, function (obj) {
        obj.id = obj.id || obj.Text;
        return obj;
    });

        var data = $.map(trackingEventsCodesIdsList, function (obj) {
        obj.text = obj.text || obj.id;

        return obj;
    });



    $('.sss').each(function () {
        $(this).select2({
            placeholder: "Choose one ...",
            tags: true,
            data: data2,
            dropdownParent: $(this).parent()
        })
    });
        $('.sss2').each(function () {
            $(this).select2({
                placeholder: "Choose one ...",
                tags: true,
                data: data,
                dropdownParent: $(this).parent()
            });
        });



        $('.sss').on('select2:select', function (e) {

            for (i = 0; i < trackingEventsNamesIdsList.length; i++) {
                var val = $(this).val();
                //debugger;
                if (val == trackingEventsNamesIdsList[i].Text) {
                    $('.sss2').val(trackingEventsCodesIdsList[i].Text);
                    $('.sss2').trigger('change');
                    break;
                }
            }
        });


        $('.sss2').on('select2:select', function (e) {

            for (i = 0; i < trackingEventsCodesIdsList.length; i++) {
                var val = $(this).val();
                if (val == trackingEventsCodesIdsList[i].Text) {
                    $('.sss').val(trackingEventsNamesIdsList[i].Text);
                    $('.sss').trigger('change');
                    break;
                }
            }
        });


        $("#PreRequisitesList").select2({
            closeOnSelect: false,
            placeholder: "Choose One...",
            allowHtml: true,
            allowClear: true,
            tags: false

        });

    });
	</script>
	<script>
		$('.field-validation-error span').css({
			'color': 'white',
			'background': '#bd006b',
			'font-size': '10px',
			'padding': '0px 5px 2px 5px',
			'border-radius': '2px',
			'display': 'inline-block',
			'overflow': 'hidden',
			'line-height': '20px',
			'margin-left': '7px'
		});
	</script>

