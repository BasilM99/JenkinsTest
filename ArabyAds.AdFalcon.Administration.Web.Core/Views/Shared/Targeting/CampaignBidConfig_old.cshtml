@{
    ViewBag.Title = @Html.GetResource("CampaignBidConfig", "Titles");
}
@model ArabyAds.AdFalcon.Web.Controllers.Model.Campaign.CampaignBidConfigModel


@Html.Hidden("CampaignId", Model.CampaignId)
@Html.Hidden("DeletedCampaignBidConfigs", "")
@Html.Hidden("InserteCampaignBidConfigs", "")
@Html.Hidden("UpdatedCampaignBidConfiges", "")
@Html.Hidden("UpdatedNotCompatableCampaignBidConfiges", "")



<div class="data-row section-container" id="form" style="margin: 4px; width:795px;">

    <div class="data-row">
        <div class="blue-filter-container noShitForTargeting" style="height: 80px;width:100%" id="search">
            <table class="" style="width:100%">
                <tbody>
                    <tr>
                        <td>
                            <span class="go-bold" style="width:100%">@Html.GetResource("NameColumn", "AppSite")</span>

                        </td>
                        <td width="250px">
                            <input class="text-box" style="width:90%" id="Name" name="Name" type="text" value="">

                        </td>

                        <td>
                            <span class="go-bold" style="width:90%">@Html.GetResource("Name", "AppSite")</span>

                        </td>

                        <td width="250px">
                            <input class="text-box" style="width:90%" id="AppSiteName" name="Name" type="text" value="">
                        </td>
                        <td>

                            <span class="go-bold" style="width:90%">@Html.GetResource("SubPublisherId", "CampaignAssignAppsites")</span>


                        </td>
                        <td width="250px">
                            <input class="text-box" style="width:90%" id="SubPublisher" name="Name" type="text" value="">
                        </td>

                        <td>
                            <a href="javaScript:void(0);" style="border:none!important" class="maximize" onclick="ShowAdvancedSearch()" id="adv">&nbsp;&nbsp;</a>
                        </td>

                    </tr>

                </tbody>
            </table>
            <div id="tr_one_Advanced_Search" style="display:none;width:100%">
                <table id="tr_one_Advanced_Searchs" style="display:block;width:100%">
                    <tr>
                        <td>
                            <span class="go-bold">@Html.GetResource("From", "Global")</span>
                        </td>
                        <td style="width: 110px;">
                            <input type="text" readonly="readonly" value="@(string.Empty)" data-date="true" name="DateFrom" id="DateFrom"
                                   class="text-box range-date-cntl" />
                        </td>
                        <td>
                            <span class="go-bold">@Html.GetResource("To", "Global")</span>

                        </td>
                        <td style="width: 80px;">
                            <input type="text" readonly="readonly" value="@(string.Empty)" data-date="true" name="DateTo" id="DateTo"
                                   class="text-box range-date-cntl left-range-cntrl" />
                        </td>
                        <td width="120px">
                            <span class="go-bold" style="width:100%">@Html.GetResource("Type", "AppSite")</span>
                        </td>
                        <td width="200px">
                            <span style="width:100%">@Html.DropDownList("TypeId", Model.Types, new { style = "width:100%" })</span>

                        </td>
                        <td width="210px"></td>
                    </tr>
                </table>
                <table id="tr_two_Advanced_Search" style="display:block;width:100%">
                    <tr>
                        <td style="">
                            <span class="go-bold" style="width:90%">@Html.GetResource("AccountId", "Impersonate")</span>

                        </td>
                        <td style="width: 250px">
                            <input class="text-box" style="width:90%" id="AccountId" name="Name" onkeypress="AccountIdKeyPress(event)" value="">


                        </td>
                        <td width="10px"></td>
                        <td>
                            <span class="go-bold" style="width:90%">@Html.GetResource("email", "Global")</span>

                        </td>
                        <td style="width: 250px">
                            <input class="text-box" style="width:90%" id="Email" name="Name" type="text" value="">

                        </td>

                        <td width="200px"></td>
                        <td width="210px"></td>
                    </tr>
                </table>
            </div>
            <table class="" style="width:100%">
                <tbody style="width:100%">

                    <tr>
                        <td class="go-right" colspan="6">
                            <input type="submit" onclick="resetPageination('Accounts'); getUsersList(1, 10); stopSubmit(event);" name="Filter" value='@Html.GetResource("Filter")' class="btn filter-button " />
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

    </div>

    @*</div>

        </div>*@
    <br />
    <div class=" floating-left go-center" style="width: 30%; margin-top: 10px;">
        <span class="t-widget t-grid th t-header floating-left" floating-left" style="width: 220px !important; font-weight: bold;font-size: 12px; color:  black;height: 30px;">@Html.GetResource("Accounts", "CampaignBidConfig")</span>
        @Html.ListBoxFor(x => Model.Accounts, new SelectList(Model.Accounts, "Id", "Name"), new { @class = "cloud-area text-box-like-container", style = "width: 220px;height :200px;margin-top:0px;background: none !important; border-radius: 0px;", onchange = "OnSelecAccounts(this)", @size = 10, @multiple = false })

        @{
            ViewDataDictionary viewDataDoc = new ViewDataDictionary(ViewData);
            viewDataDoc.Add("ControlId", "Accounts");
            viewDataDoc.Add("BindListFunct", "getUsersList");
            viewDataDoc.Add("Width", "220px");
            Html.RenderPartial("PartialViews/Pagging", viewDataDoc);
        }
    </div>

    <div class=" floating-left go-center" style="width: 30%; margin-top: 10px;">
        <span class="t-widget t-grid th t-header floating-left" floating-left" style="width: 220px !important; font-weight: bold;font-size: 12px; color:  black;height: 30px; ">@Html.GetResource("AppSites", "CampaignBidConfig")</span>
        @Html.ListBoxFor(x => Model.AppSites.Items, new SelectList(Model.AppSites.Items, "Id", "Name"), new { @class = "cloud-area text-box-like-container", style = "width: 220px;height :200px;margin-top:0px;background: none !important;border-radius: 0px;", onchange = "OnSelectAppSite(this)", @size = 10, @multiple = false })
        @{
            ViewDataDictionary viewAppSiteItemsDataDoc = new ViewDataDictionary(ViewData);
            viewAppSiteItemsDataDoc.Add("ControlId", "AppSites_Items");
            viewAppSiteItemsDataDoc.Add("BindListFunct", "GetAppSiteList");
            viewAppSiteItemsDataDoc.Add("Width", "220px");
            await Html.RenderPartialAsync("PartialViews/Pagging", viewAppSiteItemsDataDoc);
        }
    </div>

    <div class="floating-left go-center" style="width: 30%; margin-top: 10px;">
        <span class="t-widget t-grid th t-header floating-left" floating-left" style="width: 220px !important; font-weight: bold;font-size: 12px; color:  black;height: 30px; ">@Html.GetResource("SubPublishers", "CampaignBidConfig")</span>
        @Html.ListBox("subPublishers", Model.SubPublishers, new { @class = "cloud-area text-box-like-container", style = "width:220px;height :200px;margin-top:0px;background: none !important;border-radius: 0px;" })

    </div>
    <di class="floating-left" style="width: 4% ; padding: 0px 10px 0px  10px;margin-top: 50px;">
        <input type="button" class="btn" value=">" id="btnSelectSubPublisher" style="width: 30px;" onclick="onSelectSubPublishers();" />
    </di>

    <div id="gridDivCampaignBidConfig" class="floating-left grid-containe" style="margin-top : 20px;width: 795px;height: 300px;">
        @(Html.Kendo().Grid(Model.CampaignBidConfigList).Name("CampaignBidConfigList")
        //.NoRecordsTemplate("<center>" + Html.GetResource("CampaignBidConfigListIsEmpty", "Campaign") + "</center").TableHtmlAttributes(new { width = "795px" })
        //.DataKeys(p => p.Add(o => o.ID))
        .EnableCustomBinding(true)
        .Editable(ed => ed.Mode(GridEditMode.InCell).DisplayDeleteConfirmation(false)
        //.DefaultDataItem(new ArabyAds.AdFalcon.Services.Interfaces.DTOs.Campaign.CampaignBidConfigDto())
        )
        .Columns(columns =>
        {
            columns.Bound(o => o.ID).Hidden();
            columns.Bound(o => o.Appsite.ID).Hidden();
            columns.Bound(o => o.AccountId).Hidden();
            columns.Bound(o => o.AccountName).Width("150px").Title(Html.GetResource("AccountName", "CampaignBidConfig"));
            columns.Bound(o => o.Appsite.Name).Title(Html.GetResource("Name", "AppSite")).ClientTemplate("<div class='grid-title-container floating-left'> <span class='trimed-span' title='#= Appsite.Name#' id='AppsiteName'>#= Appsite.Name#</span></div>").Title(Html.GetResource("Name", "AppSite"));
            columns.Bound(o => o.SubPublisher).Title(Html.GetResource("SubPublisher", "CampaignBidConfig"))
            .ClientTemplate(Html.Label("SubPublisher",(string.IsNullOrEmpty("#=SubPublisher#") || "#=SubPublisher#" == null) ? Html.GetResource("All", "CampaignAssignAppsites") : "#=SubPublisher#", new { id = "SubPublisher" }).ToHtmlString())
            .Width("100px");
            columns.Bound(o => o.SubPublisherId).Hidden();
            columns.Bound(o => o.AppsitePricingModel).Title(Html.GetResource("AppsitePricingModelDisplay", "BidConfig"));
            columns.Bound(o => o.Bid).Title(Html.GetResource("Bid", "Campaign"))
            .HtmlAttributes(new { @class = "small-big-field", style = "width: 100px ;  " })
            .ClientTemplate("<input  maskType='decimal' onchange='BidValue_Changed(this);'      onfocus='onBid_select(this);'      data='ddlReason' style='width: 100px' onkeypress = 'onbidpress(event,this)'     type ='text' value='#=Bid#' id='Bid' name='Bid' />" + "<span  class='field-validation-error' style='display: none;'><span>" + Html.GetResource("CurrencyMsg", "ResourceSet") + "</span></span>"


            //  Html.AdFalconValidationMessage("Bid").ToString()
            )
            .HtmlAttributes(new { @class = "small-big-field", style = "width: 100px ;  " });
            columns.Template("<div id='DeleteButton' style='display:block' ><a class='t-button t-button-icon t-button-bare' type='button' onclick='ShowConfirmationDialog(this);'><span class='t-icon t-delete'></span></button></div>").HtmlAttributes(new { @class = "go-center" }).Width("30px");
            columns.Bound(o => o.SubAppsiteId).Hidden();

        })
        .DataSource(dataBinding =>
        {
            // dataBinding.Server().Select("GetCampaignBidConfigs", "Campaign");
            dataBinding.Ajax().Read(read => read.Action("GetCampaignBidConfigs", "Campaign", new { id = Model.CampaignId, adGroupId = Model.AdGroupId })).Model(model =>
            {
                model.Id(m => m.ID); // Specify the property which is the unique identifier of the model.
                model.Field(m => m.Appsite.ID).Editable(false);
                model.Field(m => m.AccountId).Editable(false);
                model.Field(m => m.AccountName).Editable(false);
                model.Field(m => m.Appsite.Name).Editable(false);
                model.Field(m => m.SubPublisher).Editable(false);
                model.Field(m => m.SubPublisherId).Editable(false);
                model.Field(m => m.AppsitePricingModel).Editable(false);
                model.Field(m => m.Bid).Editable(false);
                model.Field(m => m.SubAppsiteId).Editable(false);

                // Make the ProductID property not editable.
            }).AutoSync(false); ;

        })
        //.Events(events => events.OnComplete("CampaignBidGrid_onComplete"))
        .Events(e => e.DataBinding("CampaignBidGrid_OnDataBinding"))
        .Events(e => e.DataBound("CampaignBidConfigList_OnDataBound"))
        //.ClientEvents(e => e.OnCommand("Grid_onCommand"))
        .Scrollable(scrolling => scrolling.Enabled(false)).EnableCustomBinding(true).Pageable(paging => paging


        .Input(false)
        .Numeric(false)
        .Info(false)
        .PreviousNext(false)
        .Refresh(true)

        .Position(GridPagerPosition.Bottom)))
        @*@(Html.Telerik().Grid(Model.CampaignBidConfigList).Name("CampaignBidConfigList").NoRecordsTemplate("<center>" + Html.GetResource("CampaignBidConfigListIsEmpty", "Campaign") + "</center").TableHtmlAttributes(new { width = "795px" })
             .DataKeys(p => p.Add(o => o.ID))
             .EnableCustomBinding(true)
            .Editable(ed => ed.Mode(GridEditMode.InCell).DisplayDeleteConfirmation(false)
             .DefaultDataItem(new ArabyAds.AdFalcon.Services.Interfaces.DTOs.Campaign.CampaignBidConfigDto()))
             .Columns(columns =>
             {
                 columns.Bound(o => o.ID).Hidden();
                 columns.Bound(o => o.Appsite.ID).Hidden();
                 columns.Bound(o => o.AccountId).Hidden();
                 columns.Bound(o => o.AccountName).Width("150px").Visible(true).Title(Html.GetResource("AccountName", "CampaignBidConfig"));
                 columns.Bound(o => o.Appsite.Name).Title(Html.GetResource("Name", "AppSite"))
                          .Template(
                     @<text><div class='grid-title-container floating-left'>
                             <span class="trimed-span" title='@item.Appsite.Name' id='AppsiteName'>

                                 @item.Appsite.Name;

                             </span>
                         </div>

                     </text>
                                 ).ClientTemplate("<div class='grid-title-container floating-left'> <span class='trimed-span' title='#= Appsite.Name#' id='AppsiteName'>#= Appsite.Name#</span></div>").Title(Html.GetResource("Name", "AppSite"));
             columns.Bound(o => o.SubPublisher).Title(Html.GetResource("SubPublisher", "CampaignBidConfig"))
             .Template(r => Html.Label("SubPublisher",
             (string.IsNullOrEmpty(r.SubPublisher) || r.SubPublisher == null) ? Html.GetResource("All", "CampaignAssignAppsites") : r.SubPublisher, new { id = "SubPublisher" }).ToString())
             .Width("100px");
             columns.Bound(o => o.SubPublisherId).Hidden();
             columns.Bound(o => o.AppsitePricingModel).Title(Html.GetResource("AppsitePricingModelDisplay", "BidConfig"));
             columns.Bound(o => o.Bid).Title(Html.GetResource("Bid", "Campaign")).Template(
             r => Html.AdFalconTextBox("Bid" + r.ID, r.Bid.ToString("F3"), new
             {
                 @class = "required text-box ",
                 maskType = "decimal",
                 onchange = "BidValue_Changed(this);",
                 onfocus = "onBid_select(this);",
                 data = "ddlReason",

                 onkeypress = "onbidpress(event,this)"
             }).ToString() +
             "<span class='field-validation-error' style='display: none;'><span>" + Html.GetResource("CurrencyMsg", "ResourceSet") + "</span></span>"
             //  Html.AdFalconValidationMessage("Bid" + r.ID).ToString()
             )
             .HtmlAttributes(new { @class = "small-big-field", style = "width: 100px ;  " })
             .ClientTemplate(
             Html.AdFalconTextBox("Bid", "", new
             {
                     //    @class = "required text-box input-validation-error",
                     maskType = "decimal",
                 onchange = "BidValue_Changed(this);",
                 onfocus = "onBid_select(this);",
                 data = "ddlReason",

                 onkeypress = "onbidpress(event,this)",
                 style = "width: 100px ;  "
             }).ToString()
             +
             "<span  class='field-validation-error' style='display: none;'><span>" + Html.GetResource("CurrencyMsg", "ResourceSet") + "</span></span>"

             //  Html.AdFalconValidationMessage("Bid").ToString()
             )
             .HtmlAttributes(new { @class = "small-big-field", style = "width: 100px ;  " });
             columns.Template(@<text>
                 <div id='DeleteButton' style='display:block'><a class='t-button t-button-icon t-button-bare' onclick='ShowConfirmationDialog(this);'><span class='t-icon t-delete'></span></a></div>
             </text>)
             .HtmlAttributes(new { @class = "go-center" }).ClientTemplate("<div id='DeleteButton' style='display:block' ><a class='t-button t-button-icon t-button-bare' type='button' onclick='ShowConfirmationDialog(this);'><span class='t-icon t-delete'></span></button></div>").HtmlAttributes(new { @class = "go-center" }).Width("30px");
                 columns.Bound(o => o.SubAppsiteId).Hidden();

             })
             .DataBinding(dataBinding =>
             {
                 // dataBinding.Server().Select("GetCampaignBidConfigs", "Campaign");
                 dataBinding.Ajax().Select("GetCampaignBidConfigs", "Campaign");

             }).ClientEvents(events => events.OnComplete("CampaignBidGrid_onComplete")).ClientEvents(e => e.OnDataBinding("CampaignBidGrid_OnDataBinding")).ClientEvents(e => e.OnDataBound("CampaignBidConfigList_OnDataBound")).ClientEvents(e => e.OnCommand("Grid_onCommand"))
             .Scrollable(scrolling => scrolling.Enabled(false)).EnableCustomBinding(true))*@
    </div>



</div>

<script language="javascript" type="text/javascript">


    function ShowAdvancedSearch() {

        if (!$("#tr_one_Advanced_Search").is(":visible")) {
            $("#adv").attr("class", "minimize");
            $("#search").attr("style", "height:150px;width:100%");

            $("#tr_one_Advanced_Search").show();
            $("#tr_two_Advanced_Search").show();
        } else {
            $("#adv").attr("class", "maximize");
            $("#search").attr("style", "height:80px;width:100%");

            $("#tr_one_Advanced_Search").hide();
            $("#tr_two_Advanced_Search").hide();

            $("#tr_one_Advanced_Search input").val("");
            $("#tr_two_Advanced_Search input").val("");
            $("#TypeId option:eq(0)").attr("selected", true);
        }

    }

    $(document).ready(function () {

        $("#ConfirmationDialog").dialog({

            resizable: false,
            draggable:false,
          //  height: 150,
            modal: true,
            autoOpen: false,
            showCloseButton: false,

            title: ConfriamtionBoxTitle,

        });


        $('#AppSites_Items').removeAttr('multiple');
        $('#Accounts').removeAttr('multiple');
        //  SetBidClientRegExp();
        SetGridHieght();

        //$("#CampaignBidConfigList tbody").find(".t-no-data").remove();

        //GetCampaignBidConfigData();
        localInitilizeCampainBidConfig();

    });

    function CampaignBidGrid_onComplete(e) {

        if (e.name == "dataBinding") {
            $('#DeletedCampaignBidConfigs').val('');
            $('#InserteCampaignBidConfigs').val('');//;
            $('#UpdatedCampaignBidConfiges').val('');
        }
        SetGridHieght();

    }

    function Grid_onCommand(e) {

        //var $forms = $('#CampaignBidConfigListform');

        //
        //$.each($forms, function (key, value) {

        //    // enable validation when an input loses focus.
        //    var settings = $.data(value, 'validator').settings;
        //    settings.onfocusout = function (element) { $(element).valid(); };
        //    settings.onfocusin = function (element) { $(element).valid(); };
        //});
    }
    function CampaignBidGrid_OnDataBinding(e) {

        SetGridHieght();



    }
    function CampaignBidConfigList_OnDataBound(sender, args) {

        var grid = $("#CampaignBidConfigList").data("kendoGrid");
        array = $("#CampaignBidConfigList tbody tr");
        for (var i = 0; i < array.length; i++) {

            dataItem = grid.dataItem(array[i]);
            if (dataItem != undefined) {
                if (dataItem.Bid != "") {
                    $(array[i]).find("#Bid")[0].value = parseBidValue(dataItem.Bid);
                }
                if (dataItem.SubPublisher == "" || dataItem.SubPublisher == null) {
                    $(array[i]).find("td")[5].innerText = '@Html.GetResource("All", "CampaignAssignAppsites")';
                }


                if (dataItem.HideDeleteButton) {
                    $(array[i]).find("#DeleteButton").attr("style", "display:none");
                }
            }
        }

        $('#DeletedCampaignBidConfigs').val('');
        $('#InserteCampaignBidConfigs').val('');//;
        $('#UpdatedCampaignBidConfiges').val('');
    }

    function parseBidValue(value) {
        return parseFloat(value).toFixed(3);
    }

    function localInitilizeCampainBidConfig() {
        var pagingControls = [];
        jQuery('input[data-date="true"]')
            .daterangepicker({ dateFormat: '@ArabyAds.AdFalcon.Web.Controllers.Utilities.Config.ClientShortDateFormat', posX: 295, posY: 295 });
    }

    function GetSiteSearchModelCriteria() {
        var appSiteSearchModel = new Object();
        appSiteSearchModel.DateFrom = $('#DateFrom').val();
        appSiteSearchModel.DateTo = $('#DateTo').val();
        appSiteSearchModel.IgnoreIsPrimaryUser = true;
        appSiteSearchModel.TypeId = $('#TypeId').val();
        appSiteSearchModel.AppSiteName = $('#AppSiteName').val();
        appSiteSearchModel.Name = $('#Name').val();
        appSiteSearchModel.Email = $('#Email').val();
        appSiteSearchModel.AccountId = $('#AccountId').val();
        appSiteSearchModel.SubPublisher = $("#SubPublisher").val();
        return appSiteSearchModel;
    }

    var getUsersListActionUrl = '@Url.Action("AccountSearch", "Campaign")';
    function getUsersList(pageNum, pageSize) {
        resetPageination('AppSites_Items');
        pageSize = 10;
        $('#AppSites_Items').empty();
        $('#subPublishers').empty();
        $('#Accounts').empty();

        Spinner = getSpinnerObj(); //getSpinnerType("form");
        Spinner.showSpinner();

        var appSiteSearchModel = GetSiteSearchModelCriteria();// new Object();
        appSiteSearchModel.Page = pageNum;
        appSiteSearchModel.Size = pageSize;

        $.ajax({
            type: 'POST',
            data: appSiteSearchModel,
            url: getUsersListActionUrl,
            success: function (data) {
                Spinner.hideSpinner();
                rebindAccountList(data.Items);
                getNumberOfRows(data.TotalCount, "Accounts");

            }
        });

    }

    var getAppSubPublishersUrl = '@Url.Action("GetAppSubPublishers", "Campaign")';
    function OnSelectAppSite(sender) {

        selected = $('#AppSites_Items :selected')[0];
        appsiteId = selected.value;
        appsiteText = selected.text;
        Spinner.showSpinner();
        subPublisherId = $("#SubPublisher").val();

        $.ajax({
            type: 'POST',
            data: {
                AppSiteId: appsiteId,
                SubPublisherId: subPublisherId
            },
            url: getAppSubPublishersUrl,
            success: function (data) {
                rebindSubPublishers(data);
                Spinner.hideSpinner();
            }
        });

    }

    function OnSelecAccounts(sender) {

        $('#AppSites_Items').empty();
        $('#subPublishers').empty();
        GetAppSiteList(1, 10);
        resetPageination('AppSites_Items');
    }
    var getAppsUrl = '@Url.Action("GetAppSitesByAccountId", "Campaign")';

    function GetAppSiteList(pageNum, pageSize) {

        selected = $('#Accounts :selected')[0];
        accountId = selected.value;
        var appSiteSearchModel = GetSiteSearchModelCriteria();// new Object();
        appSiteSearchModel.Page = pageNum;
        appSiteSearchModel.Size = pageSize;
        appSiteSearchModel.IgnoreIsPrimaryUser = true;
        appSiteSearchModel.AccountId = accountId;
        Spinner.showSpinner();

        $.ajax({
            type: 'POST',
            data: appSiteSearchModel,
            url: getAppsUrl,
            success: function (data) {
                rebindAppsites(data.Items);
                Spinner.hideSpinner();
                getNumberOfRows(data.TotalCount, "AppSites_Items");
            }
        });
    }

    function rebindAppsites(apps) {

        $('#AppSites_Items').empty();
        $.each(apps, function (index, value) {
            $('#AppSites_Items').append($('<option>').text(value.Name).val(value.Id));
        });
    }

    function SetGridHieght() {
        if ($("#CampaignBidConfigList tbody tr").length > 5) {
            $("#gridDivCampaignBidConfig").attr("style", "margin-top:20px;width:795px;height:250px;overflow:scroll;");
        }
    }

    function selectSubPublishers(priceModel) {
        SetGridHieght();
        var selectedSubpublisher = jQuery("#subPublishers :selected");
        selectedAppsite = jQuery('#AppSites_Items :selected');
        selectedAccount = jQuery('#Accounts :selected');
        subPiblisherId = selectedSubpublisher.val();
        if (subPiblisherId == '')
            subPiblisherId = null;
        var list = [];
        var grid = $("#CampaignBidConfigList").data("kendoGrid");
        selectedSubpublisher.each(function (i, selected) {
            if (IsAdded(selectedAccount.val(), subPiblisherId, selectedAppsite.val()) == null) {

                dataItem = { "AccountId": selectedAccount.val(), "AccountName": selectedAccount.text(), "SubPublisherId": subPiblisherId, "AppsitePricingModel": priceModel, "SubPublisher": $(selected).text(), "Bid": 0, "SubAppsiteId": typeof ($(selected).attr("subsiteid")) != "undefined" ? $(selected).attr("subsiteid") : "" };
                dataItem.Appsite = { ID: selectedAppsite.val(), "Name": selectedAppsite.text() };
                $("#CampaignBidConfigList tbody").find(".t-no-data").remove();
                dataItem.IsAdded = true;
                grid.dataSource.insert(dataItem);
                initilizeFormValidationForDynamicContent('CampaignBidConfigListform');
                //var $forms = $('#CampaignBidConfigListform');
                //$.each($forms, function (key, value) {
                //    // enable validation when an input loses focus.
                //    var validator = $.data(value, 'validator');
                //    if (validator) {
                //        return validator;
                //    }

                //    $(value).attr('novalidate', 'novalidate');
                //    validator = new $.validator({

                //    }, value);
                //    var settings = validator.settings;

                //    settings.onfocusout = function (element) { $(element).valid(); };
                //    settings.onfocusin = function (element) { $(element).valid(); };

                //    $.data(value, 'validator', validator);
                //});

                //
                //var validator = $.data($("#Bid")[0], 'validator');
                //if (validator) {
                //    return validator;
                //}

                //// Add novalidate tag if HTML5.
                //$("#Bid").attr('novalidate', 'novalidate');

                ////HERE it is creating a new one using the constructor
                //validator = new $.validator({
                //    required: true
                //}, $("#Bid")[0]);

                //var settings = validator.settings;
                //settings.onfocusout = function (element) { $(element).valid(); };
                //settings.onfocusin = function (element) { $(element).valid(); };
                //$.data($("#Bid")[0], 'validator', validator);



                list[i] = dataItem;
                CampaignBidConfigNotCompleted = true;
            }
        });

        getAssignedAppsites();

    }

    function rebindSubPublishers(subsites) {

        var container = jQuery("#subPublishers");
        container.empty();

        container.append($('<option>').text("All").val(null));
        $.each(subsites, function (index, value) {

            container.append($('<option SubSiteId=\'' + value.Id + '\'>').text(value.SubPublisherId).val(value.SubPublisherId));
        });
    }

    function rebindAccountList(apps) {
        $('#Accounts').empty();
        $.each(apps, function (index, value) {
            $('#Accounts').append($('<option>').text(value.AccountName).val(value.AccountId));
        });
    }

    var updatedArrary = new Array();
    // AliD review
    function getUpdated(rowUpdated, bidValue) {

        var grid = $("#CampaignBidConfigList").data("kendoGrid");
        updatedData = grid.dataItem(rowUpdated);
        if (updatedData == undefined) {//incase modify new item
            for (var i = 0; i < grid.insertedDataItems().length; i++) {
                dataItem = grid.insertedDataItems()[i];
                var subPiblisherId = rowUpdated.find("td")[6].innerText;
                if (subPiblisherId == '')
                    subPiblisherId = null;
                if (dataItem.AccountId == rowUpdated.find("td")[2].innerText && dataItem.SubPublisherId == subPiblisherId && dataItem.Appsite.ID == rowUpdated.find("td")[1].innerText) {
                    dataItem.Bid = bidValue;
                }
            }
            getAssignedAppsites();
            return;
        }
        updatedData.Bid = bidValue;
        var isExist = false;
        for (var i = 0; i < updatedArrary.length; i++) {
            if (rowUpdated.ID == updatedArrary[i].ID) {
                updatedArrary[i] = updatedData;
                isExist = true;
            }
        }
        if (!isExist) {
            updatedArrary[updatedArrary.length] = updatedData;
        }
        $('#UpdatedCampaignBidConfiges').val(jQuery.toJSON(updatedArrary));

        if (updatedArrary.length > 0)
            CampaignBidConfigNotCompleted = true;
    }

    function getAssignedAppsites() {

        var grid = $('#CampaignBidConfigList').data("kendoGrid");
        if (grid == null)
            return;

        var inserted = new Array();
        var deletedIPRangeIds = '';

        var data = grid.dataSource.data();
        var datads = grid.dataSource._destroyed;
        var InsertedIds = '';
        for (var idx = 0; idx < data.length; idx++) {
            if (data[idx].IsAdded) {

                inserted[inserted.length] = data[idx];
                InsertedIds += ',' + data[idx].ID;

            }
        }

        for (var idx = 0; idx < datads.length; idx++) {

            deletedIPRangeIds += '&' + datads[idx].ID;

        }


        if (!(InsertedIds.length > 0)) {
            $('#InserteCampaignBidConfigs').val(InsertedIds);
        }
        else {
            $('#InserteCampaignBidConfigs').val(jQuery.toJSON(inserted));

        }
        $('#DeletedCampaignBidConfigs').val(deletedIPRangeIds);
        //if (grid.changeLog.dirty()) {
        //    var inserted = new Array();
        //    var deletedIPRangeIds = '';
        //    for (var i = 0; i < grid.changeLog.inserted.length; i++) {
        //        inserted[inserted.length] = grid.changeLog.inserted[i];
        //    }

        //    for (x = 0; x < grid.changeLog.deleted.length; x++) {
        //        if (typeof (grid.changeLog.deleted[x]) != "undefined") {
        //            deletedIPRangeIds += '&' + grid.changeLog.deleted[x].ID;// grid.changeLog.deleted[x].Appsite.ID + "," + grid.changeLog.deleted[x].SubPublisherId;
        //        }
        //    }
        //    $('#InserteCampaignBidConfigs').val(jQuery.toJSON(inserted));//;JSON.stringify(inserted));
        //    $('#DeletedCampaignBidConfigs').val(deletedIPRangeIds);
        //} else {

        //    $('#DeletedCampaignBidConfigs').val("");
        //    $('#InserteCampaignBidConfigs').val("");
        //}
          //SetBidClientRegExp();
    }

    function deleteAssignedAppsites(elem) {

        var grid = $("#CampaignBidConfigList").data("kendoGrid");
        var tr = $(elem).parents('tr');
        //delete the row
        grid.removeRow(tr);

        getAssignedAppsites();

    }

    function ShowConfirmationDialog(elem) {

        var name = $(elem).parents('tr').find("#AppsiteName").text();
        if (name.length > 30)
            name = name.substring(0, 30) + "..";
        name = " " + name;
        $("#ConfirmationDialog").dialog({

            open: function () {
                $(this).html(Confirmation.format(name));

            },
            showCloseButton: false,

            buttons: [
            {
                text: yesbtn,
                click: function () {

                    deleteAssignedAppsites(elem);
                    $(this).dialog("close");

                }
            },
            {
                text: nobtn,
                click: function () {
                    $(this).dialog('close');

                }
            },

            ]
        });

        $("#ConfirmationDialog").dialog("open");

    }

    function onBid_select(elem) {

        $(elem).select();
        $(elem).attr("isSelectContent", true);// = true;
    }

    function BidValue_Changed(elem) {

        onbidchange(elem);

        var grid = $("#CampaignBidConfigList").data("kendoGrid");
        var tr = $(elem).parents('tr');
        isvalidBid = validateBidValue(elem, elem.value);
        if (isvalidBid) {
            elem.value = parseFloat(elem.value).toFixed(3);
        }
        // elem.value = parseFloat(elem.value).toFixed(2);
        if (isvalidBid) {
            getUpdated(tr, elem.value);
        }


    }

    function IsAdded(accountId, subPiblisherId, appSiteId) {
        var grid = $('#CampaignBidConfigList').data("kendoGrid");
        if (grid == null)
            return null;

        var inserted = new Array();
        var deletedIPRangeIds = '';

        var data = grid.dataSource.data();
        var datads = grid.dataSource._destroyed;
        var InsertedIds = '';
        for (var idx = 0; idx < data.length; idx++) {
            if (data[idx].IsAdded) {

                inserted[inserted.length] = data[idx];
                //InsertedIds += ',' + data[idx].ID;
                if (data[idx].SubPublisherId == subPiblisherId && data[idx].Appsite.ID == appSiteId) {
                    return true;
                }

            }
        }
        for (var idx = 0; idx < inserted.length; idx++) {
            if (inserted.AccountId == accountId && inserted.SubPublisherId == subPiblisherId && inserted.Appsite.ID == appSiteId) {
                 return dataItem;
             }
        }
        for (var y = 0; y < datads.length; y++) {

            if (datads[y].SubPublisherId == subPiblisherId && datads[y].Appsite.ID == appSiteId) {
                return false;
            }
        }

        //if (grid.changeLog.dirty()) {
        //    for (var i = 0; i < grid.changeLog.inserted.length; i++) {
        //        if (grid.changeLog.inserted[i].AccountId == accountId && grid.changeLog.inserted[i].SubPublisherId == subPiblisherId && grid.changeLog.inserted[i].Appsite.ID == appSiteId) {
        //            return dataItem;
        //        }
        //    }

        //    for (var y = 0; y < grid.changeLog.deleted.length; y++) {
        //        if (typeof (grid.changeLog.deleted[y]) != "undefined") {
        //            if (grid.changeLog.deleted[y].AccountId == accountId && grid.changeLog.deleted[y].SubPublisherId == subPiblisherId && grid.changeLog.deleted[y].Appsite.ID == appSiteId) {
        //                return null;
        //            }
        //        }
        //    }
        //}
        array = $("#CampaignBidConfigList tbody tr");
        for (var i = 0; i < array.length; i++) {
            dataItem = grid.dataItem(array[i]);
            if (dataItem != undefined) {
                if (dataItem.AccountId == accountId && dataItem.SubPublisherId == subPiblisherId && dataItem.Appsite.ID == appSiteId) {
                    return dataItem;
                }
            }
        }
        return null;
    }



    function validateBidValue(elem, bidValue) {
        //var isBid = new RegExp('^\\$?\\d{1,5}(\\.(\\d{1,3}))?$');
        //isValidBid = isBid.test(bidValue);
        isValidBid = IsBidValidDecimalExpression(bidValue);
        //if (!isValidBid)
        //jQuery(elem).parents('td').find('.field-validation-error').show();//
        //else {
        //    jQuery(elem).parents('td').find('.field-validation-error').hide();//
        //}
        return isValidBid;
    }

    var getPriceModelUrl = '@Url.Action("GetAppSitePriceModel", "Campaign")';

    function onSelectSubPublishers() {

        var selectedAppsite = jQuery('#AppSites_Items :selected');
        var data = new Object();
        data.id = selectedAppsite.val();

        $.ajax({
            type: 'POST',
            data: data,
            url: getPriceModelUrl,
            success: function (data) {
                selectSubPublishers(data.PriceModel);
            }
        })

    }

    var GetCampaignBidConfigDataUrl = "@Url.Action("CampaignBidConfigData", "Campaign")";
    function GetCampaignBidConfigData() {

        var Data = new Object();
        Data.id = $("#CampaignId").val();
        Data.adGroupId = $("#AdGroupId").val();

        $.ajax({
            type: 'POST',
            data: Data,
            url: GetCampaignBidConfigDataUrl,
            success: function (data) {

                var grid = $("#CampaignBidConfigList").data("kendoGrid");
                grid.dataBind(data.CampaignBidConfigList);
                $("#CampaignBidConfigList tbody").find(".t-no-data").remove();
                SetGridHieght();
            }
        });

    }

    //function CollectCampaignBidConfigData() {

    //    var campaignBidConfigGrid = $("#CampaignBidConfigs").data("kendoGrid");
    //    var campaignBidConfigsGridRowsArray = $("#CampaignBidConfigs tbody tr");

    //    var CampaignBidConfigList = $("#CampaignBidConfigList").data("kendoGrid");
    //    var CampaignBidConfigListArray = $("#CampaignBidConfigList tbody tr");

    //    for (var i = 0 ; i < campaignBidConfigsGridRowsArray.length ; i++) {
    //        var campaignBidConfigsDataItem = campaignBidConfigGrid.dataItem(campaignBidConfigsGridRowsArray[i]);
    //        var found = false;

    //        if (campaignBidConfigsDataItem != undefined) {

    //            var campaignBidConfigGridDataItemAccountId = campaignBidConfigsDataItem.AccountId;
    //            var campaignBidConfigGridDataItemID = campaignBidConfigsDataItem.ID;
    //            var campaignBidConfigGridDataItemSubPublisher = campaignBidConfigsDataItem.SubPublisherId;
    //            var item = IsAdded(campaignBidConfigsDataItem.AccountId, campaignBidConfigGridDataItemSubPublisher, campaignBidConfigsDataItem.Appsite.ID);

    //            if (item != null) {
    //                var dataItem = campaignBidConfigGrid.dataItem(campaignBidConfigsGridRowsArray[i]);

    //                var index = findIndex(dataItem.Appsite.ID);

    //                dialogBidTextBox = $(campaignBidConfigsGridRowsArray[i]).find("#Bid");
    //                bidTextBox = $(CampaignBidConfigListArray[index]).find("#Bid");

    //                if (bidTextBox.length == 0)
    //                    bidTextBox = $(CampaignBidConfigListArray[index]).find("#Bid" + dataItem.ID);


    //                if (bidTextBox.val() != dialogBidTextBox.val()) {
    //                    bidTextBox.val(dialogBidTextBox.val());
    //                    bidTextBox.attr("value", bidTextBox.val());
    //                    bidTextBox.value = bidTextBox.val();
    //                    BidValue_Changed(bidTextBox);
    //                }



    //            } else {
    //                CampaignBidConfigList.insertRow(campaignBidConfigsDataItem);
    //            }

    //        }
    //    }

    //}
    //function findIndex(AppSiteID) {

    //    var CampaignBidConfigList = $("#CampaignBidConfigList").data("kendoGrid");
    //    var CampaignBidConfigListArray = $("#CampaignBidConfigList tbody tr");



    //    // loop througth tap grid objects , if appsite Id is found then return it's index
    //    for (var i = 0 ; i < CampaignBidConfigListArray.length ; i++) {
    //        var CampaignBidConfigListDataItem = CampaignBidConfigList.dataItem(CampaignBidConfigListArray[i]);
    //        if (CampaignBidConfigListDataItem != undefined) {
    //            var CampaignBidConfigListDataItemAppSiteID = CampaignBidConfigListDataItem.Appsite.ID;

    //            if (CampaignBidConfigListDataItemAppSiteID == AppSiteID)
    //                return i;
    //        }

    //    }

    //    // loop througth tap grid rows , if appsite Id is found then return it's index
    //    // we loop through rows here, because the new configs don't exist in data source
    //    for (var i = 0 ; i < CampaignBidConfigListArray.length ; i++) {
    //        var AppSiteIDInList = $(CampaignBidConfigListArray[i]).eq(1).val();
    //        if (AppSiteIDInList != undefined) {
    //            if (AppSiteIDInList == AppSiteID)
    //                return i;
    //        }

    //    }

    //}

</script>
