@using ArabyAds.AdFalcon.Services.Interfaces.DTOs.AppSite
@using ArabyAds.AdFalcon.Services.Interfaces.DTOs.Campaign
@using ArabyAds.AdFalcon.Services.Interfaces.DTOs.Core
@using ArabyAds.AdFalcon.Services.Interfaces.DTOs.Reports
@{
    
    List<CampaignListDto> campaigns = ViewData["Campaigns"] as List<CampaignListDto>;
    List<SelectListItem> campaignsList = new List<SelectListItem>();

    foreach (var campaign in campaigns)
    {
        SelectListItem item = new SelectListItem();
        item.Value = campaign.Id.ToString();
        item.Text = campaign.Name;
        campaignsList.Add(item);
    }

    SelectListItem allItem = new SelectListItem();
    allItem.Value = "";
    allItem.Selected = true;
    allItem.Text = Html.GetResource("AllCampaigns", "AdChart");

    campaignsList.Add(allItem);

    List<SelectListItem> periodListItem = new List<SelectListItem>()
    {
      new SelectListItem()
      {
        Value = "0",
        Text = Html.GetResource("Today","Chart"),
        Selected = true   
      } ,
      new SelectListItem()
      {
        Value = "1",
        Text = Html.GetResource("Yesterday","Chart"),
      },
      new SelectListItem()
      {
        Value = "2",
        Text = Html.GetResource("OneWeek","Chart"),
      },
      
      new SelectListItem()
      {
        Value = "3",
        Text = Html.GetResource("OneMonth","Chart"),
      },
       new SelectListItem()
      {
        Value = "4",
        Text = Html.GetResource("LastMonth","Chart"),
      }         
    };

    SelectListItem optionalItem = new SelectListItem();
    optionalItem.Value = "";
    optionalItem.Text = Html.GetResource("ByCountry", "Chart");

    ArabyAds.AdFalcon.Services.Interfaces.Services.ICountryService countryService = ArabyAds.Framework.IoC.Instance.Resolve<ArabyAds.AdFalcon.Services.Interfaces.Services.ICountryService>();
    List<SelectListItem> countriesList = new List<SelectListItem>();
    countriesList.Add(optionalItem);

    List<ArabyAds.AdFalcon.Services.Interfaces.DTOs.Core.CountryDto> countriesDtos = countryService.GetAll().ToList();

    foreach (var item in countriesDtos)
    {
        var selectItem = new SelectListItem();
        selectItem.Value = item.ID.ToString();
        selectItem.Text = item.Name.ToString();
        countriesList.Add(selectItem);
    }
}
<script language="javascript" type="text/javascript">

    jQuery(document).ready(function () {

        SetSelectedTap("ListMenuAdvertiser");
    });
</script>
<div class="data-row section-container">
    <br />
    <div class="dashboard-left-side floating-left">
        <div class="data-row data-container">
            <div class="label-container">
                <span class="field-title required-field">@Html.GetResource("AdTitle", "AdChart")</span>
            </div>
            <div class="field-container">
                @Html.DropDownList("list", campaignsList, new { onchange = "getChartImage();fillGrid();" })
            </div>
            <div class="data-row data-container">
                <div class="label-container">
                    <span class="field-title required-field">@Html.GetResource("Period", "Chart")</span>
                </div>
                <div class="field-container">
                    @Html.DropDownList("period", periodListItem, new { onchange = "getChartImage();fillGrid();" })
                </div>
                <div class="label-container">
                    <span class="field-title required-field">@Html.GetResource("From", "Global")</span>
                </div>
                <div class="field-container" id="fromPeriond">
                    @ArabyAds.Framework.Utilities.Environment.GetServerTime().Date.ToShortTimeString()
                </div>
                <div class="label-container">
                    <span class="field-title required-field">@Html.GetResource("To", "Global")</span>
                </div>
                <div class="field-container" id="toPeriond">
                    @ArabyAds.Framework.Utilities.Environment.GetServerTime().ToShortTimeString()
                </div>
            </div>
            <div class="data-row">
                <img id="chartImage" class="chartImage" src="@Url.Action("chartcontrol", "dashboard", new { periodOption = 0, type = "ad", Id = "", metricCode = (ViewData["Metrics"] as List<MetricDto>).First().Code })" />
            </div>
        </div>
    </div>
    <div class="dashboard-right-side floating-left">
        <div class="grid-container data-row">

            @(Html.Kendo().Grid((ViewData["Metrics"] as List<MetricDto>))
        .Name("Metrics").Columns(columns =>
        {
            columns.Bound(p => p.Name).ClientTemplate( "<div class='colored-box'></div>" + "#=Name.Value#");
            columns.Bound(p => p.Code).ClientTemplate( Html.GetRadioButton("metric", "", false, "", "getChartImage", "#=Code#").ToHtmlString());
        }))

        </div>
    </div>
    @Html.RegisterScriptBlock(string.Format("var chartControlImageSrc='{0}'", Url.Action("ChartControl", "dashboard", new { type = "ad" })))
    <br />
    <div class="data-row section-container">
        <div class="data-container floating-right dashboard-filter-container">
            <div class="label-container">
                <span class="field-title required-field">@Html.GetResource("CountryFilter", "AppChart")</span>
            </div>
            <div class="field-container">
                @Html.DropDownList("country", countriesList.ToList(), new { onchange = "fillGrid();" })
            </div>
        </div>
        <h3>@Html.GetResource("ByGeoLocation", "Chart")</h3>
        <br />

        @(Html.Kendo().Grid((ViewData["AdGeoLocation"] as List<AdGeoLocationDto>))
                    .Name("GeoLocationGrid")
            .Columns(columns =>
            {
                columns.Bound(o => o.CountryName).Title(Html.GetResource("CountryName", "AppChart")).HtmlAttributes(new { Width = "50px" });
                columns.Bound(o => o.CampaignName).Title(Html.GetResource("CampaignName", "AdChart"));
                columns.Bound(o => o.Impress).Title(Html.GetResource("Impress", "AdChart"));
                columns.Bound(o => o.Clicks).Title(Html.GetResource("Clicks", "AdChart"));
                columns.Bound(o => o.CtrText).Title(Html.GetResource("CTR", "AdChart"));
                columns.Bound(o => o.AvgCPCText).Title(Html.GetResource("AvgCPC", "AdChart"));
                columns.Bound(o => o.SpendText).Title(Html.GetResource("Spend", "AdChart"));
            })
            .DataSource(dataBinding =>
            {

                // dataBinding.Ajax().Read("AdGeoLocation", "dashboard").da;
                dataBinding.Ajax().Read(read => read.Action("AdGeoLocation", "dashboard").Data("geoLocationDataBindingData")).PageSize(ArabyAds.AdFalcon.Web.Controllers.Utilities.Config.PageSize);

            })
                .Scrollable(scrolling => scrolling.Enabled(false))
                .EnableCustomBinding(true).Pageable(paging => paging


            .Input(false)
            .Numeric(true)
            .Info(true)
            .PreviousNext(true)
            .Refresh(true)

            .Position(GridPagerPosition.Bottom))

            .Groupable(grouping => grouping.Enabled(false)))
 
    </div>
    <br />
    @Html.RegisterScriptBlock(string.Format("var exportUrl='{0}'", Url.Action("AdGeoLocationExport", "dashboard")))
    <div class="data-row">
        <a href="javascript:void(0)" onclick='geoLocationExport("excel")' class="export-icon-excel floating-left">
        </a><a href="javascript:void(0)" onclick='geoLocationExport("csv")' class="export-icon-cvs floating-left">
        </a><a href="javascript:void(0)" onclick='geoLocationExport("pdf")' class="export-icon-pdf floating-left">
        </a>
    </div>
    <br />
    <div class="data-row section-container">
        <h3>@Html.GetResource("AdPerformanceTitle", "AdChart")</h3>
        @*@Html.RenderAction("adperformance", "dashboard")*@
        @await Component.InvokeAsync(nameof(ArabyAds.AdFalcon.Web.Controllers.Core.ViewComponents.Dashboard.adperformance))

    </div>
</div>