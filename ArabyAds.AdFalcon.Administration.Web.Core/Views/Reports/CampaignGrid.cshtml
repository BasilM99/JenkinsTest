@using ArabyAds.AdFalcon.Services.Interfaces.DTOs.Reports

@model ArabyAds.AdFalcon.Web.Controllers.Model.Report.GridReportModel
@{
    var columnsList = new List<GridColumnSettings>()
{
    new GridColumnSettings
    {
        Member = "DateRange",
       Title = Html.GetResource("DateRange", "Report"),
    },
    new GridColumnSettings
    {
            Member = "Name",
            Title = Html.GetResource("Name", "CampaignReport")
    },
    new GridColumnSettings
          {
              Title = Html.GetResource("CampaignName", "AdChart"),
              Member  = "SubName"
          },
   new GridColumnSettings
    {
        Member = "Impress",
        Title = Html.GetResource("Impress", "AdChart"),
    },

        new GridColumnSettings
    {
        Member = "UniqueImp",
        Title = Html.GetResource("UniqueImp", "Report")


    },
     new GridColumnSettings
    {
        Member = "Clicks",
        Title = Html.GetResource("Clicks", "AdChart"),
    },
        new GridColumnSettings
    {
        Member = "UniqueClicks",
        Title =Html.GetResource("UniqueClicks", "Report")


    },
     new GridColumnSettings
    {
        Member = "CtrText",
        Title = Html.GetResource("CTR", "AdChart"),
    },
       new GridColumnSettings
    {
        Member = "AvgCPCText",
        Title = Html.GetResource("AvgCPC", "AdChart"),
    },
        new GridColumnSettings
    {
        Member = "SpendText",
        Title = Html.GetResource("Spend", "AdChart"),
    },
          //new GridColumnSettings
          //{
          //    Title = Html.GetResource("SubAppSite", "AppSite"),
          //    Member  = "SubAppSiteName"
          //}
          //    ,
          new GridColumnSettings
          {
               Title = Html.GetResource("WinRateText", "PMPDeal"),
              Member  = "WinRate",

          }
          ,
          new GridColumnSettings
          {
          Title = Html.GetResource("DisplayRateText", "PMPDeal"),
              Member  = "DisplayRate",

          }

    };


}
@{
    string CustomWidth = string.Empty;
    if (Model.GridColumnSettings.Count > 13 && Model.GridColumnSettings.Count <= 16)
    {
        CustomWidth = ";width:1500px;";
    }
    else if (Model.GridColumnSettings.Count > 30)
    {
        CustomWidth = ";width:4500px;";
    }
    else if (Model.GridColumnSettings.Count > 20)
    {
        CustomWidth = ";width:3000px;";
    }
    else if (Model.GridColumnSettings.Count > 16)
    {
        CustomWidth = ";width:2000px;";
    }
    else
    {
        CustomWidth = ";width:auto";
    }
}
    <div class="grid-container" id="gridSection" style="overflow:visible; @CustomWidth">

        @(Html.Kendo().Grid(Model.CampData)
                    .Name("ReportGrid")
            .Columns(columns =>
            {
                columns.LoadSettings(Model.GridColumnSettings);
            })
            .DataSource(dataBinding =>
            {

                // dataBinding.Ajax().Read("AdGeoLocation", "dashboard").da;
                dataBinding.Ajax().Read(read => read.Action("CampaignReport", "Reports").Data("reportDataBindingData")).Events(e=>e.Error("gridReportError")).PageSize(ArabyAds.AdFalcon.Web.Controllers.Utilities.Config.PageSize);

            })
            .Events(clientEvents => clientEvents.DataBinding("gridReportSuccess").DataBound("reportDataBinding"))
            .Scrollable(scrolling => scrolling.Enabled(false))
            .Selectable().Pageable(paging => paging


            .Input(false)
            .Numeric(true)
            .Info(true)
            .PreviousNext(true)
            .Refresh(true).ButtonCount(10)
            .Position(GridPagerPosition.Bottom))
            .Filterable(filtering => filtering.Enabled(false))
            .Groupable(grouping => grouping.Enabled(false)))

    </div>
<br />
<div class="data-row">
    <a href="javascript:void(0)" onclick='reportExport("excel")' class="export-icon-excel floating-left">
    </a><a href="javascript:void(0)" onclick='reportExport("csv")' class="export-icon-cvs floating-left">
    </a><a href="javascript:void(0)" onclick='reportExport("pdf")' class="export-icon-pdf floating-left">
    </a>
</div>
@Html.RegisterScriptBlock(string.Format("var reportExportUrl = '{0}';", Url.Action("CampaignReportExport", "Reports"))


+ string.Format("var reportRefrshGridURL = '{0}';", Url.Action("CampaignGrid", "Reports"))


)
