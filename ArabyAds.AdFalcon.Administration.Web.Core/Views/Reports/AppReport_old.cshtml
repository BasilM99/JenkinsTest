@using ArabyAds.AdFalcon.Web.Controllers.Model
@using ArabyAds.AdFalcon.Web.Controllers.Model.Tree
@model ArabyAds.AdFalcon.Web.Controllers.Model.Tree.TreeViewModel

<script type="text/javascript">

    appSiteIdForAppReport = "@(ViewBag.appSiteId)";
    var SaveReportUrl = '@Url.Action("SaveCampaignReport", "Reports")';
    appSiteIdForAppReport = "@(Context.Request.Query["itemId"].ToString())";
    var wait = false;
    $(document).ready(function () {

        if (appSiteIdForAppReport != "")
            $("#advancedCriteria").show();
        else
            $("#advancedCriteria").hide();

        $("#tab" + "@Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.TabId").click();
        $("#ToDate").val('@Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.ToDateString');
        $("#FromDate").val('@Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.FromDateString');
    });

    function SaveReport(run) {
        if (run) {
            generateGoogleReport();
        }
        if ($("#ReportTempName").val() == "") {
            $("html, body").animate({ scrollTop: 0 }, "slow");
        }

        var ObjectModel = ReportdataCollector();
        if ($("#IsActive").is(":checked")) {
            //
            $("#ReportSchedulerDto_PreferedName").removeClass("ValdationIgnored");
            $("#msgReportSchedulerDtoPreferedName").show();
           
            if (ObjectModel.CriteriaOpt == "specific") {
                if (ObjectModel.ItemsList) {
                    // var str_array = ObjectModel.ItemsList.split(',');
                    if (ObjectModel.ItemsList.match(/,/g).length == 1) {
                        $("#ReportSchedulerDto_PreferedName").addClass("ValdationIgnored");
                        $("#msgReportSchedulerDtoPreferedName").hide();

                    }
                    //for (var i = 0; i < str_array.length; i++) {

                    //    str_array[i] = str_array[i].replace(/^\s*/, "").replace(/\s*$/, "");

                    //}

                }
            }
        }
        else {

            $("#ReportSchedulerDto_PreferedName").addClass("ValdationIgnored");
            $("#msgReportSchedulerDtoPreferedName").hide();

        }
        //CampaignReportSchedulingViewModel.ItemsList
        if ($("#ReportTempName").val() == '' || $("#ReportTempName").val() == null || $("#ReportTempName").val().trim() == '') {
            $("#msgReportSchedulerDtoReportTempName").show();
            return false;
        }
        else {

            $("#msgReportSchedulerDtoReportTempName").hide();
        }

        if ($("#reportForm").validate().form() && $("span[id*='URLErrorMsg']:visible").length < 1) {
            if (!wait) {
                $.ajax({
                    type: 'POST',
                    data: ObjectModel,
                    url: SaveReportUrl,
                    success: function (date) {
                        if (date.Result) {
                            showSuccessfullyMessage(date.Message, false);
                            $("#ReportSchedulerHId").val(date.id);
                            wait = false;
                        }
                        else
                            showErrorMessage(date.Message, false);

                    }
                });
            }
        }  
        return false;
    }
</script>
@using (Html.BeginForm("AppReport", "reports", FormMethod.Post, new { id = "reportForm" }))
{

    <div class="data-row section-container">
        <br />
        @{

    List<SelectListItem> summaryByItems = new List<SelectListItem>();

    SelectListItem day = new SelectListItem();
    day.Selected = true;
    day.Text = Html.GetResource("Day", "Report");
    day.Value = "1";

    SelectListItem week = new SelectListItem();
    week.Text = Html.GetResource("Week", "Report");
    week.Value = "2";

    SelectListItem month = new SelectListItem();
    month.Text = Html.GetResource("Month", "Report");
    month.Value = "3";


    SelectListItem accumulated = new SelectListItem();

    accumulated.Text = Html.GetResource("IsAccumulated", "Report");
    accumulated.Value = "4";
    
    
    
    summaryByItems.Add(day);
    summaryByItems.Add(week);
    summaryByItems.Add(month);
    summaryByItems.Add(accumulated);
    if (Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.SummaryBy == 1)
    {
        day.Selected = true;
        accumulated.Selected = false;

    }
    if (Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.SummaryBy == 2)
    {
        week.Selected = true;
        accumulated.Selected = false;
    }
    if (Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.SummaryBy == 3)
    {
        month.Selected = true;
        accumulated.Selected = false;
    }
    if (Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.SummaryBy == 4)
    {
        accumulated.Selected = true;
        //day.Selected = false;
    }


    List<ArabyAds.AdFalcon.Web.Controllers.Model.Action> tabList = new List<ArabyAds.AdFalcon.Web.Controllers.Model.Action>()
    {
        new ArabyAds.AdFalcon.Web.Controllers.Model.Action()
        {
            DisplayText  = Html.GetResource("App","AppReport"),
            IsSelected =  Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.TabId == "App"?true:false,
            Code = "App"
        }
        ,
        new ArabyAds.AdFalcon.Web.Controllers.Model.Action()
        {
            DisplayText  = Html.GetResource("Operator","Report"),
            IsSelected =  Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.TabId == "Operator"?true:false,
            Code = "Operator"
        }
        ,
        new ArabyAds.AdFalcon.Web.Controllers.Model.Action()
        {
            DisplayText  = Html.GetResource("DeviceModel","Report"),
             IsSelected =  Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.TabId == "DeviceModel"?true:false,
            Code = "DeviceModel"
        }
        ,
        new ArabyAds.AdFalcon.Web.Controllers.Model.Action()
        {
            DisplayText  = Html.GetResource("GeoLocation","Report"),
             IsSelected =  Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.TabId == "GeoLocation"?true:false,
            Code = "GeoLocation"
        }

    };
        }
        @await Html.PartialAsync("ReportNavigation", tabList)
    </div>
    @Html.RegisterScriptBlock(string.Format("var MainFilterUrl='{0}';var MainLabel='{1}';", Model.Url, Html.GetResource("Specific", "Global") + " " + Html.GetResource("App", "AppReport")))
    @Html.RegisterScriptBlock(string.Format("var datesErrorMessage='{0}';", Html.GetResource("DatesErrorMessage", "Errors")))
    @Html.Hidden("tabId", @Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.TabId)
    <div id="ReportFormDetails">
      
        @if (Context.Request.Query["IsSchedule"] == "True" || Model.CampaignReportSchaduling.ReportSchedulerDto.ID > 0)
        {
            <h2>
                @Html.GetResource("ReportTempInfo", "Report")
            </h2>
            <div class="section-form-container">
                <div class="section-form-inner-container">
                    <div class="data-row data-container">
                        <div class="label-container">
                            <span class="field-title required-field">@Html.GetResource("Name")</span>
                        </div>
                        <div class="field-container">
                            @Html.AdFalconEditorFor(p => p.ReportTempName)
                            <span id="msgReportSchedulerDtoReportTempName" style="display:none">
                                <span class="validation-arrow field-validation-error">
                                    <span id="ReportTempName-error" class="">@Html.GetResource("RequiredMessage", "ResourceSet")</span>
                                </span>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="section-footer">
            </div>
        }
        <h2>
            @Html.GetResource("TimePerid", "Reports")
        </h2>
        <div class="section-form-container">
            <div class="section-form-inner-container">
                <div class="data-row data-container">
                    @{await Html.RenderPartialAsync("daterangepicker");}
                </div>
            </div>
        </div>
        <div class="section-footer">
        </div>


        <h2>
            @Html.GetResource("Criteria", "Report")
        </h2>
        <div class="section-form-container" id="criteriaContainer">
            <div class="section-form-inner-container">
                <div class="data-row data-container">
                    <div class="label-container ">
                        <span class="field-title required-field">&nbsp;</span>
                    </div>
                    @{

                    var isSelectedAll = false;
                    var isSelectedSpecificApp = false;
                    var islayoutSummery = false;

                    var isDetailed = false;


                    if (Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.CriteriaOpt == "specific")
                    {
                        isSelectedSpecificApp = true;

                        isSelectedAll = false;
                    }
                    else
                    {
                        isSelectedAll = true;
                        isSelectedSpecificApp = false;
                    }
                    if (string.IsNullOrEmpty(Context.Request.Query["itemId"]) )
                    {
                        Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.CriteriaOpt = "specific";
                        isSelectedSpecificApp = true;
                        isSelectedAll = false;
                    }

                    if (Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.Layout == "summary")
                    {
                        islayoutSummery = true;
                    }
                    else
                    {
                        isDetailed = true;
                    }
                    }
                    <div class="field-container">
                        <div class="radio-button-container floating-left iea-rbtn-width-a">
                            @Html.GetRadioButton("criteriaOpt", Html.GetResource("All", "Global"), isSelectedAll, "", "changeAdvancedCriteria", "all", Id: "AllRadio")
                        </div>
                        <div class="radio-button-container floating-left">
                            @(Html.GetRadioButton("criteriaOpt", Html.GetResource("SpecificApp", "AppReport") + "" + Html.GetResource("App", "AppReport"), isSelectedSpecificApp
        , "specificName", "changeAdvancedCriteria", "specific", Id: "SpecificAppSite"))
                        </div>
                    </div>
                </div>
                <div class="data-row data-container">
                    <div class="label-container ">
                        <span class="field-title required-field">&nbsp;</span>
                    </div>
                    <div style="display: none" id="advancedCriteria" class="field-container">
                        @await Html.PartialAsync("Tree", Model)
                    </div>
                </div>
            </div>
        </div>

        <div id="advancedCriteriaContainer" style="display: none">
            <div class="section-footer">
            </div>
            @await Html.PartialAsync("advancedcriteria")
        </div>
        @Html.Hidden("deviceCategory", @Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.DeviceCategory)
        <div class="section-footer">
        </div>

        <h2>
            @Html.GetResource("Layout", "Global")
        </h2>
        <div class="section-form-container">
            <div class="section-form-inner-container">
                <div class="data-row data-container">
                    <div class="label-container ">
                        <span class="field-title required-field">&nbsp;</span>
                    </div>

                    <div class="field-container">
                        <div class="radio-button-container floating-left iea-rbtn-width-a">
                            @Html.GetRadioButton("layout", Html.GetResource("Summary", "Global"), islayoutSummery, "", "showGrouByNameOptionForApp", "summary")
                        </div>
                        <div class="radio-button-container floating-left">
                            @(Html.GetRadioButton("layout", Html.GetResource("Detailed", "Global") + " " + Html.GetResource("App", "AppReport"), isDetailed, "specificName", "showGrouByNameOptionForApp", "detailed", Id: "DetailedRd"))
                        </div>
                    </div>
                </div>


                <div class="data-row data-container">
                    <div class="label-container ">
                        <span class="field-title required-field">@Html.GetResource("SummaryBy", "Global")</span>
                    </div>
                    <div class="field-container">
                        @Html.AdFalconDropDownList("SummaryBy", summaryByItems, new { @onchange = "showHideColmns()" })
                    </div>
                </div>
            </div>
        </div>


        <div class="section-footer">
        </div>



        <h2>
            <div class='grid-title-container floating-left'>
                <span class='trimed-span'>@Html.GetResource("Metrices", "Global")</span>
            </div>
            <div class='grid-cogwheel-container floating-right go-right'>
                <a name='iconImage' onclick='ShowMetricDivSearch()' id='advMetric' class='maximize' style='display: inline;margin-right: 5px;margin-top: 10px;'></a>
            </div>


        </h2>
        <div class="section-form-container">
            <div class="section-form-inner-container" id="MetricDivS">
                @await Html.PartialAsync("metriceColumn", Model.ColumnViewModel)


            </div>
        </div>




        <div class="section-footer">
        </div>

    </div>
                        if (Context.Request.Query["IsSchedule"].ToString() == "True" || Model.CampaignReportSchaduling.ReportSchedulerDto.ID > 0)
                        {
    <h2>
        <div class='grid-title-container floating-left'><span class='trimed-span'>@Html.GetResource("Scheduling", "Report")</span></div><div class='grid-cogwheel-container floating-right go-right'><a name='iconImage' onclick='ShowSchdulingSearch()' id='adv' class='maximize' style='display: inline;margin-right: 5px;margin-top: 10px;' ></a></div>
    </h2>
       
            <div class="section-form-container" id="Schedulingdiv">

                <div class="section-form-inner-container">
                    <div class="data-row data-container">
                        @await Html.PartialAsync("Scheduling", Model.CampaignReportSchaduling)
                    </div>
                </div>
            </div>


            <div class="section-footer">
            </div>
                        }
        @*else
        {

            <div class="section-form-container" style="display:none" id="Schedulingdiv">

                <div class="section-form-inner-container">
                    <div class="data-row data-container">
                        @await Html.PartialAsync("Scheduling", Model.CampaignReportSchaduling)
                    </div>
                </div>
            </div>
        }*@
    

    <div class="data-row go-center">
        <input type="submit" onclick="return generateGoogleReport();" class="btn iee-btn" value="@Html.GetResource("Run", "Report")" />
        @if (Context.Request.Query["IsSchedule"] == "True" || Model.CampaignReportSchaduling.ReportSchedulerDto.ID > 0)
        {
            <input id="Schedulingbutton" type="submit" onclick="return SaveReport(false); return false;" class="primary-btn" value="@Html.GetResource("ReportTempSave", "Report")" />
                <input id="RunAndSavebutton" type="submit" onclick="return SaveReport(true); return false;" class="primary-btn" value="@Html.GetResource("RunAndSave", "Report")" />

        }
    </div>
    <br />
    <div class="data-row">
        <div class="data-row section-container" style="display: none" id="reportViewArea">

            <div class="data-row tab-container">
                <a onclick="changeReportView('areaChart'); generateGoogleChartImage();" id="subTabareaChart" href="javascript:void(0)">
                    <span></span>@Html.GetResource("Chart", "Report")
                </a><a id="subTabareaDetails" onclick="changeReportView('areaDetails');"
                       href="javascript:void(0)" class="first-tab selected">@*<span></span>*@@Html.GetResource("Details", "Report")</a>



                </div>
                <div class="section-form-container" id="areaDetails">
                    <div class="section-form-inner-container" id="GridLayoutDetails" style="overflow:visible   ;overflow-x:auto">

                        @*@Html.RenderAction("AppGrid", "reports");*@
                        @await Component.InvokeAsync(nameof(ArabyAds.AdFalcon.Web.Controllers.Core.ViewComponents.Reports.AppGrid))

                    </div>
                </div>

                <div class="section-form-container" id="areaChart" style="display: none">
                    <div class="section-form-inner-container">
                        <div class="data-row section-container">
                            <br />


                            @*@Html.RenderAction("GAppChart", "reports");*@

                            @await Component.InvokeAsync(nameof(ArabyAds.AdFalcon.Web.Controllers.Core.ViewComponents.Reports.GReportAppChart))

                        </div>
                    </div>

                </div>

            </div>
        </div>
        <div class="spinner-container" style="display: none">
            <img src="@Url.GetImagePath("ajax-loader.gif")" alt="">
        </div>
}
<script defer type="text/javascript">

    $(document).ready(function () {
        changeAdvancedCriteria('', '@Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.CriteriaOpt');

        if ($("#deviceCategory").val() != "platform") {
            $("#deviceTabManuFactor").click();
        }
        showHideColmns();
    });
    function showHideColmns() {
       
        var DataRangeId = $("[customvalue='DateRangeProp']").attr("id");
        var NameId = $("[customvalue='Name']").attr("id");
        var SubNameId = $("[customvalue='SubName']").attr("id");
        HiddenSelectableColumns = 0;
        if ($("#SummaryBy").val() == "4") {
            uncheck(DataRangeId);
        } else {
            check(DataRangeId);
        }

        if (!Radio_IsChecked("#DetailedRd")) {
            uncheck(NameId);
        } else {
            if (($("#tabApp").hasClass("selected")))
                check(SubNameId);
            else
                check(NameId);
        }

        if (($("#tabApp").hasClass("selected"))) {
            uncheck(NameId);

            if (!Radio_IsChecked("#DetailedRd"))
                uncheck(SubNameId);
        } else if (Radio_IsChecked("#DetailedRd")) {
            check(NameId);
            check(SubNameId);
           
        }
        else {
            check(NameId);
            uncheck(SubNameId);
        }

        if (Radio_IsChecked(DataRangeId))
        {
            HiddenSelectableColumns++;
        }

        if (Radio_IsChecked(NameId))
        {
                HiddenSelectableColumns++;
        }

        if (Radio_IsChecked(SubNameId))
        {
                HiddenSelectableColumns++;
        }

        ReportSchdulingmetricColumn = true;
    }

    function autoChangedForTreeAdvanceCriteria(event) {
        var treeName = "advancedCriteria";
        var values = '@Model.CampaignReportSchaduling.ReportSchedulerDto.ReportDto.AdvancedCriteria'.split(",");

        for (var i in values) {
            if (values[i]!='')
            {

                 var match = jQuery("#" + treeName + "Tree").find('li[id=' + values[i] + ']');

        
                    match.each(function () {
                        jQuery.tree.plugins.checkbox.check(this);
                    });

            }
           
        }
        return false;
    }
</script>