@{
    ViewBag.Title = Html.GetResource("Impersonate", "Titles");
}
@model ArabyAds.AdFalcon.Web.Controllers.Model.User.AccountSearchViewModel

    <script language="javascript">
        $(document).ready(function () {
            localAccountSearchInitilizePMP();


        });

        function generateUsersGridForPuplisher() {
            
            var grid = $("#GridPublisher").data("kendoGrid");
            if (typeof (grid) != "undefined") {
                grid.dataSource.read();
                grid.refresh();

            }
        };

        function UserDataPublisherAccountSearch() {
            var dataObj = {
                Name: $('#AccountSearchName').val(),
                CompanyName: $('#CompanyName').val(),
                Email: $('#Email').val()
            };
            return dataObj;

        };
        function usersGridDataBindingPMP(args) {
           
        };
        function usersGridDataBoundPMP(e) {
            var grid = $("#GridPublisher").data("kendoGrid");
            //if not first page and the no data then try load first page
            // if ((grid.data.length == 0) && (grid.currentPage > 1)) {
            // e.preventDefault();

            if ((grid._data.length == 0) && (grid.dataSource.page() > 1)) {
                e.preventDefault();
                if (grid.dataSource.page() != 1) {
                    grid.dataSource.page(1);
                }

            }
        };
        function localAccountSearchInitilizePMP() {
            jQuery('#AccountSearchName,#CompanyName,#Email').keypress(function (e) {
                return e.keyCode != 13;
            });
            jQuery('#AccountSearchName,#CompanyName,#Email').keyup(function (event) {
                if (event.keyCode == 13) {
                    generateUsersGridForPuplisher();
                }
                return event.keyCode != 13;
            });
        }

        var accountIDPMP, accountNamePMP;
            function onRowSelectedPMP(e) {
                debugger;
                //needs to cgeck
            accountIDPMP = jQuery(e.row.cells[0]).find('[name="AccountId"]').val();
            accountNamePMP = jQuery(e.row.cells[1]).text();
            selectAccountPMP();
        }
        function selectAccountPMP() {
            changeAccount(accountIDPMP, accountNamePMP);
        }
    </script>

    <div>
        <div class="data-row go-center">
            <div class="blue-filter-container">
                <table class="special-content">

                    <td>
                        <span class="go-bold">@Html.GetResource("Name", "Global")</span>
                    </td>
                    <td class="go-left" colspan="4">
                        <span class="searchform-textfield">@Html.AdFalconTextBox("AccountSearchName")</span>
                    </td>


                    <td>
                        <span class="go-bold">@Html.GetResource("Company", "Global")</span>
                    </td>
                    <td class="go-left" colspan="4">
                        <span class="searchform-textfield">@Html.AdFalconEditorFor(p => p.CompanyName)</span>
                    </td>


                    <td>
                        <span class="go-bold">@Html.GetResource("email", "Global")</span>
                    </td>
                    <td class="go-left" colspan="4">
                        <span class="searchform-textfield">@Html.AdFalconEditorFor(p => p.Email)</span>
                    </td>

                    <td class="go-right" colspan="5">
                        <input type="button" onclick="generateUsersGridForPuplisher();" name="Filter" value='@Html.GetResource("Filter")' class="btn filter-button " />
                    </td>

                </table>
            </div>
            <div class="tail">
            </div>
        </div>
        <div class="grid-container">
            @(Html.Kendo().Grid(Model.Users)
        .Name("GridPublisher")
        .Columns(columns =>
        {
            columns.Template("<input type='hidden' name='AccountId' value='<#= AccountId #>' /><input type='hidden'  name='UserId' value='<#= Id #>' />")
             .Title("").Width(0).HtmlAttributes(new { style = "text-align:center" })
                 ;
            columns.Bound(o => o.Name).Title(Html.GetResource("Name", "Global")).HtmlAttributes(new { @class = "go-center" }).Width(200);
            columns.Bound(o => o.CompanyName).Title(Html.GetResource("Company", "Global")).Format("{0:" + ArabyAds.AdFalcon.Web.Controllers.Utilities.Config.ShortDateFormat + "}").HtmlAttributes(new { @class = "go-center" }).Width(130);
            columns.Bound(o => o.Email).Title(Html.GetResource("email", "Global")).HtmlAttributes(new { @class = "go-center" });

        }).EnableCustomBinding(true)
         .DataSource(dataBinding =>
         {
             //dataBinding.Server().Select("Impersonate", "AccountManagement", new { ajax = true });
            // dataBinding.Ajax().Select("_nohttpsPublisherAccountSearch", "User");
             dataBinding.Ajax().Read(read => read.Action("_nohttpsPublisherAccountSearch", "User").Data("UserDataPublisherAccountSearch")).PageSize(ArabyAds.AdFalcon.Web.Controllers.Utilities.Config.PageSize);

         })
             .Events(clientEvents => clientEvents
                 .DataBinding("usersGridDataBindingPMP")
                 .DataBound("usersGridDataBoundPMP")

                 .Change("onRowSelectedPMP"))
             .Scrollable(scrolling => scrolling.Enabled(false))
             .Selectable(M=>M.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row) ).Pageable(paging => paging


            .Input(false)
            .Numeric(true)
            .Info(true)
            .PreviousNext(true)
            .Refresh(true)

             .Position(GridPagerPosition.Bottom))
             .Filterable(filtering => filtering.Enabled(false))
             .Groupable(grouping => grouping.Enabled(false)))
        </div>
    </div>


