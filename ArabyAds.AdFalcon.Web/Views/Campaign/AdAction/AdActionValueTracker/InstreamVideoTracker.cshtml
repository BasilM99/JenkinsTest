@model   Noqoush.AdFalcon.Services.Interfaces.DTOs.Campaign.Creative.AdCreativeUnitTrackerDto
@{
    Layout = null;
}
<script type="text/javascript">
    var maxAllowedTrackersNumber = 9;
    var ClickTrackerDuplicatedMsg = '@Html.GetResource("DuplicatedClickTrackerMsg")';
    function onCopyTracker(originalItem, clonedItem) {
        
        var textBox = clonedItem.find(":text");
        var validationSpan = $(clonedItem.find("span[id$='-URLErrorMsg2']")); //$(clonedItem.find("span")[1]);
        validationSpan.hide();
        validationSpan.attr("id", textBox.attr("id") + "-URLErrorMsg2");

        var validationSpan2 = $(clonedItem.find("span[id$='-URLErrorMsg3']"));
        validationSpan2.hide();
        validationSpan2.attr("id", textBox.attr("id") + "-URLErrorMsg3");

        textBox.change(validateClickTrackers);
        textBox.keyup(function () { onUrlTextKeyUp("#" + clonedItem.attr("id"), false); });

        var containerId = originalItem[0].id;// $(originalItem[0].id).last().attr("id");// $("[id^='trackerContainer']").last().attr("id");

        var plusicon = $(clonedItem.find(".plusicon"));
        plusicon.attr("onclick", "");
        plusicon.click(function () { cloneClickTracker("#" + containerId); });

        clonedItem.find("span.field-title").html("&nbsp;");
    }

    function onUrlTextKeyUp(itemContainer, isShowPlus) {
        managePlusIcon(itemContainer);
    }

    function managePlusIcon(itemContainer) {
        
        var container = GetContainerUrl(itemContainer);
        var containers = container.parent().find("[id^='trackerContainer']");// $(containerId);// $("[id^='trackerContainer']");
        if (containers.length > 0 && containers.length < maxAllowedTrackersNumber) {
            containers.find(".plusicon").hide();
            if (validateAllClickTrackers(itemContainer)) {
                lastUrl.find(".plusicon").show();
            }
            else {
                lastUrl.find(".plusicon").hide();
            }
        }
    }

    function validateAllClickTrackers(itemContainer) {
        var container = GetContainerUrl(itemContainer);
        var containers = container.parent().find("[id^='trackerContainer']");// $(containerId);// $("[id^='trackerContainer']");
        if (containers.length > 0) {
            containers.find(".plusicon").hide();
            lastUrl = containers.last();
            lastUrlTextBox = GetContainerUrlTextbox(lastUrl);
            var validateUrlValue = validateClickTrackers(lastUrlTextBox.attr('id'));
            if (validateUrlValue && lastUrlTextBox.val() != '') {
                return true;
            }
            else {
                return false;
            }
        }
    }

    function cloneClickTracker(_containerIdValue) {
        var container = GetContainerUrl(_containerIdValue);
        if (validateAllClickTrackers(_containerIdValue)) {
            cloneElement(container, onCopyTracker, onRemovedClonedTracker, true, true);
        }
    }

    function GetContainerUrlTextbox(container) {
        var textBoxContent = container.find("input");
        return textBoxContent;
    }

    function GetContainerUrl(containerID) {
        var container = $(containerID);
        if (container == null || container.length == 0) {
            containerID = "#" + containerID;
            container = $(containerID);
        }
        return container;
    }

    function onRemovedClonedTracker(itemContainer) {
        
        managePlusIcon(itemContainer);
    }
</script>
@if (Model.ImpressionURls == null || Model.ImpressionURls.Count() == 0)
{
    <div class="data-row data-container" id="trackerContainer1@(Model.AdGroupEventId)">
        <div class="label-container">
            <span class="field-title ">@Model.Url</span>
        </div>
        <div class="field-container">



            @if (Model.IsAllowedToSaveImpressionTracker)
            {
                <text>
                    <input class="text-box" id="clickTracker1@(Model.AdGroupEventId)" name="ClickTrackers@(Model.AdGroupEventId)" type="text" value="" onkeyup="onUrlTextKeyUp('trackerContainer1@(Model.AdGroupEventId)',true);">


                </text>

            }
            else
            {
                <text>
                    <input class="text-box" Impdisabled="Impdisabled" id="clickTracker1@(Model.AdGroupEventId)" readonly name="ClickTrackers@(Model.AdGroupEventId)" type="text" value="" onkeyup="onUrlTextKeyUp('trackerContainer1@(Model.AdGroupEventId)',true);">

                </text>
            }


            <img name="iconImage" onclick="cloneClickTracker('trackerContainer1@(Model.AdGroupEventId)')" class="plusicon" style="display: none">
        </div>
        <span class="validation-arrow field-validation-error" id="clickTracker1@(Model.AdGroupEventId)-URLErrorMsg2"
              style="display: none;"><span class="">@Html.GetResource("UrlMsg")</span></span>
            <span class="validation-arrow field-validation-error" id="clickTracker1@(Model.AdGroupEventId)-URLErrorMsg3"
                  style="display: none;"><span class="">@Html.GetResource("DuplicatedClickTrackerMsg")</span></span>
            </div>
}
else
{
    if (Model.ImpressionURls != null)
    {
        int i = 0;
        int counter = Model.ImpressionURls.Count();
        foreach (var item in Model.ImpressionURls)
        {
            <div class="data-row data-container" id="trackerContainer@(i)@(Model.AdGroupEventId)">
                <div class="label-container">
                    <span class="field-title">
                        @if (i == 0)
                        {
                            <text>@Model.AdGroupEventName</text>

                        }
                        else
                        {
                            <text>-</text>
                            @*@Html.GetResource("TrackerUrls")*@
                        }
                    </span>
                </div>
                <div class="field-container">

                    @if (Model.IsAllowedToSaveImpressionTracker)
                    {
                        <text>
                            <input class="text-box" id="clickTracker@(i)@(Model.AdGroupEventId)" name="ClickTrackers@(Model.AdGroupEventId)" type="text" value="@item.URL" onkeyup="managePlusIcon('trackerContainer@(i)@(Model.AdGroupEventId)');">


                        </text>

                    }
                    else
                    {
                        <text>
                            <input class="text-box" Impdisabled="Impdisabled"  id="clickTracker@(i)@(Model.AdGroupEventId)" name="ClickTrackers@(Model.AdGroupEventId)" readonly type="text" value="@item.URL" onkeyup="managePlusIcon('trackerContainer@(i)@(Model.AdGroupEventId)');">

                        </text>
                    }



                    @if (i != 0)
                    {
                        <img name="iconImage" onclick="removeClonedElement('trackerContainer@(i)@(Model.AdGroupEventId)');" class="minusicon" style="display: inline;">
                    }
                    <img name="iconImage" onclick="cloneClickTracker(trackerContainer@(i)@(Model.AdGroupEventId));" class="plusicon" style="display: @(i == 0 && item.URL != "" ? "inline" : "none")">
                </div>
                <span class="validation-arrow field-validation-error" id="clickTracker@(i)@(Model.AdGroupEventId)-URLErrorMsg2"
                      style="display: none;"><span class="">@Html.GetResource("UrlMsg")</span></span>

                    <span class="validation-arrow field-validation-error" id="clickTracker@(i)@(Model.AdGroupEventId)-URLErrorMsg3"
                          style="display: none;"><span class="">@Html.GetResource("DuplicatedClickTrackerMsg")</span></span>
                    </div>
                    {
                        i++;
                    }
        }
    }
}
