@{
    ViewBag.Title = Html.GetResource("UserManagement", "Menu");
}
@model Noqoush.AdFalcon.Web.Controllers.Model.User.AccountSearchViewModel
@using (Html.BeginForm())
{

    <script language="javascript">
		var nameValueStr = '@Html.GetResource("NameColumn", "AppSite" )';
		    var AdvaudieceListUrl = '@Url.Action("GetAccountAdvertisersForhttps", "Advertiser")';
		var BlockUrl = '@Url.Action("Block", "User")';
		var MakeUserSecondPrimaryUserUrl = '@Url.Action("MakeUserSecondPrimaryUser", "User")';
		var GetAdvertiserAccountReadOnlySettingsUserUrl = '@Url.Action("GetAdvertiserAccountReadOnlySettings", "User")';
				var UpdateAdvertiserAccountReadOnlySettingsUserUrl = '@Url.Action("UpdateUserType", "User")';
        var message = '@Html.GetResource("savedSuccessfully")';
        var variabels = {
            id :null,
            name: null,
            userTypeId: null
        }

		$(document).ready(function () {
			$("#NameAdvertisersDialog").text(nameValueStr);
            localInitilize();

            $('#UserTypesDDL').on('change', function () {
                if ($('#UserTypesDDL').val() == "2") {
                    $("#AdvertisersListDll").val(null).trigger('change');
                }
            });
		
        });

        function Block(id) {
            $.ajax({
                type: 'GET',
                url: BlockUrl + "?id=" + id,
                dataType: "",
                data: '',

                success: function (data) {

                    generateUsersGrid();
                    clearSuccessfullyMessage();

                    showSuccessfullyMessage(message.format($("#MainHeader span").html().trim()));
                },
                error: function (data) {
                    alert(data);
                }

            });

		}

		function MakeUserSecondPrimaryUser(id) {
			$.ajax({
				type: 'GET',
				url: MakeUserSecondPrimaryUserUrl + "?id=" + id,
				dataType: "",
				data: '',

				success: function (data) {

					generateUsersGrid();
					clearSuccessfullyMessage();

					showSuccessfullyMessage(message.format($("#MainHeader span").html().trim()));
				},
				error: function (data) {
					alert(data);
				}

			});

		}
		function ChangeUserType(id,userTypeId,Ids) {
			$.ajax({
				type: 'GET',
				url: UpdateAdvertiserAccountReadOnlySettingsUserUrl + "?id=" + id + "&Ids=" + Ids + "&userType=" + userTypeId,
				dataType: "",
				data: '',

				success: function (data) {

					generateUsersGrid();
					clearSuccessfullyMessage();
                    showSuccessfullyMessage(message.format($("#MainHeader span").html().trim()));
                    if ($('#UserTypesDDL').val() == "2")
                        showWarningMessage("@Html.GetResource("ReadOnlyWarningMessage", "Invitation")", true);

                    $("#AdvertisersDialog").dialog("close");

				},
				error: function (data) {
					alert(data);
				}

			});

		}
        function generateUsersGrid() {
            var grid = $("#Grid").data("tGrid");
            grid.rebind();
        };
        function usersGridDataBinding(args) {
            args.data = $.extend(args.data,
            {
                Name: $('#Name').val(),
                CompanyName: $('#CompanyName').val(),
                Email: $('#Email').val(),
            });
        };
        function usersGridDataBound(e) {
            var grid = $("#Grid").data("tGrid");
            $("#Grid #DetailsBlockButton").removeClass("t-last");
            //if not first page and the no data then try load first page
            if ((grid.data.length == 0) && (grid.currentPage > 1)) {
                e.preventDefault();
                grid.pageTo(1);
            }
        };
      

        function OpenInviteDialogDummy(Id, UserTypeId, Name) {
            variabels.id = Id;
            variabels.name = Name;
            variabels.userTypeId = UserTypeId;

            //if ($("#Email").val() != "") {
                //if (isEmail($("#Email"), "validationErrorEmail")) {
                //if ($("#Email").val() != "") {

                    $("#AdvertisersDialog").dialog("open");
                //}
                //}
            //} else {

            //    $("#validationError").show();
            //    $("#validationErrorEmail").hide();

            //}
        }
		function CustomInitSelect2(Id) {
		
		var arrpush = [];
		


			var arrResult = [];

            $("#AdvertisersListDll option").remove();
			$.ajax({
				type: 'GET',
				url: GetAdvertiserAccountReadOnlySettingsUserUrl + "?userId=" +Id,
			}).then(function (data) {
				// create the option and append to Select2
				for (var i = 0; i < data.result.length; i++) {
					var option = new Option(data.result[i].Link.Name, parseInt(data.result[i].Link.Id), true, true);
					var resultData = {
						text: data.result[i].Link.Name,
						id: parseInt(data.result[i].Link.Id)
					}
						$("#AdvertisersListDll").append(option).trigger('change');
					arrResult.push(resultData);

				}
				// manually trigger the `select2:select` event
					$("#AdvertisersListDll").trigger({
					type: 'select2:select',
					params: {
						data: arrResult
					}
				});
			});
		


	

	}
        function localInitilize() {

			jQuery('input').keypress(function (e) {
				return e.keyCode != 13;
			});
			jQuery("input").keyup(function (event) {
				if (event.keyCode == 13) {
					generateUsersGrid();
				}
				return event.keyCode != 13;
			});

        $("#AdvertisersDialog").dialog({

			autoOpen: false,
            width: 500,
            height: 300,
			modal: true,
			resizable: false,
			draggable: false,
			open: function(){
				$('#AdvertisersListDllDive').hide();
				$("#AdvertisersListDll").val(null).trigger('change');
				CustomInitSelect2(variabels.id);
                $('#UserTypesDDL').val(variabels.userTypeId);
                $('#email-text').val(variabels.name);
                if (variabels.userTypeId == "2") {
                    $('#AdvertisersListDllDive').show();
                }
			
               
         
            },
			//position: { my: "center top", at: "center top"},
            buttons: [{

                text: 'Update',
                "class": 'primary-btn',

                click: function () {
					ChangeUserType(variabels.id, $('#UserTypesDDL').val(), $('#AdvertisersListDll').val().toString() );
                }
			},

				{
                text: '@Html.GetResource("Close", "Commands")',
                click: function () {

					jQuery(this).dialog("close");

                },
					"class": 'delete-button',

            }
            ]
		});

        }
        function removeDulicationFromSelect2(id) {
            let listOfOptions = $("#" + id).find('option')
            let unique = (value, index, self) => {
                return listOfOptions.indexOf(value) === index
            }
        }

    </script>
    <h2>
        @Html.GetResource("UserManagement", "Menu")
    </h2>

    <div class="section-form-container">
        <div class="section-form-inner-container info-container">
            <div class="data-row go-center">
                <div class="blue-filter-container">
                    <table class="special-content">
                        <tr>
                            <td>
                                <span class="go-bold">@Html.GetResource("Name", "Global")</span>
                            </td>
                            <td class="go-left" colspan="4">
                                <span class="small-big-field">@Html.AdFalconEditorFor(p => p.Name)</span>
                            </td>
                            <td>
                                <span class="go-bold">@Html.GetResource("Company", "Global")</span>
                            </td>
                            <td class="go-left" colspan="4">
                                <span class="small-big-field">@Html.AdFalconEditorFor(p => p.CompanyName)</span>
                            </td>
                            <td>
                                <span class="go-bold">@Html.GetResource("email", "Global")</span>
                            </td>
                            <td class="go-left" colspan="4">
                                <span class="searchform-textfield">@Html.AdFalconEditorFor(p => p.Email)</span>
                            </td>
                            <td class="go-right" colspan="5">
                                <input type="button" onclick="generateUsersGrid();" name="Filter" value='@Html.GetResource("Filter")' class="btn filter-button " />
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="tail">
                </div>
            </div>
            <div class="grid-container">

                @(Html.Telerik().Grid(Model.Users)
                                        .Name("Grid")
                                        .Columns(columns =>
                                        {
                                            columns.Bound(o => o.Name).Template(
                                                            @<text><div class="grid-title-container floating-left">
                                                                    <span class="trimed-span">

                                                                        <a href='@Url.Action("Edit", "User", new { id = @item.Id }, null)' title='@item.Name'>


                                                                            @item.Name

                                                                        </a>
                                                                    </span>
                                                                </div>
                                                            </text>
                                                   ).Title(Html.GetResource("Name", "Global")).Width(250).HtmlAttributes(new { @class = "go-center" })
                                                   .ClientTemplate("<div class='grid-title-container floating-left'><a href=\"" + Url.Action("Edit", "User") + "/<#= Id#>\"><#= Name#> </a></div>");
                                            columns.Bound(o => o.CompanyName).Title(Html.GetResource("Company", "Global")).Format("{0:" + Noqoush.AdFalcon.Web.Controllers.Utilities.Config.ShortDateFormat + "}").HtmlAttributes(new { @class = "go-center" });
                                            columns.Bound(o => o.Email).Title(Html.GetResource("email", "Global")).HtmlAttributes(new { @class = "go-center" });
                                            columns.Bound(o => o.IsBlocked).Template(
                                            @<text>

                                                @{
                                                    /**/

                                                    /**/

                                                        if (item.IsBlocked)
                                                        {
                                                        <a href="javascript:void(0)" onclick="Block('@item.Id'); return false;" class='btncustom btncustom-default'>
                                                            @Html.GetResource("UnBlock", "User")
                                                        </a>
                                                        }
                                                        else
                                                        {
                                                        <a href="javascript:void(0)" onclick="Block('@item.Id'); return false;" class='btncustom btncustom-default'>
                                                            @Html.GetResource("block", "User")
                                                        </a>
                                                        }
                                                }


                                            </text>).Title(Html.GetResource("block", "User")).ClientTemplate("" +

                                  "<# if(IsBlocked) { #>" +

                                    "<a href ='javascript:void(0)' onclick='Block(<#= Id #>); return false;' class='btncustom btncustom-default'>" +
                                      @Html.GetResource("UnBlock", "User") + "" +
                                     "</a>" +
                                  "<#} #>" +
                                    "<# if(IsBlocked==false) { #>" +

                                     "<a href ='javascript:void(0)' onclick='Block(<#= Id #>); return false;' class='btncustom btncustom-default'>" +
                                      @Html.GetResource("block", "User") + "" +
                                     "</a>" +
                                     "<#} #>" +

                                "" +
                                "").HtmlAttributes(new { @class = "go-center", @id = "DetailsBlockButton" }).Width(50);










                                            columns.Bound(o => o.UserTypeString).Template(
                                        @<text>

                                            @{



                                                <a href="javascript:void(0)" onclick="OpenInviteDialogDummy(@item.Id,@item.UserTypeId,'@item.Name'); return false;" style="padding-right:12px !important;padding-left:12px !important;padding-top:6px !important; padding-bottom:6px !important;" class='btncustom btncustom-default'>
                                                    @item.UserTypeString
                                                </a>


                                            }


                                        </text>).Title(Html.GetResource("UserType", "Invitation")).ClientTemplate("" +



                        "<a href ='javascript:void(0)' style='padding-right:12px !important;padding-left:12px !important;padding-top:6px !important; padding-bottom:6px !important;'  onclick='OpenInviteDialogDummy(<#=Id #>,<#=UserTypeId#>,\"<#=Name#>\"); return false;' class='btncustom btncustom-default'>"
                         + "<#= UserTypeString #>" +
                         "</a>" +



                    "").HtmlAttributes(new { @class = "go-center", @id = "DetailsIsSecondPrimaryUserButton" }).Width(100);


                                        }).EnableCustomBinding(true)
                                      .DataBinding(dataBinding =>
                                      {
                                      //dataBinding.Server().Select("Impersonate", "AccountManagement", new { ajax = true });
                                      dataBinding.Ajax().Select("_MyUsers", "User");

                                      })
                                        .ClientEvents(clientEvents => clientEvents.OnDataBinding("usersGridDataBinding").OnDataBound("usersGridDataBound").OnRowDataBound("onRowDataBound"))
                                      .Scrollable(scrolling => scrolling.Enabled(false))
                                      .Selectable()
                                      .Pageable(paging => paging.PageSize(Noqoush.AdFalcon.Web.Controllers.Utilities.Config.PageSize).Total((int)Model.TotalCount).Style(GridPagerStyles.NextPreviousAndNumeric).Position(GridPagerPosition.Bottom))
                                      .Filterable(filtering => filtering.Enabled(false))
                                      .Groupable(grouping => grouping.Enabled(true)).Footer(true))




            </div>
        </div>
    </div>

    <div class="section-footer">
    </div>
    if (Model.ToolTips != null && Model.ToolTips.Count > 0)
    {
        @Html.Partial("GridToolTop", Model.ToolTips)
    }
}
@Html.Partial("AdvertisersDialog")