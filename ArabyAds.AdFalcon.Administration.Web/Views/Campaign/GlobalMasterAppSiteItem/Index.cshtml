@model ArabyAds.AdFalcon.Web.Controllers.Model.Advertiser.MasterAppSiteItemListViewModel
@{
	//ViewBag.Title = Html.GetResource("Advertisers", "Global");
	ViewBag.Title = Model.ListName + " : " + Html.GetResource("MasterAppSiteItems", "Global");

	Layout = "~/Views/Campaign/GlobalMasterAppSiteItem/IndexMaster.cshtml";
	string DeteleCheckBox = Model.PreventEdit ? "<input type = 'checkbox' name = 'checkedRecords' value = '<#= Id #>' disabled />" : "<input type = 'checkbox' name = 'checkedRecords' value = '<#= Id #>' />";


}
@*@using ArabyAds.Framework.DomainServices*@

@*@Html.Partial("GridToolTop", Model.ToolTips)*@

@section subheader
   {
}
@section Grid2 {
	@(Html.Telerik().Grid(Model.Items)
											   .Name("Grid")
											   .Columns(columns =>
															{
																columns.Template(
																	@<text>
																		@{
																							if (Model.PreventEdit)
																							{
																				<input name="checkedRecords" type="checkbox" value="@item.Id " disabled title="checkedRecords" />

																							}
																							else
																							{
																				<input name="checkedRecords" type="checkbox" value="@item.Id " title="checkedRecords" />

																							}

																		}
																	</text>)
																													.Title("").Width(10).HtmlAttributes(new { style = "text-align:center" })
																													.ClientTemplate(DeteleCheckBox);

																			columns.Bound(o => o.AppSiteName).Template(
							@<text><div class="grid-title-container floating-left">
									<span class="trimed-span">


										@item.AppSiteName

									</span>
								</div><div class="grid-cogwheel-container floating-right go-right">
									@*<div class='cogwheel' item_extra_info="@item.AppSiteName" onclick='showGridToolTip(@item.Id,this)'>
											<a href='javaScript:void(0);'>&nbsp</a>
										</div>*@
								</div>
							</text>
).Title(Html.GetResource("Name")).Width(60)
.ClientTemplate("<div class='grid-title-container floating-left'><span class='trimed-span'><#= AppSiteName#></span></div>");
	//columns.Bound(o => o.Name).Title(Html.GetResource("Advertiser", "Menu") + " " + Html.GetResource("Name")).Width(60);
	columns.Bound(o => o.TypeString).Title(Html.GetResource("Type", "AppSite")).Width(60);
	columns.Bound(o => o.BundleID).Title("Bundle").Width(60);
	columns.Bound(o => o.Domain).Title(@Html.GetResource("Domain", "Global")).Width(60);


	//columns.Bound(o => o.StatusString).Title(Html.GetResource("Status")).Width(60);
	//columns.Bound(o => o.Impress).Format("{0:n0}").Title(Html.GetResource("Impressions", "Campaign")).Width(50).HtmlAttributes(new { @class = "go-center" });


	//columns.Bound(o => o.Performance.Clicks).Format("{0:n0}").Title(Html.GetResource("Clicks", "Campaign")).Width(65).HtmlAttributes(new { @class = "go-center" });
	//columns.Bound(o => o.Performance.CtrText).Title(Html.GetResource("CTR", "Campaign")).Width(45).HtmlAttributes(new { @class = "go-center" });
	//columns.Bound(o => o.Performance.AvgCPCText).Title(Html.GetResource("AvgCPC", "Campaign")).Width(75).HtmlAttributes(new { @class = "go-center" });
	//columns.Bound(o => o.Performance.SpendText).Title(Html.GetResource("Spend", "Campaign")).Width(65).HtmlAttributes(new { @class = "go-center" });

}).EnableCustomBinding(true)
																			.DataBinding(dataBinding =>
																			{
																				dataBinding.Server().Select("MasterAppSiteItems", "Campaign", new { ajax = true });
																				dataBinding.Ajax().Select("_MasterAppSiteItems", "Campaign");

																			})
																	.ClientEvents(clientEvents => clientEvents.OnDataBinding("AccountAdvertisersGridDataBinding").OnDataBound("AccountAdvertisersGridDataBound").OnRowDataBound("onRowDataBound"))
																	.Scrollable(scrolling => scrolling.Enabled(false))
																	.Selectable().Pageable(paging => paging.PageSize(ArabyAds.AdFalcon.Web.Controllers.Utilities.Config.PageSize)
																							.Total(int.Parse(ViewData["total"].ToString()))
																							.Style(GridPagerStyles.NextPreviousAndNumeric)
																							.Position(GridPagerPosition.Bottom))
																	.Filterable(filtering => filtering.Enabled(false))
																	.Groupable(grouping => grouping.Enabled(true)).Footer(true))
}

