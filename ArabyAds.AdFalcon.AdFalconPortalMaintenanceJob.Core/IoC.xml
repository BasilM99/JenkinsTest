<?xml version="1.0" encoding="utf-8" ?>
<configuration>

	<facilities>
		<facility type="ArabyAds.Framework.Grpc.GrpcRegisterationFacility,
ArabyAds.Framework.Grpc">
			<service id="infraService" assembly="ArabyAds.Framework" >
				<interceptors>
					<add type="ArabyAds.Framework.Grpc.ClientAdapter, ArabyAds.Framework.Grpc" />

				</interceptors>
			</service>
			<service id="AdFalconService" assembly="ArabyAds.AdFalcon.Services.Interfaces" >
				<interceptors>
					<add type="ArabyAds.Framework.Behaviors.BehaviorInvoker, ArabyAds.Framework" />
					<add type="ArabyAds.Framework.Grpc.ClientAdapter, ArabyAds.Framework.Grpc" />
					<add type="ArabyAds.Framework.Grpc.ClientOperationContextPolicy, ArabyAds.Framework.Grpc" />
				</interceptors>
			</service>

			<service id="RiteloService" assembly="ArabyAds.AdFalcon.Services.Interfaces" >
				<interceptors>
					<add type="ArabyAds.Framework.Behaviors.BehaviorInvoker, ArabyAds.Framework" />
					<add type="ArabyAds.Framework.Grpc.ClientAdapter, ArabyAds.Framework.Grpc" />
					<add type="ArabyAds.Framework.Grpc.ClientOperationContextPolicy, ArabyAds.Framework.Grpc" />
				</interceptors>
			</service>
		</facility>



	</facilities>

	<components>


    <!--Begin Framework Components-->
    <!--  <component id="MessagesEventBrokerService"
     type="ArabyAds.AdFalcon.AdServer.Integration.Services.Interfaces.IMessagesEventBrokerService,ArabyAds.AdFalcon.AdServer.Integration"
     wcfEndpointConfiguration="MessagesEventBrokerServiceClient">
    </component>-->
<!--


    <component id="AdServerAudienceListService"
         type="ArabyAds.AdFalcon.Server.Integration.Services.IAudienceListService,ArabyAds.AdFalcon.Server.Integration.Services"
         wcfEndpointConfiguration="AdServerAudienceListService">
    </component>
    -->
		
    <component id="EventBroker"
            service="ArabyAds.Framework.EventBroker.IEventBroker,ArabyAds.Framework"
            type="ArabyAds.Framework.EventBroker.EventBroker,ArabyAds.Framework"
            lifestyle="Singleton">
    </component>
    <component id="EventBrokerProvider"
               service="ArabyAds.Framework.EventBroker.Provider.IEventBrokerProvider,ArabyAds.Framework"
               type="ArabyAds.Framework.EventBroker.Provider.DBEventBrokerProvider,ArabyAds.Framework"
               lifestyle="Singleton">
    </component>

    <component id="Redis"
  service="ArabyAds.Framework.Caching.ICacheProviderFactory,ArabyAds.Framework"
  type="ArabyAds.Framework.Caching.RedisCache.RedisCacheProviderFactory,ArabyAds.Framework"
  lifestyle="Singleton">

    </component>
    <component id="FrameworkBehaviorInvoker" service="ArabyAds.Framework.Behaviors.BehaviorInvoker, ArabyAds.Framework"
 type="ArabyAds.Framework.Behaviors.BehaviorInvoker, ArabyAds.Framework"
 lifestyle="transient" />
    <component id="ResourceManager"
			 service="ArabyAds.Framework.Resources.IResourceManager,ArabyAds.Framework"
		 type="ArabyAds.Framework.Resources.ResourceManager,ArabyAds.Framework"  lifestyle="transient">
    </component>
    <component id="UserInfoStorage"
			service="ArabyAds.Framework.Storage.IStorage,ArabyAds.Framework"
		type="ArabyAds.Framework.Grpc.Storage.GrpcStorage,ArabyAds.Framework.Grpc"  lifestyle="transient">
    </component>
    <component id="UserInfoProvider"
     service="ArabyAds.Framework.UserInfo.IUserInfoProvider,ArabyAds.Framework"
   type="ArabyAds.AdFalcon.Common.Web.UserInfo.AdFalconUserInfoProvider,ArabyAds.AdFalcon.Common.Web"  lifestyle="transient">
    </component>
		<component id="SecurityContent"
		service="ArabyAds.Framework.Security.ISecurityContext,ArabyAds.Framework"
	  type="ArabyAds.Framework.Security.Context.ThreadSecurityContext,ArabyAds.Framework"  lifestyle="Singleton">
		</component>
    <component id="STSService"
					type="ArabyAds.Framework.Security.ISecurityService,ArabyAds.Framework"
					>
    </component>
    <component id="ConfigurationSettings"
      type="ArabyAds.Framework.ConfigurationSetting.IConfigurationSettingService,ArabyAds.Framework"
     >
    </component>
 
    <component id="ConfigurationManager"
  service="ArabyAds.Framework.ConfigurationSetting.IConfigurationManager,ArabyAds.Framework"
  type="ArabyAds.Framework.ConfigurationSetting.ConfigurationManager,ArabyAds.Framework"></component>

    <component id="MailSender"
            service="ArabyAds.Framework.Utilities.EmailsSender.IMailSender,ArabyAds.Framework"
           		type="ArabyAds.Framework.Utilities.EmailsSender.MailSender,ArabyAds.Framework"  lifestyle="transient" >
    </component>

		<component id="ClientInterceptor" service="ArabyAds.Framework.Grpc.ClientAdapter, ArabyAds.Framework.Grpc"
							  type="ArabyAds.Framework.Grpc.ClientAdapter, ArabyAds.Framework.Grpc"
							  lifestyle="transient" />

		<component id="ClientOperationContextPolicy" service="ArabyAds.Framework.Grpc.ClientOperationContextPolicy, ArabyAds.Framework.Grpc"
				type="ArabyAds.Framework.Grpc.ClientOperationContextPolicy, ArabyAds.Framework.Grpc"
				lifestyle="transient" />
		
    <component id="ResourceService"
									type="ArabyAds.Framework.Resources.IResourceService,ArabyAds.Framework"
									>
    </component>
    <component id="CallContext"
						 service="ArabyAds.Framework.ICallContext,ArabyAds.Framework"
						 type="ArabyAds.Framework.ThreadCallContext,ArabyAds.Framework"
						 lifestyle="transient">
    </component>
  
    <component id="MemoryCache"
service="ArabyAds.Framework.Caching.ICacheProviderFactory,ArabyAds.Framework"
type="ArabyAds.Framework.Caching.MemoryCaching.MemoryCacheProviderFactory,ArabyAds.Framework"
lifestyle="Singleton">

    </component>

    <component id="SFTPProvider"
    service="ArabyAds.Framework.CDN.ICDNProvider,ArabyAds.Framework"
    type="ArabyAds.Framework.CDN.SFtpProvider,ArabyAds.Framework"
    lifestyle="Singleton">

    </component>
		<component id="ObjectStorageProvider"
  service="ArabyAds.Framework.CDN.ICDNProvider,ArabyAds.Framework"
  type="ArabyAds.Framework.CDN.ObjectStorageProvider,ArabyAds.Framework"
  lifestyle="Singleton">

		</component>

    <component id="EventStateRepo"
			 service="ArabyAds.Framework.DistributedEventBroker.PubSub.Subscription.IStateRepository, ArabyAds.Framework.DistributedEventBroker.PubSub"
			 type=" ArabyAds.Framework.DistributedEventBroker.PubSub.Subscription.RedisStateRepository, ArabyAds.Framework.DistributedEventBroker.PubSub"
			 lifestyle="singleton">
    </component>

  </components>
</configuration>
