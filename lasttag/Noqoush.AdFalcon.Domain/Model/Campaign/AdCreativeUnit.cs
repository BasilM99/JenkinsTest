//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Noqoush.AdFalcon.Domain.Model.Core;
using Noqoush.Framework.DomainServices;
using System.Collections.Generic;
using System.Linq;
using Noqoush.AdFalcon.Domain.Common.Model.Campaign;

namespace Noqoush.AdFalcon.Domain.Model.Campaign
{
    public class AdCreativeUnit : IEntity<int>
    {
        public AdCreativeUnit()
        {

        }
        public virtual int ID { get;  set; }
        public virtual bool IsDeleted { get; set; }
        public virtual string Content { get; set; }
        public virtual string TmpContent { get; set; }
        public virtual string UniqueId { get; set; }
        public virtual string ImageType { get; set; }
        public virtual Document Document { get; set; }
        public virtual Protocol Protocol { get; set; }
        public virtual int Version { get; set; }


        public virtual Document SnapshotDocument { get; set; }
        public virtual string SnapshotUrl { get; set; }
        public virtual AdCreative AdCreative { get; set; }
        //public virtual AdCreativeUnitVendor AdCreativeUnitVendor { get; set; }
        
        public virtual CreativeUnit CreativeUnit { get; set; }
        public virtual IEnumerable<AdCreativeAttribute> Attributes { get {

                if (this.AttributesMapping!=null)
                {
                    return AttributesMapping.Select(M => M.Attribute).ToList();
                }
                return new List<AdCreativeAttribute>() ;
            } }


        public virtual IList<AdCreativeUnitVendor> AdCreativeUnitVendorList { get; set; }

  
        public virtual IList<AdCreativeUnitAttributeMapping> AttributesMapping { get; set; }
        public virtual bool KeepShapshot { get; set; }
        public virtual IList<AdCreativeUnitTracker> Trackers { get; set; }
        public virtual InStreamVideoCreativeUnit InStreamVideoCreativeUnit { get; set; }
        public virtual void Delete()
        {
            this.IsDeleted = true;
            foreach (var item in GetTrackers())
            {
                item.IsDeleted = true;
            }
        }
        public virtual IList<VideoMediaFile> MediaFiles { get; set; }
        public virtual string GetDescription()
        {
            return CreativeUnit.GetDescription();
        }
        public virtual AdCreativeUnit Copy(CreativeUnit screenSize)
        {
            throw new System.NotImplementedException();
        }
        public virtual IList<AdCreativeUnitTracker> GetTrackers()
        {
            if (Trackers == null)
                return new List<AdCreativeUnitTracker>();

            return Trackers.Where(p => !p.IsDeleted).ToList();
        }

        public virtual void RemoveMediaFiles()
        {
            if (MediaFiles != null)
            {
                MediaFiles.Clear();
            }



        }
        public virtual void AddMediaFile(VideoMediaFile mediaFile)
        {

            if (MediaFiles == null)
            {
                MediaFiles = new List<VideoMediaFile>();
            }

            MediaFiles.Add(mediaFile);
        }
        public virtual AdCreativeUnit Copy(AdCreative adCreative)
        {
            var cloneObj = new AdCreativeUnit()
            {
                IsDeleted = this.IsDeleted,
                ImageType = this.ImageType,
                Document = this.Document,
                CreativeUnit = this.CreativeUnit,
                UniqueId = Guid.NewGuid().ToString(),
                AdCreative = adCreative,
                //AdCreativeUnitVendor=this.AdCreativeUnitVendor,
                SnapshotDocument = this.SnapshotDocument
            };
            switch (AdCreative.TypeId)
            {
                case AdTypeIds.Text:
                case AdTypeIds.NativeAd:
                case AdTypeIds.PlainHTML:
                    {
                        cloneObj.Content = this.Content;
                        break;
                    }
                case AdTypeIds.RichMedia:
                    {
                        switch (AdCreative.AdSubType)
                        {
                            case AdSubTypes.JavaScriptInterstitial:
                            case AdSubTypes.JavaScriptRichMedia:
                            case AdSubTypes.ExternalUrlInterstitial:
                                {
                                    cloneObj.Content = this.Content;
                                    break;
                                }
                            case AdSubTypes.ExpandableRichMedia:
                                {
                                    break;
                                }
                            case AdSubTypes.HTML5Interstitial:
                            case AdSubTypes.HTML5RichMedia:
                                {
                                    break;
                                }
                        }
                        break;
                    }
                case AdTypeIds.Banner:
                    {
                        break;
                    }
                case AdTypeIds.InStreamVideo:
                    {
                        cloneObj.InStreamVideoCreativeUnit = this.InStreamVideoCreativeUnit.Clone(cloneObj);
                        cloneObj.Content = this.Content;
                        break;
                    }

            }

            var adCreativeAttributes = new List<AdCreativeAttribute>();

            //if (this.Attributes != null)
            //{
            //    foreach (var item in this.Attributes)
            //    {
            //        adCreativeAttributes.Add(item);
            //    }

            //    cloneObj.Attributes = adCreativeAttributes;
            //}
            var AdCreativeUnitAttributeMappings = new List<AdCreativeUnitAttributeMapping>();

            if (this.AttributesMapping != null)
            {
                foreach (var item in this.AttributesMapping)
                {
                    if (AdCreativeUnitAttributeMappings.Where(M => M.Attribute.ID == item.Attribute.ID).SingleOrDefault() == null)
                        AdCreativeUnitAttributeMappings.Add(new AdCreativeUnitAttributeMapping { Attribute = item.Attribute, AdCreativeUnit = cloneObj });
                }

                cloneObj.AttributesMapping = AdCreativeUnitAttributeMappings;
            }
            if (this.Trackers != null)
            {
                cloneObj.Trackers = new List<AdCreativeUnitTracker>();

                foreach (var item in GetTrackers())
                {
                    var adGroupEventId = adCreative.Group.GetTrackingEvents().Where(p => p.Code == item.AdGroupEvent.Code).Single();

                    var tracker = new AdCreativeUnitTracker()
                    {
                        AdGroupEvent = adGroupEventId,
                        CreativeUnit = cloneObj,
                        TrackingUrl = item.TrackingUrl,
                 AdCreativeUnitTrackerType=item.AdCreativeUnitTrackerType,
                        TrackingJS =item.TrackingJS
                    };

                    cloneObj.Trackers.Add(tracker);
                }
            }
            if (this.AdCreativeUnitVendorList != null)
            {
                cloneObj.AdCreativeUnitVendorList = new List<AdCreativeUnitVendor>();

                foreach (var item in this.AdCreativeUnitVendorList)
                {


                    var AdCreativeUnitVendor = new AdCreativeUnitVendor()
                    {
                        Vendor = item.Vendor,
                        Unit = cloneObj,

                    };

                    cloneObj.AdCreativeUnitVendorList.Add(AdCreativeUnitVendor);
                }
            }

            if (this.MediaFiles!=null && this.MediaFiles.Count>0)
            {
                cloneObj.MediaFiles = new List<VideoMediaFile>();
                foreach (var mediaFile in this.MediaFiles)
                {
                    var mediaFileClone = mediaFile.Clone();
                    mediaFileClone.AdCreativeUnit = cloneObj;

                    if (cloneObj.MediaFiles.Where(M => M.OriginalCreativeUnit.ID == mediaFile.OriginalCreativeUnit.ID).SingleOrDefault() == null)
                        cloneObj.AddMediaFile(mediaFileClone);
                }
            }
            return cloneObj;
        }

        public virtual AdCreativeUnit Copy()
        {
            return Copy(this.AdCreative);
        }



        public virtual void SetTrackingEvent(AdGroupTrackingEvent trackingEvent, string trackingEventUrl)
        {
            if (this.Trackers == null)
            {
                this.Trackers = new List<AdCreativeUnitTracker>();
            }
            if (trackingEvent == null || string.IsNullOrEmpty(trackingEventUrl))
            {
                return;
            }
            var creativeUnitTrackingEvent = this.Trackers.Where(p => string.Equals(p.AdGroupEvent.Code, trackingEvent.Code, StringComparison.InvariantCultureIgnoreCase) && !p.IsDeleted).SingleOrDefault();

            if (creativeUnitTrackingEvent == null)
            {
                creativeUnitTrackingEvent = new AdCreativeUnitTracker()
                {
                    TrackingUrl = trackingEventUrl,
                    AdGroupEvent = trackingEvent,
                    AdCreativeUnitTrackerType = !string.IsNullOrWhiteSpace(trackingEventUrl)? AdCreativeUnitTrackerType.URL: AdCreativeUnitTrackerType.JS,

                    CreativeUnit = this
                };

                this.Trackers.Add(creativeUnitTrackingEvent);
            }
            else
            {
                creativeUnitTrackingEvent.TrackingUrl = trackingEventUrl;
            }
        }

        public virtual void SetTrackingEvent(AdGroupTrackingEvent trackingEvent, IList<string> trackingEventUrls)
        {
            if (this.Trackers == null)
            {
                this.Trackers = new List<AdCreativeUnitTracker>();
            }
            if (trackingEvent == null || trackingEventUrls == null)
            {
                return;
            }
            var creativeUnitTrackingEvents = this.Trackers.Where(p => string.Equals(p.AdGroupEvent.Code, trackingEvent.Code, StringComparison.InvariantCultureIgnoreCase) && !p.IsDeleted).ToList();
            AdCreativeUnitTracker creativeUnitTrackingEvent = null;
            if (creativeUnitTrackingEvents == null || creativeUnitTrackingEvents.Count() <= 0)
            {
                creativeUnitTrackingEvents = new List<AdCreativeUnitTracker>();

                foreach (string url in trackingEventUrls)
                {

                    if (!string.IsNullOrEmpty(url))
                    {
                        creativeUnitTrackingEvent = new AdCreativeUnitTracker()
                        {
                            TrackingUrl = url,
                            AdGroupEvent = trackingEvent,
                            AdCreativeUnitTrackerType = !string.IsNullOrWhiteSpace(url) ? AdCreativeUnitTrackerType.URL : AdCreativeUnitTrackerType.JS,
                            CreativeUnit = this
                        };

                        this.Trackers.Add(creativeUnitTrackingEvent);
                    }
                }
            }
            else
            {

                //  creativeUnitTrackingEvents.Clear();
                //  creativeUnitTrackingEvent.TrackingUrl = trackingEventUrl;
                int i = 0; int countExisting = creativeUnitTrackingEvents.Count;
                foreach (AdCreativeUnitTracker unitTracker in creativeUnitTrackingEvents)
                {
                    unitTracker.IsDeleted = true;
                }
                foreach (string url in trackingEventUrls)
                {
                    if (i < countExisting)
                    {
                        creativeUnitTrackingEvents[i].TrackingUrl = url;
                        creativeUnitTrackingEvents[i].AdCreativeUnitTrackerType = !string.IsNullOrWhiteSpace(url) ? AdCreativeUnitTrackerType.URL : AdCreativeUnitTrackerType.JS;
                        creativeUnitTrackingEvents[i].IsDeleted = false;
                    }
                    else
                    {
                        creativeUnitTrackingEvent = new AdCreativeUnitTracker()
                        {
                            TrackingUrl = url,
                            AdGroupEvent = trackingEvent,
                            AdCreativeUnitTrackerType = !string.IsNullOrWhiteSpace(url) ? AdCreativeUnitTrackerType.URL : AdCreativeUnitTrackerType.JS,
                            CreativeUnit = this
                        };
                        this.Trackers.Add(creativeUnitTrackingEvent);
                    }
                    i++;

                }
            }
            //   this.Trackers = 
        }


        public virtual void SetTrackingJS(AdGroupTrackingEvent trackingEvent, string trackingEventJS)
        {
            if (this.Trackers == null)
            {
                this.Trackers = new List<AdCreativeUnitTracker>();
            }
            if (trackingEvent == null || string.IsNullOrEmpty(trackingEventJS))
            {
                return;
            }
            var creativeUnitTrackingEvent = this.Trackers.Where(p => string.Equals(p.AdGroupEvent.Code, trackingEvent.Code, StringComparison.InvariantCultureIgnoreCase) && !p.IsDeleted).SingleOrDefault();

            if (creativeUnitTrackingEvent == null)
            {
                creativeUnitTrackingEvent = new AdCreativeUnitTracker()
                {
                    TrackingJS= trackingEventJS,
                    AdGroupEvent = trackingEvent,
                    AdCreativeUnitTrackerType = !string.IsNullOrWhiteSpace(trackingEventJS) ? AdCreativeUnitTrackerType.JS : AdCreativeUnitTrackerType.URL,
                    CreativeUnit = this
                };

                this.Trackers.Add(creativeUnitTrackingEvent);
            }
            else
            {
                creativeUnitTrackingEvent.TrackingJS = trackingEventJS;
            }
        }

        public virtual void SetTrackingJS(AdGroupTrackingEvent trackingEvent, IList<string> trackingEventJSs)
        {
            if (this.Trackers == null)
            {
                this.Trackers = new List<AdCreativeUnitTracker>();
            }
            if (trackingEvent == null || trackingEventJSs == null)
            {
                return;
            }
            var creativeUnitTrackingEvents = this.Trackers.Where(p => string.Equals(p.AdGroupEvent.Code, trackingEvent.Code, StringComparison.InvariantCultureIgnoreCase) && !p.IsDeleted).ToList();
            AdCreativeUnitTracker creativeUnitTrackingEvent = null;
            if (creativeUnitTrackingEvents == null || creativeUnitTrackingEvents.Count() <= 0)
            {
                creativeUnitTrackingEvents = new List<AdCreativeUnitTracker>();

                foreach (string js in trackingEventJSs)
                {

                    if (!string.IsNullOrEmpty(js))
                    {
                        creativeUnitTrackingEvent = new AdCreativeUnitTracker()
                        {
                            TrackingJS = js,
                            AdGroupEvent = trackingEvent,
                            AdCreativeUnitTrackerType = !string.IsNullOrWhiteSpace(js) ? AdCreativeUnitTrackerType.JS : AdCreativeUnitTrackerType.URL,
                            CreativeUnit = this
                        };

                        this.Trackers.Add(creativeUnitTrackingEvent);
                    }
                }
            }
            else
            {

                //  creativeUnitTrackingEvents.Clear();
                //  creativeUnitTrackingEvent.TrackingUrl = trackingEventUrl;
                int i = 0; int countExisting = creativeUnitTrackingEvents.Count;
                foreach (AdCreativeUnitTracker unitTracker in creativeUnitTrackingEvents)
                {
                    unitTracker.IsDeleted = true;
                }
                foreach (string js in trackingEventJSs)
                {
                    if (i < countExisting)
                    {
                        creativeUnitTrackingEvents[i].TrackingJS = js;
                        creativeUnitTrackingEvents[i].AdCreativeUnitTrackerType = !string.IsNullOrWhiteSpace(js) && string.IsNullOrEmpty(creativeUnitTrackingEvents[i].TrackingUrl) ? AdCreativeUnitTrackerType.JS : AdCreativeUnitTrackerType.URL;
                        creativeUnitTrackingEvents[i].IsDeleted = false;
                    }
                    else
                    {
                        creativeUnitTrackingEvent = new AdCreativeUnitTracker()
                        {
                            TrackingJS = js,
                            AdGroupEvent = trackingEvent,
                            AdCreativeUnitTrackerType = !string.IsNullOrWhiteSpace(js) ? AdCreativeUnitTrackerType.JS : AdCreativeUnitTrackerType.URL,
                            CreativeUnit = this
                        };
                        this.Trackers.Add(creativeUnitTrackingEvent);
                    }
                    i++;

                }
            }
            //   this.Trackers = 
        }




        public virtual void RemoveTrackingEvent(AdGroupTrackingEvent trackingEvent)
        {
            if (this.Trackers != null)
            {
                var creativeUnitTrackingEvent = this.Trackers.Where(p => string.Equals(p.AdGroupEvent.Code, trackingEvent.Code, StringComparison.InvariantCultureIgnoreCase) && !p.IsDeleted).SingleOrDefault();
                if (creativeUnitTrackingEvent != null)
                {
                    creativeUnitTrackingEvent.IsDeleted = true;
                }

            }
        }


    }
}

