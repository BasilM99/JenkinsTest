<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="noqoush.Settings" type="System.Configuration.NameValueSectionHandler" />
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" requirePermission="true" />
    <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,Log4net" />
    <section name="dataCacheClient" type="Microsoft.ApplicationServer.Caching.DataCacheClientSection,Microsoft.ApplicationServer.Caching.Core, Version=1.0.0.0,Culture=neutral, PublicKeyToken=31bf3856ad364e35" allowLocation="true" allowDefinition="Everywhere" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data" requirePermission="true" />
    <section name="redisCacheClient" type="StackExchange.Redis.Extensions.LegacyConfiguration.RedisCachingSectionHandler, StackExchange.Redis.Extensions.LegacyConfiguration" />
  </configSections>
  <!--<rediscache>
    <cache region="AdFalconNhibernate" expiration="999" priority="4" />
  </rediscache>-->
  <redisCacheClient allowAdmin="true" connectTimeout="10000" database="0">
    <hosts>
      <add host="192.168.2.135" cachePort="7000" />
      <add host="192.168.2.21" cachePort="7000" />
      <add host="192.168.2.22" cachePort="7000" />
      <add host="192.168.2.135" cachePort="7001" />
      <add host="192.168.2.21" cachePort="7001" />
      <add host="192.168.2.22" cachePort="7001" />
      <add host="192.168.2.135" cachePort="7002" />
      <add host="192.168.2.21" cachePort="7002" />
      <add host="192.168.2.22" cachePort="7002" />
    </hosts>
  </redisCacheClient>
  <dataConfiguration defaultDatabase="DB" />
  <connectionStrings>
    <add name="DB" connectionString="server=127.0.0.1;User Id=root;Password=pass2word1;database=adfalcon;Persist Security Info=True;Charset=utf8;" providerName="MySql.Data.MySqlClient" />
    <add name="ReportingDB" connectionString="server=192.168.2.25;User Id=root;Password=pass@word1;database=adfalcon_stats_summary;Persist Security Info=True;Charset=utf8;" providerName="MySql.Data.MySqlClient" />
    <!--<add name="DB" connectionString="server=192.168.2.119;User Id=root;Password=hello@1;database=adfalcon;;Persist Security Info=True;Charset=utf8;" providerName="MySql.Data.MySqlClient"/>-->
    <add name="ReportingGPDB" connectionString="Server=192.168.2.64;Port=5432;Database=adfalcon_test;User Id=gpadmin; Password=Gr**nplum17!;" providerName="Npgsql" />
    <!--<add name="DB" connectionString="server=192.168.2.119;User Id=root;Password=hello@1;database=adfalcon_web_dev;_2_1_0;Persist Security Info=True;Charset=utf8;" providerName="MySql.Data.MySqlClient"/>
    <add name="ReportingDB" connectionString="server=192.168.2.119;User Id=root;Password=hello@1;database=adfalcon_web_dev;_stats_summary;Persist Security Info=True;Charset=utf8;" providerName="MySql.Data.MySqlClient"/>-->
  </connectionStrings>
  <configProtectedData>
    <providers>
      <add useMachineProtection="true" name="DPAPIProtection" type="System.Configuration.DpapiProtectedConfigurationProvider,System.Configuration, Version=2.0.0.0,Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    </providers>
  </configProtectedData>
  <noqoush.Settings configProtectionProvider="DataProtectionConfigurationProvider">
    <EncryptedData>
      <CipherData>
        <CipherValue>AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAADZWwnjfPMU+8HXcz1iayuAQAAAACAAAAAAAQZgAAAAEAACAAAABD9nD7Csl+BaVKcVJT5Nfh1NjLXftpOn9Go+tYi+gn4gAAAAAOgAAAAAIAACAAAAAYNsX5+kbnAZrzrNkTFCVPMLaDV7rHhzDQBgrgrhYm39AAAADHtGNkFUeIpRAcX4tOAYIePUG91+zLgVxLSeM2TBjZagpW+TJqSK0aeDju+kTbgjkTAa8bY9n9g5l/zKeCoWFlAOgjMJmTDqJezlZir1PAEUZsiY1NFqJLjAYGBhCZRjMR/FDr+VVhsXGB31MzbXPpzyjssEIdp9JEWxaQGpqqJK2BEejxTGZ8jLRtkfWEPrMXR9Dy59dAIdUi/EABjxc2WCELPCJJVSRWiU5dB+IeQepNyBnXN8vmMToov09oPdAxSH7dKXTwwEDYOu8CEI6kQAAAAIe8m/8GgsURB3n692/mEc/SDZ3HKK0MDzbOrnizqXVgFYDXuJvhf/gp/EynN54UYs42Ysve+A0Xxwkf4qEX8rQ=</CipherValue>
      </CipherData>
    </EncryptedData>
  </noqoush.Settings>
  <dataCacheClient>
    <securityProperties mode="None" protectionLevel="None" />
    <hosts>
      <host name="192.168.2.21" cachePort="22233" />
    </hosts>
  </dataCacheClient>
  <exceptionHandling>
    <exceptionPolicies>
      <add name="Framework">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow" />
        </exceptionTypes>
      </add>
      <add name="Domain">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow" />
        </exceptionTypes>
      </add>
      <add name="Threading">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="None" />
        </exceptionTypes>
      </add>
      <add name="Service Layer">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow">
            <exceptionHandlers>
              <add logCategory="Error" eventId="100" severity="Error" type="Noqoush.Framework.ExceptionHandling.LogExceptionHandler,Noqoush.Framework" name="Error Logging Handler" />
            </exceptionHandlers>
            <!--<add logCategory="Error" eventId="100" severity="Error"
            formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling"
                   type="Noqoush.Framework.ExceptionHandling.LogExceptionHandler,Noqoush.Framework"
                   name="Error Logging Handler" />
            </exceptionHandlers>-->
          </add>
        </exceptionTypes>
      </add>
      <add name="UI">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow" />
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  <hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
    <session-factory>
      <property name="connection.provider">
        NHibernate.Connection.DriverConnectionProvider
      </property>
      <property name="connection.driver_class">
        NHibernate.Driver.MySqlDataDriver
      </property>
      <!--<property name="connection.connection_string">
        server=127.0.0.1;User Id=root;Password=1234;database=performancetest;Persist Security Info=True;
      </property>-->
      <property name="connection.connection_string">

        server=127.0.0.1;User Id=root;Password=pass2word1;database=adfalcon;;Persist Security Info=True;Charset=utf8;default command timeout=120;
        <!--server=192.168.2.119;User Id=root;Password=hello@1;database=adfalcon;;Persist Security Info=True;Charset=utf8;default command timeout=120;-->
        <!--server=192.168.2.119;User Id=root;Password=hello@1;database=adfalcon;_2_1_0;Persist Security Info=True;Charset=utf8;default command timeout=120;-->
      </property>
      <property name="dialect">
        NHibernate.Dialect.MySQLDialect
      </property>
      <property name="adonet.batch_size">
        10
      </property>
      <property name="show_sql">
        true
      </property>
      <property name="cache.use_second_level_cache">false</property>
      <property name="cache.use_query_cache">false</property>
      <property name="cache.provider_class">NHibernate.Caches.AppFabric.AppFabricProvider, NHibernate.Caches.AppFabric</property>
      <!--<property name="cache.provider_class">NHibernate.Caches.Velocity.VelocityProvider, NHibernate.Caches.Velocity</property>-->
      <!--<property name="cache.use_second_level_cache">true</property>
      <property name="cache.provider_class">
        NHibernate.Caches.Redis.RedisCacheProvider,
        NHibernate.Caches.Redis
      </property>-->
      <!--<property name="cache.use_second_level_cache">true</property>
      <property name="cache.use_query_cache">true</property>
      <property name="cache.provider_class">NHibernate.Caches.Velocity.VelocityProvider, NHibernate.Caches.Velocity</property>-->
      <!--<event type="post-collection-recreate">
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="post-collection-update">
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="post-collection-update">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>-->
      <event type="post-update">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="post-insert">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="post-delete">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="post-collection-recreate">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="post-collection-remove">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="post-collection-update">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>
      <!--<event type="create">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>-->
      <!--<event type="post-commit-delete">
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
    
      </event>
      <event type="post-commit-insert">
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
     
      </event>
      <event type="post-commit-update">
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
     
      </event>-->
      <!--
        <event type="flush">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>-->
      <!--<event type="post-update">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="post-insert">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="post-delete">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
      </event>

      <event type="pre-update">
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="pre-insert">
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="pre-delete">
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>-->
    </session-factory>
  </hibernate-configuration>
  <log4net>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="c:/logs/servicelog.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="500" />
      <maximumFileSize value="5MB" />
      <staticLogFileName value="true" />
      <filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="DEBUG" />
        <levelMax value="FATAL" />
      </filter>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date|[%thread]|%-5level|%logger|%message%newline|%exception" />
      </layout>
    </appender>
    <appender name="NHibernateFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="c:/logs/nhibernatelog.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="500" />
      <maximumFileSize value="5MB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date|[%thread]|%-5level|%logger|%message%newline|%exception" />
      </layout>
    </appender>
    <root>
      <level value="ALL" />
      <appender-ref ref="RollingFileAppender" />
    </root>
    <logger name="NHibernate">
      <level value="ERROR" />
      <appender-ref ref="RollingFileAppender" />
    </logger>
    <logger name="NHibernate.SQL" additivity="false">
      <level value="All" />
      <appender-ref ref="NHibernateFileAppender" />
    </logger>
  </log4net>
  <appSettings>
    <add key="UnavailableDBErrorCodes" value="10061,1042,1041,1040" />
    <add key="CheckDb_Timer_WaitPeriod_InMilliSec" value="10000" />
    <add key="HostId" value="6" />
    <add key="AerospikeServerIPs" value="192.168.2.27" />
    <add key="defaultCacheRegion" value="AdFalconPortalServicesByAhmad" />
    <add key="ReportingGP" value="True" />
  </appSettings>
  <!--
    For a description of web.config changes for .NET 4.5 see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.5" />
      </system.Web>
  -->
  <system.web>
    <compilation debug="true" targetFramework="4.6.1" />
    <pages controlRenderingCompatibilityVersion="4.0" />
  </system.web>
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="Critical,Information,ActivityTracing" propagateActivity="true">
        <listeners>
          <add name="messages" type="System.Diagnostics.XmlWriterTraceListener" initializeData="c:\logs\messages.svclog" />
        </listeners>
      </source>
    </sources>
    <trace autoflush="true" />
  </system.diagnostics>
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="basicHttp" sendTimeout="00:15:00" receiveTimeout="00:15:00" allowCookies="true" maxReceivedMessageSize="2147483647" maxBufferSize="2147483647" maxBufferPoolSize="2147483647">
          <readerQuotas maxDepth="32" maxArrayLength="2147483647" maxStringContentLength="2147483647" />
        </binding>
      </basicHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="">
          <dataContractSerializer maxItemsInObjectGraph="2000000000" />
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="True" httpHelpPageEnabled="True" />
          <serviceAuthorization principalPermissionMode="Custom">
            <authorizationPolicies>
              <add policyType="Noqoush.Framework.WCF.Behaviors.WcfAuthorizationPolicy,Noqoush.Framework.WCF" />
            </authorizationPolicies>
          </serviceAuthorization>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
    <services>
      <service name="{{Name}}Service">
        <endpoint binding="basicHttpBinding" address="http://localhost/Noqoush.AdFalcon.Services.Host/{{Name}}Service.svc" />
      </service>
    </services>
    <client>
      <endpoint name="STSClient" address="http://localhost/Noqoush.Framework.Infrastructure.Services.Host/SecurityService.svc" binding="basicHttpBinding" contract="Noqoush.Framework.Security.ISecurityService" />
       <endpoint name="AdServerCachingService" address="http://192.168.2.135:8083/Noqoush.AdFalcon.Server.Integration.Host/EntityUpdatesBroadcaster.svc" binding="basicHttpBinding" contract="Noqoush.AdFalcon.Server.Integration.Services.IEntityUpdatesBroadcasterService" />
      <endpoint name="ResourceService" address="http://localhost/Noqoush.Framework.Infrastructure.Services.Host/ResourceService.svc" binding="basicHttpBinding" bindingConfiguration="basicHttp" contract="Noqoush.Framework.Resources.IResourceService" />
      <endpoint name="ConfigurationSettingService" address="http://localhost/Noqoush.Framework.Infrastructure.Services.Host/ConfigurationSettingService.svc" binding="basicHttpBinding" bindingConfiguration="basicHttp" contract="Noqoush.Framework.ConfigurationSetting.IConfigurationSettingService" />
      <endpoint name="UserOptService" address="http://192.168.2.135:8083/Noqoush.AdFalcon.Server.Integration.Host/UserOptService.svc" binding="basicHttpBinding" contract="Noqoush.AdFalcon.Server.Integration.Services.IUserOptService" />
    </client>
  </system.serviceModel>
  <system.webServer>
    <security>
      <requestFiltering>
        <!--The default size is 30000000 bytes (28.6 MB). MaxValue is 4294967295 bytes (4 GB)-->
        <!-- 100 MB in bytes -->
        <requestLimits maxAllowedContentLength="4294967295" />
      </requestFiltering>
    </security>
    <modules runAllManagedModulesForAllRequests="true" />
  </system.webServer>
  <system.data>
    <DbProviderFactories>
      <remove invariant="MySql.Data.MySqlClient" />
      <add name="MySql.Data.MySqlClient" invariant="MySql.Data.MySqlClient" description=".Net Framework Data Provider for MySQL" type="MySql.Data.MySqlClient.MySqlClientFactory, MySql.Data" />
      <add name="Npgsql Data Provider" invariant="Npgsql" support="FF" description=".Net Framework Data Provider for Postgresql Server" type="Npgsql.NpgsqlFactory, Npgsql" />
    </DbProviderFactories>
  </system.data>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="dotless.Core" publicKeyToken="96b446c9e63eae34" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.2.1.0" newVersion="1.2.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Configuration" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>