@{
    ViewBag.Title = Html.GetResource("AdCreation", "Titles");
    string AdActionValueVideoEndCardUrl = Model != null && Model.AdCreativeDto != null && Model.AdCreativeDto.AdActionValueVideoEndCard != null ? Model.AdCreativeDto.AdActionValueVideoEndCard.Value2 : "";

}
@using Noqoush.AdFalcon.Domain.Common.Model.Campaign
@using Noqoush.AdFalcon.Web.Controllers.Model.Core
@using Noqoush.AdFalcon.Services.Interfaces.DTOs.Campaign.Creative
@using Noqoush.AdFalcon.Web.Controllers.Model.Campaign
@model Noqoush.AdFalcon.Web.Controllers.Model.Campaign.CreativeViewModel
@*@using Noqoush.Framework.DomainServices*@
<script type="text/javascript" language="javascript">
    var RequiredVASTInstreamVideorMsg = '@Html.GetResource("RequiredVASTInstreamVideoMsg")' ;
    var maxAdTextLength = 40;
    var maxAdDesriptionLength = 100;
    var isNew =@(Model.AdCreativeDto == null || Model.AdCreativeDto.ID < 1 ? "true" : "false");
    var isGroupPaused = @(Model.AdCreativeDto.IsAllAdsPaused ? "true" : "false");
    var adsMoreThanMinBidDMsg = '@Html.GetResource("MinBidErrMsg")';
    var minBid = @Model.AdCreativeDto.MinBid;
    var close_text = '@Html.GetResource("Close")';
    var yes_text = '@Html.GetResource("Yes")';
    var no_text = '@Html.GetResource("No")';
    var remainingCharactersMsg = ' @Html.GetResource("remainingCharacters", "Campaign") ';
    var discountedBidDesc = '@Html.GetResource("DiscountedBidDesc", "Campaign")';
    var has_discount = @((Model.DiscountDto != null).ToString().ToLower());
    var discount_value = @(Model.DiscountDto != null ? Model.DiscountDto.Value : 0);
    var discount_type = @(Model.DiscountDto != null ? Model.DiscountDto.TypeId : 0);
    var isXml = '@Model.AdCreativeDto.IsXmlUrl';
    var isVideo =  '@Model.AdCreativeDto.IsVideo';
    var Vpaid = '@Model.AdCreativeDto.IsVpaid';
    var Vpaid_1 = '@Model.AdCreativeDto.Vpaid_1';
    var Vpaid_2 = '@Model.AdCreativeDto.Vpaid_2';
    var errorDuplicateUploadedSizeImage = '@Html.GetResource("DuplicateImagesSize", "NativeAd")';
	var is_client_locked = @((!Noqoush.AdFalcon.Web.Controllers.Utilities.Config.IsAdOpsAdminInAdminApp && Model.IsClientLocked).ToString().ToLower());


		 var readOnly_warning = '@Html.GetResource("LockedCampWarning", "Campaign")';
	var is_client_readOnly = @((!Noqoush.AdFalcon.Web.Controllers.Utilities.Config.IsAdOpsAdminInAdminApp && Model.IsClientReadOnly).ToString().ToLower());
    var locked_warning = '@Html.GetResource("LockedWarning", "Campaign")';
    GlobalAdvertiserId = '@Model.AdvertiserId';
	GlobalAdvertiserAccountId = '@Model.AdvertiserAccountId';
    var ishouseadd= false;
    var creativesUnitsIds = new Array();

    function removeImageURLDIV(Id)
    {

        $("#textbox"+Id).val('');
        $("#cardImage_"+Id).hide();
    }
    function VideoEndCardimage(){
        if (typeof attachEvenToContainer == 'function') {
            attachEvenToContainer($("[name='VideoEndCardimage_container']"));
        }
    }
    function addDynamicIMageUrl()
    {
        if($("#ImagesURLList").val()!= null && $("#ImagesURLList").val()!='')
        {

            $("#cardImage_"+$("#ImagesURLList").val()).show();
        }

    }
    function successImageFileUploadVideoEndCardimage(e){
        sucessFileUploadVideoEndCardimage("@ViewData["ImagesContainer"]",e,errorDuplicateUploadedSizeImage);
    }
    function sucessFileUploadVideoEndCardimage(containerId,e,duplicateErrorMessage){

        if (e.operation == "remove")
            return true;

        if (e.response.status == "OK") {
            var docId = e.response.DocumentId;
            var width = e.response.Width;
            var height = e.response.Height;
            var creativeUnitId = e.response.CreativeUnitId;

            if(creativesUnitsIds.indexOf(creativeUnitId) == -1){
                creativesUnitsIds.push(creativeUnitId);

                var src = baseUrl + 'Downloader.ashx?docId=';

                var removeIcon = $("<a>&nbsp;</a>");
                removeIcon.addClass("remove_icon");
                removeIcon.hide();
                removeIcon.attr("href","javascript:void(0);");
                attachClickEvent(removeIcon);

                var inputDoc = $("<input type='hidden' />");
                inputDoc.attr("name", "CreativeUnit_" + containerId + "_" + creativeUnitId);
                inputDoc.val(docId);

                var imgElement = $("<img />");
                imgElement.attr("width","100").attr("height","100");
                imgElement.attr("src",src + docId);
                imgElement.attr("id","fileImage");
                imgElement.hide();

                var sizeSpan = $("<span></span>");
                sizeSpan.text(width + "X" + height);

                var divContainer = $("<div></div>");
                attachEvenToContainer(divContainer);
                divContainer.addClass("images_container");

                divContainer.append(imgElement);
                divContainer.append(removeIcon);
                divContainer.append(inputDoc);
                divContainer.append(sizeSpan);

                $("#" + containerId).append(divContainer);
                imgElement.fadeIn();
            }else{
                clearErrorMessage();
                showErrorMessage(duplicateErrorMessage);
            }
        }
        else {
            clearErrorMessage();
            showErrorMessage(e.response.status);
        }
    }

    $( document ).ready(function() {

        if(isNew && !Radio_IsChecked("#UploadXml"))
        {
            isVideo="True";
        }

        if(!isNew)
        {

            $("#UploadtypeDiv").hide();
        }
        if(isXml=="True")
        {
            Radio_check("XmlUrl");
            Radio_uncheck("Xml");
        }else
        {
            Radio_check("Xml");
            Radio_uncheck("XmlUrl");
        }
        XmlTypechanged();

        if(isVideo=="True")
        {
            Radio_check("UploadVideo");
            Radio_uncheck("UploadXml");
        }else
        {
            Radio_check("UploadXml");
            Radio_uncheck("UploadVideo");
        }

        UploadTypechanged();
        VideoEndCardFluidChanged();
        ImagesUploadTypeChanged();
        XmlTypechanged();
        VpaidChanged();
        autoCloseChecked();
        $('#AdCreativeDto_AdActionValue_Value').change(ValidateAdAction).addClass('required');


        $('#AdCreativeDto_AdActionValueVideoEndCard_Value2').change(ValidateEndCardAdAction);

        $('#AdCreativeDto_AdActionValueVideoEndCard_Value2').val('@AdActionValueVideoEndCardUrl');


            @{

                if (!Model.IsAllowedToSaveImpressionTracker)

                {
                    <text>

                    showNotfy("@Html.GetResource( "ImpressTrackerNotAllowWarnMsg", "Campaign")", "warning", '', toastroptionsWithNoTime)
            </text>

                        } }
    });
    function ValidateAdAction() {
        var returnvalue = true;

        if(Radio_IsChecked("#UploadVideo"))
        {
            //check if display url is empty
            var val2 = $('#AdCreativeDto_AdActionValue_Value').val();
            if ((val2 == null) || $.trim(val2) == '') {
                $('#displayURLRequiredMsg').show();
                returnvalue = false;
            } else {
                $('#displayURLRequiredMsg').hide();
            }
            //check if  url is valid
            var temp = ValidateUrl($('#AdCreativeDto_AdActionValue_Value'));
        }
        else
        {

            return true;

        }
        return returnvalue && temp;// && temp1;
    };


    function ValidateEndCardAdAction() {
        var returnvalue = true;

        if(!Radio_IsChecked("#UploadDynamic"))
        {
            //check if display url is empty
            var val2 = $('#AdCreativeDto_AdActionValueVideoEndCard_Value2').val();
            if (!((val2 == null) || $.trim(val2) == '')) {

                var temp = ValidateUrl($('#AdCreativeDto_AdActionValueVideoEndCard_Value2'));
                if(!temp)
                {
                    $("#AdActionValueVideoEndCardDisplayURLErrorMsg").show();

                }
                else
                {

                    $("#AdActionValueVideoEndCardDisplayURLErrorMsg").hide();
                }
                returnvalue = true;
            }
            else
            {
                $("#AdActionValueVideoEndCardDisplayURLErrorMsg").hide();

            }

        }
        else
        {

            return true;

        }
        return returnvalue && temp;// && temp1;
    };
    var validateRM_AdAction = ValidateAdAction;
    function XmlTypechanged()
    {
        if(Radio_IsChecked("#XmlUrl"))
        {
            $("#XMLUrlDiv").show();
            $("#XMLDiv").hide();
            $("#AdCreativeDto_IsXmlUrl").val(true);

        }else
        {

            $("#XMLUrlDiv").hide();
            $("#XMLDiv").show();
            $("#AdCreativeDto_IsXmlUrl").val(false);

        }

    }
    function UploadTypechanged()
    {
        if(Radio_IsChecked("#UploadVideo"))
        {
            $("#VideoDetails").show();
            $("#XmlDetails").hide();
            $("#VpaidDiv").hide();
            $("#AdCreativeDto_IsVideo").val(true);
            $("#CTAURLDiv").show();
            $("#imagecardex").show();
            //$("#In-Stream-Video-Trackers").show();

            $('#AdCreativeDto_AdActionValue_Value').removeClass("ValdationIgnored");

        }else
        {
            //  $("#In-Stream-Video-Trackers").hide();
            $("#VideoDetails").hide();
            $("#XmlDetails").show();
            $("#VpaidDiv").show();
            $("#imagecardex").hide();
            $("#CTAURLDiv").hide();
            $('#AdCreativeDto_AdActionValue_Value').addClass("ValdationIgnored");
            $("#AdCreativeDto_IsVideo").val(false);

        }

    }
    function VpaidChanged()
    {

        $("#AdCreativeDto_IsVpaid").val(!Radio_IsChecked("#VpaidTypeNone"));
        $("#AdCreativeDto_Vpaid_1").val(Radio_IsChecked("#VpaidType1"));
        $("#AdCreativeDto_Vpaid_2").val(Radio_IsChecked("#VpaidType2"));

    }
    function autoCloseChecked()
    {

        if(Radio_IsChecked("#EnableAutoClose"))
        {
            $("#AutoCloseDurationDiv").fadeIn( 1000, "linear" );
            $("#AdCreativeDto_EnableAutoClose").val(true);
        }else
        {
            $("#AutoCloseDurationDiv").fadeOut( 1000, "linear" );
            $("#AdCreativeDto_EnableAutoClose").val(false);

        }
    }

    function ImagesUploadTypeChanged()
    {

        if(Radio_IsChecked("#UploadDynamic"))
        {
            $("#AdImagesDynamicDiv").show();
            $("#AdImagesStaticDiv").hide();
            $("#AdCreativeDto_IsStatic").val(false);
            $("#AdActionValueVideoEndCardUrl").hide();

            $('.errorURLEnteredCTA').each(function () {
                $(this).hide();
            });

        }else
        {
            $("#AdImagesDynamicDiv").hide();
            $("#AdImagesStaticDiv").show();
            $("#AdActionValueVideoEndCardUrl").show();
            $("#AdCreativeDto_IsStatic").val(true);
            $('.errorURLEnteredImages').each(function () {
                $(this).hide();
            });
            $('.errorURLEnteredFluid').each(function () {
                $(this).hide();
            });

        }

    }

    function VideoEndCardFluidChanged()
    {

        if(Radio_IsChecked("#VideoEndCardFluid"))
        {
            $("#VideoEndCardFluidURLDiv").fadeIn( 1000, "linear" );
            $("#AdImagesDynamicUrlsDiv").fadeOut( 1000, "linear" );
            $('.errorURLEnteredImages').each(function () {
                $(this).hide();
            });


            $("#AdCreativeDto_VideoEndCardFluid").val(true);
        }else
        {
            $("#AdImagesDynamicUrlsDiv").fadeIn( 1000, "linear" );
            $("#VideoEndCardFluidURLDiv").fadeOut( 1000, "linear" );

            $('.errorURLEnteredFluid').each(function () {
                $(this).hide();
            });
            $("#AdCreativeDto_VideoEndCardFluid").val(false);
        }
    }


    function OnChangeURL(self)
    {

        //check if  url is valid
        var temp = ValidateUrl($('#'+self.id),self.id+'-URLErrorMsg2');

        return temp
    }

    function FinalCheckforSubmitting()
    {

        if(Radio_IsChecked("#VideoEndCardFluid"))
        {

            $('.DynamicImageUrls').each(function () {
                $(this).val('');
            });



        }else
        {

            $("#AdCreativeDto_VideoEndCardFluidURL").val('');

        }

        if(Radio_IsChecked("#UploadDynamic"))
        {

            $('#AdCreativeDto_AdActionValueVideoEndCard_Value2').val('testVideo');

        }
        else
        {
            $("#AdCreativeDto_VideoEndCardFluid").val(false);
            $('.DynamicImageUrls').each(function () {
                $(this).val('');
            });

            $("#AdCreativeDto_VideoEndCardFluidURL").val('');



        }

        if(!Radio_IsChecked("#UploadVideo"))
        {
            $('#AdCreativeDto_AdActionValue_Value').val('http://test.com');
            $('#AdCreativeDto_AdActionValueVideoEndCard_Value').val('http://adfalcondummy.com');

        }
        $('#AdCreativeDto_AdActionValueVideoEndCard_Value').val('http://adfalcondummy.com');
    }
</script>



@using (Html.BeginForm())
{
    RouteData routeData = RouteTable.Routes.GetRouteData(new HttpContextWrapper(System.Web.HttpContext.Current));
    @Html.Hidden("AdTypeId", (int)Model.AdCreativeDto.TypeId);

    @Html.Hidden("AdBannerTypeId", Model.AdCreativeDto.AdBannerType.HasValue ? (int)Model.AdCreativeDto.AdBannerType : (int?)null);
    @Html.HiddenFor(p => p.AdCreativeDto.IsAdPaused);
    @Html.HiddenFor(p => p.AdCreativeDto.IsVideo);
    @Html.HiddenFor(p => p.AdCreativeDto.IsXmlUrl);
    @Html.HiddenFor(p => p.AdCreativeDto.EnableAutoClose);
    @Html.HiddenFor(p => p.AdCreativeDto.IsVpaid);
    @Html.HiddenFor(p => p.AdCreativeDto.Vpaid_1);
    @Html.HiddenFor(p => p.AdCreativeDto.Vpaid_2);
    @Html.HiddenFor(p => p.AdCreativeDto.VideoEndCardFluid);
    @Html.HiddenFor(p => p.AdCreativeDto.IsSecureCompliant);
    @Html.HiddenFor(p => p.AdCreativeDto.IsStatic);
    @Html.HiddenFor(p => p.AdCreativeDto.AdActionValueVideoEndCard.Value);
    <div id="dialog-form" title="@Html.GetResource("Preview")" style="display: none;">
        <div class="tablet-bg">
            <img id="imgPreview" />
        </div>
    </div>
    <div id="statusDialog-form" title="@Html.GetResource("PauseAdConfirmationTitle", "Campaign")" style="display: none; ">
        <div class="go-left data-row">
            @Html.GetResource("PauseAdConfirmation", "Campaign")
        </div>
    </div>
    <div class="data-row section-container">
        <br />
        <div class="data-row section-container">
            @Html.Partial("CreativeSlider")


            <div class="data-row" readonlyToBe>
                <h2>
                    @Html.GetResource("AdCreation", "Titles")
                </h2>

                <div class="section-form-container">

                    <div class="section-form-inner-container info-container">

                        <div class="data-row data-container" id="UploadtypeDiv">
                            <div class="label-container">
                                <span class="field-title required-field">@Html.GetResource("AdType", "Campaign")</span>
                            </div>
                            <div class="field-container">


                                <div class="field-container" style="width: 140px">
                                    @{
                                        bool isChecked = Model.AdCreativeDto.IsVideo;

                                    }

                                    @Html.GetRadioButton("Uploadtype", Html.GetResource("Upload", "Video"), isChecked, "", value: "", onChange: "UploadTypechanged", Id: "UploadVideo")

                                </div>
                                @if (Model.IsAllowedToSaveImpressionTracker || (Model.AdCreativeDto != null && Model.AdCreativeDto.ID > 0))
                                {
                                    <div class="field-container" style="width: 140px">
                                        @{
                                            isChecked = !Model.AdCreativeDto.IsVideo;

                                        }

                                        @Html.GetRadioButton("Uploadtype", Html.GetResource("Vast", "Video"), isChecked, "", value: "", onChange: "UploadTypechanged", Id: "UploadXml")


                                    </div>

                                }
                            </div>
                        </div>

                        <div class="data-row data-container">
                            <div class="label-container">
                                <span class="field-title required-field">@Html.GetResource("AdName", "Campaign")</span>
                            </div>
                            <div class="field-container">
                                @Html.AdFalconEditorFor(p => p.AdCreativeDto.Name)
                                @Html.AdFalconValidationMessageFor(p => p.AdCreativeDto.Name)
                            </div>
                        </div>
                        @if (!string.IsNullOrEmpty(Model.AdCreativeDto.UniqueId) && Model.AdCreativeDto.UniqueId != "0")
                        {
                            <div class="data-row info-container last-container">
                                <div class="data-row data-container">
                                    <div class="label-container">
                                        <span class="field-title required-field">@Html.GetResource("UniqueId", "Global") </span>
                                    </div>
                                    <div class="field-container">
                                        <span class="slide-text margin-summary UniqueID-line-height">@Model.AdCreativeDto.UniqueId</span>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="data-row data-container">
                            <div class="label-container">
                                <span class="field-title campaign-upload">@Html.GetResource("AdTitle", "Campaign")</span>
                            </div>
                            <div class="field-container">
                                @Html.AdFalconEditorFor(p => p.AdCreativeDto.AdText)@Html.AdFalconValidationMessageFor(p => p.AdCreativeDto.AdText)
                                <span id="remainingCharactersDesc" class="data-row guid-text go-left"></span>
                            </div>
                        </div>
                        <div class="data-row data-container">
                            <div class="label-container">
                                <span class="field-title campaign-upload">@Html.GetResource("Description", "Campaign")</span>
                            </div>
                            <div class="field-container">
                                @Html.AdFalconEditorFor(p => p.AdCreativeDto.Description)@Html.AdFalconValidationMessageFor(p => p.AdCreativeDto.Description)
                                <span id="remainingCharactersDesc" class="data-row guid-text go-left"></span>
                            </div>
                        </div>
                        <div class="data-row data-container" id="CTAURLDiv">
                            <div class="label-container">
                                <span class="field-title required-field">@Html.GetResource("CTAURL")</span>
                            </div>

                            <div class="field-container">
                                @Html.AdFalconEditorFor(p => p.AdCreativeDto.AdActionValue.Value, new { @class = "url ValdationIgnored" })
                                @Html.AdFalconValidationMessageFor(p => p.AdCreativeDto.AdActionValue.Value)

                                <span id="displayURLErrorMsg" class="validation-arrow field-validation-error"
                                      style="display: none;"><span class="">@Html.GetResource("UrlMsg")</span></span>
                                </div>
                            </div>

                            @if (Model.AdCreativeDto.ID < 1)
                            {
                                <div class="data-row data-container">
                                    <div class="label-container">
                                        <span class="field-title required-field">@Html.GetResource("EnvironmentType", "Campaign")</span>
                                    </div>
                                    <div class="field-container">
                                        @foreach (var item in Model.EnvironmentTypes)
                                        {
                                            <div class="field-container" style="width: 95px">
                                                @Html.GetRadioButton("EnvironmentType", item.Text, value: item.Value, Checked: item.Selected, onChange: "")
                                            </div>
                                        }


                                    </div>
                                </div>



                            }
                            else
                            {

                                @Html.Hidden("EnvironmentType", (int)Model.AdCreativeDto.EnvironmentType)

                                <div class="data-row data-container">
                                    <div class="label-container">
                                        <span class="field-title required-field">@Html.GetResource("EnvironmentType", "Campaign")</span>
                                    </div>
                                    <div class="field-container">
                                        <span class="side-text">
                                            @Model.EnvironmentTypes.Where(p => p.Value == ((int)Model.AdCreativeDto.EnvironmentType).ToString()).Single().Text
                                        </span>
                                    </div>
                                </div>

                            }
                        </div>
                        @{
                            int i = 0;
                            var displayFirst = "display:block";
                            foreach (var creativeUnitViewModel in Model.InStreamVideos)
                            {
                                if (i > 0)
                                {
                                    displayFirst = "display:none";
                                }
                                <div class="section-form-inner-container info-container" id="creativeUnitDiv@(i)" style="@(displayFirst)">
                                    <div class="data-row data-container">



                                        <div class="field-container">
                                            @Html.Partial("AdAction/AdActionValueTracker/Tracker", Model)
                                        </div>


                                    </div>
                                    <div class="field-container">
                                        @Html.Partial("AdAction/AdActionValueTracker/ImpressionTracker", Model)
                                    </div>
                                    <br />
                                    <br />
                                    <br />
                                    <div class="data-row data-container">
                                        <div class="label-container">
                                            <span class="field-title required-field campaign-upload">@Html.GetResource("VideoDeliveryMethods", "InStreamVideoCreative")   </span>
                                        </div>
                                        <div class="field-container">
                                            <span id="remainingCharactersDesc" class="data-row guid-text go-left"></span>
                                            @if (Model.AdCreativeDto.ID < 1)
                                            {
                                                @Html.AdFalconDropDownList("AdCreativeDto.CreativeUnitsContent[" + i + "].InStreamVideoCreativeUnit.DeliveryMethod", Model.VideoDeliveryMethods)
                                            }
                                            else
                                            {
                                                var selctedList = new List<SelectListItem>();
                                                selctedList = Model.VideoDeliveryMethods.ToList();
                                                SelectListItem selectedItem = selctedList.Where(x => x.Value == creativeUnitViewModel.InStreamVideoCreativeUnit.DeliveryMethod.ToString()).FirstOrDefault();
                                                selectedItem.Selected = true;
                                                @Html.AdFalconDropDownList("AdCreativeDto.CreativeUnitsContent[" + i + "].InStreamVideoCreativeUnit.DeliveryMethod", selctedList);
                                            }

                                        </div>
                                    </div>
                                </div>
                                <div id="In-Stream-Video-Trackers">
                                    @Html.Partial("AdAction/" + Model.AdCreativeDto.ViewName)
                                </div>
                                i++;
                            }
                            <div id="VideoDetails" style="display:none;">

                                <h2>
                                    @Html.GetResource("Creative", "Campaign")
                                </h2>
                                <div id="form">
                                    @if (Model.AdCreativeDto.ID < 1)
                                    {
                                        @Html.Partial("Creative/CreativeUnit/GeneralCreative", new CreativeUnitLisViewModel { AdCreativeDto = Model.AdCreativeDto, CreativeUnits = Model.TabletCreativeUnits[(int)AdTypeIds.InStreamVideo], TypeId = AdTypeIds.InStreamVideo, IsAllowedToSaveImpressionTracker = Model.IsAllowedToSaveImpressionTracker })
                                    }
                                    else
                                    {
                                        @Html.Partial("Creative/CreativeUnit/GeneralCreative", new CreativeUnitLisViewModel { AdCreativeDto = Model.AdCreativeDto, CreativeUnits = Model.InStreamVideos, TypeId = AdTypeIds.InStreamVideo, IsAllowedToSaveImpressionTracker = Model.IsAllowedToSaveImpressionTracker })
                                    }
                                </div>
                            </div>

                            <div id="XmlDetails">
                                <h2>
                                    @Html.GetResource("VASTTag", "VideosTag")
                                </h2>
                                <div class="data-row data-container info-container" id="">
                                    <div class="label-container">
                                        <span class="field-title required-field">@Html.GetResource("Type", "VideosTag")</span>
                                    </div>
                                    <div class="field-container">
                                        <div class="field-container" style="width: 130px">
                                            @Html.GetRadioButton("XmlType", @Html.GetResource("VASTTagXML", "VideosTag"), false, "", value: "false", onChange: "XmlTypechanged", Id: "Xml")
                                        </div>
                                        <div class="field-container" style="width: 130px">
                                            @Html.GetRadioButton("XmlType", @Html.GetResource("VASTTagURL", "VideosTag"), true, "", value: "true", onChange: "XmlTypechanged", Id: "XmlUrl")
                                        </div>
                                        <div class="field-container" style="width: 95px">
                                            @Html.Partial("MoreInfoHtml", "MoreInfo", new ViewDataDictionary { { "Style2", "width: 400px;float:none;" } })

                                        </div>

                                    </div>
                                </div>

                                <div class="data-row data-container info-container" id="XMLDiv" style="display:none;">
                                    <div class="label-container">
                                        <span class="field-title required-field campaign-upload">&nbsp;&nbsp;&nbsp;</span>
                                    </div>
                                    <div class="field-container">
                                        @Html.TextAreaFor(p => p.AdCreativeDto.Xml, new { @class = "text-box", @style = "width:600px;height:150px;" })
                                    </div>
                                </div>

                                <div class="data-row data-container info-container" id="XMLUrlDiv">
                                    <div class="label-container">
                                        <span class="field-title required-field campaign-upload">&nbsp;&nbsp;&nbsp;</span>
                                    </div>
                                    <div class="field-container">
                                        @Html.TextBoxFor(p => p.AdCreativeDto.XMlUrl, new { @class = "text-box", @onchange = "OnChangeURL(this)" })


                                        <span id="AdCreativeDto_XMlUrl-URLErrorMsg2" class="validation-arrow field-validation-error errorXMlUrl"
                                              style="display: none;"><span class="">@Html.GetResource("UrlMsg")</span></span>
                                        </div>
                                    </div>

                                    <div class="data-row data-container info-container" id="">
                                        <div class="label-container">
                                            <span class="field-title required-field">VPAID</span>
                                        </div>
                                        <div class="field-container">
                                            <div class="field-container" style="width: 95px">
                                                @{
                                                    isChecked = !Model.AdCreativeDto.IsVpaid;

                                                }
                                                @Html.GetRadioButton("VpaidType", "None", isChecked, "", value: "", onChange: "VpaidChanged", Id: "VpaidTypeNone")
                                            </div>
                                            <div class="field-container" style="width: 95px">
                                                @{
                                                    isChecked = Model.AdCreativeDto.Vpaid_1 && Model.AdCreativeDto.IsVpaid;

                                                }
                                                @Html.GetRadioButton("VpaidType", "VPAID-1", isChecked, "", value: "", onChange: "VpaidChanged", Id: "VpaidType1")
                                            </div>
                                            <div class="field-container" style="width: 95px">
                                                @{
                                                    isChecked = Model.AdCreativeDto.Vpaid_2 && Model.AdCreativeDto.IsVpaid;

                                                }
                                                @Html.GetRadioButton("VpaidType", "VPAID-2", isChecked, "", value: "", onChange: "VpaidChanged", Id: "VpaidType2")
                                            </div>

                                        </div>

                                    </div>
                                    @if (@Model.AdCreativeDto.VASTProtocol.ToString() != "None")
                                    {
                                        <div class="data-row data-container info-container" id="">
                                            <div class="label-container">
                                                <span class="field-title required-field">@Html.GetResource("Version", "Targeting")</span>
                                            </div>
                                            <div class="field-container">
                                                <div class="field-container UniqueID-line-height" style="width: 95px">
                                                    @Model.AdCreativeDto.VASTProtocol.ToText()
                                                </div>
                                            </div>
                                        </div>
                                    }


                                </div>
                                <div id="imagecardex">

                                    <h2>
                                        @Html.GetResource("VideoEndCard", "Campaign")
                                    </h2>

                                    <div class="clear">
                                        &nbsp;
                                    </div>
                                    <div class="data-row data-container info-container">
                                        <div class="label-container">
                                            <span class="field-title required-field">&nbsp;</span>
                                        </div>
                                        <div class="field-container">
                                            <div class="data-row">
                                                @{
                                                    isChecked = Model.AdCreativeDto.ID > 0 ? Model.AdCreativeDto.EnableAutoClose : true;

                                                }
                                                @Html.GetCheckBox("EnableAutoClose", Html.GetResource("AutoClose"), isChecked: isChecked, onChange: "autoCloseChecked")
                                            </div>
                                        </div>

                                        <div class="data-row data-container info-container floating-left" id="AutoCloseDurationDiv" style="margin-top:-1px">
                                            <div class="label-container" style="width:50px">
                                                <span class="field-title required-field">@Html.GetResource("After")</span>
                                            </div>
                                            <div class="field-container">
                                                <div class="data-row">


                                                    @Html.TextBoxFor(p => p.AdCreativeDto.AutoCloseWaitInSeconds, new { style = "width:50px", @class = "required single-line" })
                                                    @Html.GetResource("Sec")
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @*<div class="data-row data-container info-container" id="AutoCloseDurationDiv">
                            <div class="label-container">
                                <span class="field-title required-field">@Html.GetResource("After")</span>
                            </div>
                            <div class="field-container">
                                <div class="data-row">
                                    @Html.AdFalconEditorFor(p => p.AdCreativeDto.AutoCloseWaitInSeconds)
                                    @Html.GetResource("Sec")
                                </div>
                            </div>
                        </div>*@
                                    <div class="data-row data-container info-container" id="AdActionValueVideoEndCardUrl">
                                        <div class="label-container">
                                            <span class="field-title required-field">@Html.GetResource("CTAURL")</span>
                                        </div>

                                        <div class="field-container">
                                            <input type="text" id="AdCreativeDto_AdActionValueVideoEndCard_Value2" name="AdCreativeDto.AdActionValueVideoEndCard.Value2" class="text-box url ValdationIgnored" />

                                            <span id="AdActionValueVideoEndCardDisplayURLErrorMsg" class="validation-arrow field-validation-error errorURLEnteredCTA"
                                                  style="display: none;"><span class="">@Html.GetResource("UrlMsg")</span></span>
                                            </div>

                                        </div>



                                        <div class="data-row data-container info-container" id="">
                                            <div class="label-container">
                                                <span class="field-title required-field">@Html.GetResource("Type", "ImagesUploadType")</span>
                                            </div>
                                            <div class="field-container">


                                                <div class="field-container" style="width: 170px">
                                                    @{
                                                        isChecked = Model.AdCreativeDto.IsStatic;
                                                        if (Model.AdCreativeDto.ID == 0)
                                                        {
                                                            isChecked = true;
                                                        }

                                                    }

                                                    @Html.GetRadioButton("ImagesUploadType", @Html.GetResource("Static", "ImagesUploadType"), isChecked, "", value: "", onChange: "ImagesUploadTypeChanged", Id: "UploadStatic")


                                                </div>
                                                <div class="field-container" style="width: 170px">
                                                    @{
                                                        isChecked = !Model.AdCreativeDto.IsStatic;
                                                        if (Model.AdCreativeDto.ID == 0)
                                                        {
                                                            isChecked = false;
                                                        }
                                                    }

                                                    @Html.GetRadioButton("ImagesUploadType", @Html.GetResource("Dynamic", "ImagesUploadType"), isChecked, "", value: "", onChange: "ImagesUploadTypeChanged", Id: "UploadDynamic")

                                                </div>

                                            </div>
                                        </div>


                                        <div id="NativeAdImages">

                                            <div id="AdImagesStaticDiv">

                                                <div class="help_note">
                                                    - @Html.GetResource("OptionalImageHelp", "NativeAd") @string.Join(", ", Model.VideoEndCardAdImages.Select(p => p.DisplayText))
                                                </div>
                                                <div class="data-row data-container">
                                                    <div class="data-row field-container">
                                                        <div class="floating-right uplaod-ctnl-special">
                                                            @(Html.Telerik().Upload().Name("image_upload").Multiple(false).ShowFileList(false)
.Async(async => async.Save("Save", "Document", new { group = ViewData["ImagesContainer"].ToString(), typeId = 0 }).Remove("Remove", "Document")
.AutoUpload(true)).ClientEvents(events => events.OnSuccess("successImageFileUploadVideoEndCardimage")))
                                                            @*@Html.Partial("Creative/CreativeUnit/GeneralCreative", new CreativeUnitLisViewModel { AdCreativeDto = Model.AdCreativeDto, CreativeUnits = Model.NativeAdsIcons, TypeId = AdTypeIds.NativeAd })*@
                                                        </div>
                                                    </div>
                                                </div>
                                                <div id="@ViewData["ImagesContainer"]" class="data-row data-container">
                                                    @if (Model.AdCreativeDto.ID > 0)
                                                    {

                                                        foreach (var item in Model.AdCreativeDto.VideoEndCardAdImages)
                                                        {
                                                            <div class="images_container" name="VideoEndCardimage_container">
                                                                <img width="100" height="100" src='@(Noqoush.AdFalcon.Web.Controllers.Utilities.Config.RootUrl + "Downloader.ashx?docId=" + item.DocumentId.ToString())' id="fileImage">
                                                                <a class="remove_icon" href="javascript:void(0);" style="display: none;">&nbsp;</a>
                                                                <input type="hidden" name="CreativeUnit_@ViewData["ImagesContainer"]_@item.CreativeUnitId" value="@item.DocumentId">
                                                                <span>@string.Format("{0}X{1}", item.CreativeUnit.Width, item.CreativeUnit.Height)</span>
                                                            </div>

                                                        }

                                                        <script type="text/javascript">
                                    @foreach (var item in Model.AdCreativeDto.VideoEndCardAdImages)
                                    {
		                                <text>
                                                            creativesUnitsIds.push(@item.CreativeUnitId);
                                                            </text>
                                    }
                                                        </script>
                                                    }
                                                </div>
                                            </div>


                                            <div id="AdImagesDynamicDiv" style="display:none;">

                                                <div class="data-row data-container info-container">
                                                    <div class="label-container">
                                                        <span class="field-title required-field">&nbsp;</span>
                                                    </div>
                                                    <div class="field-container">
                                                        <div class="ddl-container data-row">
                                                            @{
                                                                isChecked = !Model.AdCreativeDto.VideoEndCardFluid;

                                                            }

                                                            @Html.GetRadioButton("VideoEndCardFluid", Html.GetResource("FixedType", "Lookup"), isChecked, "", value: "", onChange: "VideoEndCardFluidChanged", Id: "StaticVideoEndCardFluid")


                                                        </div>
                                                    </div>

                                                    <div class="field-container">

                                                        <div class="ddl-container data-row">
                                                            @{

                                                                isChecked = Model.AdCreativeDto.VideoEndCardFluid;


                                                            }
                                                            @Html.GetRadioButton("VideoEndCardFluid", Html.GetResource("IsFluid"), isChecked, "", value: "", onChange: "VideoEndCardFluidChanged", Id: "VideoEndCardFluid")

                                                        </div>


                                                    </div>

                                                    <div class="field-container">
                                                        &nbsp;
                                                    </div>
                                                    <div class="field-container">
                                                        @Html.Partial("MoreInfo", "MoreInfoVideoEndCardFluid", new ViewDataDictionary { { "Class_Tail", "tail-report" }, { "Style2", "float:none;" } })
                                                    </div>
                                                </div>



                                                <div id="AdImagesDynamicUrlsDiv">
                                                    @{



                                                        SelectListItem optionalItem = new SelectListItem();
                                                        optionalItem.Value = "";
                                                        optionalItem.Text = Html.GetResource("Choose", "Global");

                                                        List<SelectListItem> ImagesDyanmicList = new List<SelectListItem>();
                                                        ImagesDyanmicList.Add(optionalItem);
                                                        foreach (var item in Model.AdCreativeDto.ImageUrls)
                                                        {
                                                            var selectItem = new SelectListItem();
                                                            selectItem.Value = item.ID.ToString();
                                                            selectItem.Text = item.Width.ToString() + "x" + item.Height.ToString();
                                                            ImagesDyanmicList.Add(selectItem);
                                                        }
                                                        <div class="data-row data-container  info-container">

                                                            <div class="label-container">
                                                                <span class="field-title required-field">@Html.GetResource("Size", "Global")</span>
                                                            </div>
                                                            <div class="field-container">
                                                                @Html.AdFalconDropDownList("ImagesURLList", ImagesDyanmicList.ToList())

                                                                <img name="iconImage" onclick="addDynamicIMageUrl();" class="plusicon" style="">
                                                            </div>
                                                        </div>


                                                        for (int z = 0; z < Model.AdCreativeDto.ImageUrls.Count(); z++)
                                                        {

                                                            <div class="data-row data-container info-container" id="cardImage_@Model.AdCreativeDto.ImageUrls[z].ID" style="display:@(Model.AdCreativeDto.ImageUrls[z].Url!=null && Model.AdCreativeDto.ImageUrls[z].Url!="" ? "block" :"none");">
                                                                <div class="label-container">
                                                                    <span class="field-title required-field">@Model.AdCreativeDto.ImageUrls[z].Width X @Model.AdCreativeDto.ImageUrls[z].Height</span>
                                                                </div>
                                                                <div class="field-container">
                                                                    <div class="field-container">
                                                                        @{
                                                                            @Html.TextBoxFor(x => Model.AdCreativeDto.ImageUrls[z].Url, new { @onchange = "OnChangeURL(this)", @class = "text-box DynamicImageUrls textbox" + Model.AdCreativeDto.ImageUrls[z].ID })
                                                                            @Html.HiddenFor(x => Model.AdCreativeDto.ImageUrls[z].Width)
                                                                            @Html.HiddenFor(x => Model.AdCreativeDto.ImageUrls[z].Height)
                                                                            var idSpan = "AdCreativeDto_ImageUrls_" + z + "__Url-URLErrorMsg2";
                                                                        }

                                                                        <span id=@idSpan class="validation-arrow field-validation-error errorURLEnteredImages"
                                                                              style="display: none;"><span class="">@Html.GetResource("UrlMsg")</span></span>
                                                                        </div>
                                                                        <img name="iconImage" onclick="removeImageURLDIV(@Model.AdCreativeDto.ImageUrls[z].ID)" class="minusicon" style="">
                                                                    </div>
                                                                </div>

                                                            }
                                                    }
                                                </div>



                                                <div id="VideoEndCardFluidURLDiv">

                                                    <div class="data-row data-container info-container">
                                                        <div class="label-container">
                                                            <span class="field-title required-field">@Html.GetResource("FluidUrl")</span>
                                                        </div>
                                                        <div class="field-container">
                                                            <div class="field-container">
                                                                @Html.TextBoxFor(x => Model.AdCreativeDto.VideoEndCardFluidURL, new { @onchange = "OnChangeURL(this)", @class = "text-box" })

                                                                <span id="AdCreativeDto_VideoEndCardFluidURL-URLErrorMsg2" class="validation-arrow field-validation-error errorURLEnteredFluid"
                                                                      style="display: none;"><span class="">@Html.GetResource("UrlMsg")</span></span>

                                                                </div>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>

                                            </div>
                                            <div class="info-container">
                                                @Html.Partial("AdAction/AdActionValueTracker/VideoEndCardTracker", Model)
                                            </div>

                                        </div>
                        }


                        <div id="divThirdPartyTracker">


                            <h2>
                                @Html.GetResource("ThirdPartyVerifications", "Global")
                            </h2>




                            @Html.Partial("PartialViews/ThirdPartyTracker", Model)


                        </div>

                        @Html.Partial("PartialViews/AdvanceSettingSectionVideo")

                        @{
                            if (Noqoush.AdFalcon.Web.Controllers.Utilities.Config.IsAdmin)
                            {
                                <h2>
                                    @Html.GetResource("Settings", "Commands")
                                </h2>
                                <div class="section-form-inner-container">
                                    <div class="section-form-inner-container info-container">
                                        <div class="data-row data-container">
                                            <div class="label-container">
                                                <span class="field-title required-field">@Html.GetResource("Settings", "Commands")</span>
                                            </div>
                                            <div class="field-container">

                                                @Html.GetCheckBox("VerifyTargetingCriteria", Html.GetResource("VerifyTargetingCriteria", "TrackingAd"), Model.AdCreativeDto.VerifyTargetingCriteria)
                                                @Html.GetCheckBox("UpdateEventsFrequency", Html.GetResource("UpdateEventsFrequency", "TrackingAd"), Model.AdCreativeDto.UpdateEventsFrequency)
                                                @Html.GetCheckBox("VerifyDailyBudget", Html.GetResource("VerifyDailyBudget", "TrackingAd"), Model.AdCreativeDto.VerifyDailyBudget)
                                                @Html.GetCheckBox("VerifyCampaignStartAndEndDate", Html.GetResource("VerifyCampaignStartAndEndDate", "TrackingAd"), Model.AdCreativeDto.VerifyCampaignStartAndEndDate)
                                                @Html.GetCheckBox("UpdateTags", Html.GetResource("UpdateTags", "TrackingAd"), Model.AdCreativeDto.UpdateTags)
                                                @Html.GetCheckBox("VerifyEventsFrequency", Html.GetResource("VerifyEventsFrequency", "TrackingAd"), Model.AdCreativeDto.VerifyEventsFrequency)
                                                @Html.GetCheckBox("VerifyPrerequisiteEvents", Html.GetResource("VerifyPrerequisiteEvents", "TrackingAd"), Model.AdCreativeDto.VerifyPrerequisiteEvents)
                                                @Html.GetCheckBox("ValidateRequestDeviceAndLocationData", Html.GetResource("ValidateRequestDeviceAndLocationData", "TrackingAd"), Model.AdCreativeDto.ValidateRequestDeviceAndLocationData)



                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }


                            else
                            {
                                @Html.GetCheckBox("VerifyTargetingCriteria", Html.GetResource("VerifyTargetingCriteria", "TrackingAd"), Model.AdCreativeDto.VerifyTargetingCriteria, "", "", false, "", "", "style=display:none")
                                @Html.GetCheckBox("UpdateEventsFrequency", Html.GetResource("UpdateEventsFrequency", "TrackingAd"), Model.AdCreativeDto.UpdateEventsFrequency, "", "", false, "", "", "style=display:none")
                                @Html.GetCheckBox("VerifyDailyBudget", Html.GetResource("VerifyDailyBudget", "TrackingAd"), Model.AdCreativeDto.VerifyDailyBudget, "", "", false, "", "", "style=display:none")
                                @Html.GetCheckBox("VerifyCampaignStartAndEndDate", Html.GetResource("VerifyCampaignStartAndEndDate", "TrackingAd"), Model.AdCreativeDto.VerifyCampaignStartAndEndDate, "", "", false, "", "", "style=display:none")
                                @Html.GetCheckBox("UpdateTags", Html.GetResource("UpdateTags", "TrackingAd"), Model.AdCreativeDto.UpdateTags, "", "", false, "", "", "style=display:none")
                                @Html.GetCheckBox("VerifyEventsFrequency", Html.GetResource("VerifyEventsFrequency", "TrackingAd"), Model.AdCreativeDto.VerifyEventsFrequency, "", "", false, "", "", "style=display:none")
                                @Html.GetCheckBox("VerifyPrerequisiteEvents", Html.GetResource("VerifyPrerequisiteEvents", "TrackingAd"), Model.AdCreativeDto.VerifyPrerequisiteEvents, "", "", false, "", "", "style=display:none")
                                @Html.GetCheckBox("ValidateRequestDeviceAndLocationData", Html.GetResource("ValidateRequestDeviceAndLocationData", "TrackingAd"), Model.AdCreativeDto.ValidateRequestDeviceAndLocationData, "", "", false, "", "", "style=display:none")




                            }
                        }
                        <div style="display:none;">

                            <h2>
                                @Html.GetResource("Bid", "Campaign")
                            </h2>
                            <div class="section-form-inner-container">
                                <div class="section-form-inner-container info-container">
                                    <div class="data-row data-container">
                                        <div class="label-container">
                                            <span class="field-title required-field">@Html.GetResource("MinimalBid", "Campaign")</span>
                                        </div>
                                        <div class="field-container">
                                            <span class="side-text">@string.Format("{0:F2}", Model.AdCreativeDto.MinBid) $</span>
                                        </div>
                                    </div>
                                    <div class="data-row data-container">
                                        <div class="label-container">
                                            <span class="field-title required-field campaign-upload">@Html.GetResource("Bid", "Campaign")</span>
                                        </div>
                                        <div class="field-container">
                                            <span class="small-big-field">@Html.AdFalconTextBox("AdCreativeDto.Bid", Model == null || Model.AdCreativeDto == null ? string.Empty : Model.AdCreativeDto.Bid.ToString("F2"), new { maskType = "decimal", onchange = "onbidchange(this)", onkeypress = "onbidpress(event,this)" })</span>
                                            <span class="side-text">$</span>
                                            <span id="bidDiscounted" style="color: #E40685;" class="data-row guid-text go-left iea-go-right">@(!Model.DiscountedBid.HasValue || Model.AdCreativeDto.Bid == Model.DiscountedBid ? string.Empty : "(" + string.Format(Html.GetResource("DiscountedBidDesc", "Campaign"), Model.DiscountedBid.Value.ToString("F2")) + ")")</span>
                                            @Html.AdFalconValidationMessageFor(p => p.AdCreativeDto.Bid)
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>



                    </div>



                    <div class="section-footer">
                    </div>
                </div>

            </div>
            <div class="data-row button-container">

                @if (!Noqoush.AdFalcon.Web.Controllers.Utilities.Config.IsAdOpsAdminInAdminApp && !(Model.IsClientLocked || Model.IsClientReadOnly))
                {
                    <input type="submit" value="@Html.GetResource("Save", "Commands")" name="Create" class="save-button" onclick="return creativeUnitValidate();" />

                }      <input type="button" value='@Html.GetResource("Close", "Commands")' class="btn" onclick="redirect('@(string.IsNullOrWhiteSpace(Request.QueryString["returnUrl"]) ? Url.Action("Ads", "Campaign", new { id = routeData.Values["id"], adGroupId = routeData.Values["adGroupId"] }) : Request.QueryString["returnUrl"])    ')" />

            </div>
        </div>


    }
