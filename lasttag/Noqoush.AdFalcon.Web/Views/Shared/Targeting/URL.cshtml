@model List<Noqoush.AdFalcon.Web.Controllers.Model.Campaign.URLTargetingView>
<div class="section-form-inner-container info-container tab-pane fade" tabsection="5" id="urlSection"
    style="display: none;" readonlyToBe>
    <div class="ad-filter-text go-left floating-left">
        @Html.Raw(Html.GetResource("UrlTargetingDesc", "Campaign"))
    </div>

    <div class="data go-left floating-left" style="width: 490px;padding-top:20px">
      
        @(Html.Telerik().Grid(Model).Name("UrlGrid").NoRecordsTemplate("&nbsp;").HtmlAttributes(new { style = "overflow:visible" })
                                                  .DataKeys(keys => keys.Add(p => p.ID))
                                                  .DataBinding(dataBinding =>
                                                      {
                                                          dataBinding.Ajax().Update("UrlTargetingActions", "Campaign", new { actionname = "update" });
                                                          dataBinding.Ajax().Insert("UrlTargetingActions", "Campaign", new { actionname = "insert" });
                                                          dataBinding.Ajax().Delete("UrlTargetingActions", "Campaign", new { actionname = "delete" });
                                                          dataBinding.Ajax().Select("UrlTargetingActions", "Campaign");
                                                      })
                                                  .ToolBar(commands => commands.Position(GridToolBarPosition.Top).Insert().ButtonType(GridButtonType.Image))
                                                  .EnableCustomBinding(true)
                                                  .Columns(columns =>
                                                      {
                                                          columns.Bound(o => o.URL).Title(Html.GetResource("URL")).HtmlAttributes(new { style = "text-align:center" });
                                                          columns.Template(@<text>
                                                            <div><a class='t-button t-button-icon t-button-bare t-grid-delete t-ip-Range-Section-delete-button' onclick='deleteURLTargeting(this);'><span class='t-icon t-delete t-ip-Range-Section-delete-button'></span></a></div></text>
                                                            ).ClientTemplate("<div><a class='t-button t-button-icon t-button-bare t-grid-delete t-ip-Range-Section-delete-button' type='button' onclick='deleteURLTargeting(this);'><span class='t-icon t-delete t-ip-Range-Section-delete-button'></span></button></div>");
                                                      })
                                                   .EnableCustomBinding(true)
                                                   .Sortable(sorting => sorting.Enabled(false))
                                                   .Editable(editing => editing.Mode(GridEditMode.InCell).DisplayDeleteConfirmation(false))
                                                   .Scrollable(scrolling => scrolling.Enabled(false))
                                                                                                           .Footer(false).ClientEvents(events => { events.OnError("error_handler"); events.OnSave("save_handler"); events.OnLoad("databound_handler"); })
                                                  )
        <script type="text/javascript">
            function error_handler(e) {
                if (e.errors) {
                    var message = "Errors:\n";
                    $.each(e.errors, function (key, value) {
                        if ('errors' in value) {
                            $.each(value.errors, function () {
                                message += this + "\n";
                            });
                        }
                    });
                    alert(message);
                }
            }

            function save_handler(e) {
                var url = e.values.URL;
                url = url.replace(/\s/g, '');
                e.values.URL = url;
                $(e.form).find("input").val(url);

                if (!/^(https?):\/\//i.test(url)) {
                    url = 'http://' + url; // set both the value

                }
                if (!isMatchUrlExpression(url)) {
                    e.preventDefault();
                }
                else {

                    if (e.dataItem.URL == url.trim()) {
                        return;
                    }



                    if (checkDublicatedURLTargeting(url)) {

                        //  showErrorMessage(Duplicated, false);

                        $("#GeneralDialogText").text(AlreadyAddedMsg + " URL:" + url);
                        $("#resultGeneralDialog").dialog("open");

                        e.preventDefault();

                    }

                    else {
                        e.values.URL = url;
                        $(e.form).find("input").val(url);
                        // e.dataItem.URL = url;



                        updateUrlInfo();
                    }
                }
            }


            function checkDublicatedURLTargeting(keyword) {
                var grid = $("#UrlGrid").data("tGrid");

                if (grid == null)
                    return false;

                for (var i = 0; i < grid.changeLog.inserted.length; i++)
                    if (typeof (grid.changeLog.inserted[i]) != "undefined") {
                        if (grid.changeLog.inserted[i].URL == keyword.trim()) {
                            return true;
                        }
                    }

                array = $("#UrlGrid tbody tr");
                for (var i = 0; i < array.length; i++) {

                    dataItem = grid.dataItem(array[i]);
                    if (dataItem != undefined) {
                        if (dataItem.URL == keyword.trim()) {
                            return true;
                        }
                    }
                }

                return false;

            }

            function deleteURLTargeting(elem) {
                var grid = $("#UrlGrid").data("tGrid");
                var tr = $(elem).parents('tr');
                // delete the row
                grid.deleteRow(tr);
                updateUrlInfo();
            }

            function databound_handler() {
                updateUrlInfo(true);
            }

        </script>
    </div>
</div>
