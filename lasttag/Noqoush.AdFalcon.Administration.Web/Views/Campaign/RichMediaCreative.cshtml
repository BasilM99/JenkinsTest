@{
    ViewBag.Title = Html.GetResource("AdCreation", "Titles");
}
@using Noqoush.AdFalcon.Domain.Common.Model.Campaign
@using Noqoush.AdFalcon.Services.Interfaces.DTOs.Campaign.Creative
@using Noqoush.AdFalcon.Web.Controllers.Model.Campaign
@model Noqoush.AdFalcon.Web.Controllers.Model.Campaign.CreativeViewModel
<script type="text/javascript" language="javascript">
    var maxAdTextLength = 40;
    var isNew =@(Model.AdCreativeDto == null || Model.AdCreativeDto.ID < 1 ? "true" : "false");
    var isGroupPaused = @(Model.AdCreativeDto.IsAllAdsPaused ? "true" : "false");
    var PartialBannerMsg = '@Html.GetResource("PartialBannerBR")';
    var RequiredBannerMsg = '@Html.GetResource("RequiredBannerBR")';
    var adsMoreThanMinBidDMsg = '@Html.GetResource("MinBidErrMsg")';
    var MinBidErrorLess = '@Html.GetResource("MinBidErrorLess")';
    var tileImageMissingBRMsg = '@Html.GetResource("TileImageMissingBR")';
    var minBid = @Model.AdCreativeDto.MinBid;
    var discountedBidDesc = '@Html.GetResource("DiscountedBidDesc", "Campaign")';
    var has_discount = @((Model.DiscountDto != null).ToString().ToLower());
    var discount_value = @(Model.DiscountDto != null ? Model.DiscountDto.Value : 0);
    var discount_type = @(Model.DiscountDto != null ? Model.DiscountDto.TypeId : 0);
    var remainingCharactersMsg = ' @Html.GetResource("remainingCharacters", "Campaign") ';
    var close_text = '@Html.GetResource("Close")';
    var yes_text = '@Html.GetResource("Yes")';
    var no_text = '@Html.GetResource("No")';
    var ishouseadd= false;
    var invalidFormatMessage = '@Html.GetResource("MissingAdTags")';
    var succcessFormatMessage = '@Html.GetResource("SuccessPrepareTag","Campaign")';
    var formatContentUrl = '@Url.Action("IsFormattedAdCreativeContent", "campaign")';
    webEnvironmentTypeId= @((int)EnvironmentType.Web);
    GlobalAdvertiserId = '@Model.AdvertiserId';
    GlobalAdvertiserAccountId = '@Model.AdvertiserAccountId';

	$(document).ready(function () {
		$('#RichMediaRequiredProtocol').on('change', function () {
			if ($('#RichMediaRequiredProtocol').val() != "0") {
				$('#IsRequiredDiv').show();
			} else {
				$('#IsRequiredDiv').hide();
			}
		})
	});
    $( document ).ready(function() {
        onRadioEnvironmentTypeChanged();
    

            @{

                if (!Model.IsAllowedToSaveImpressionTracker)

                {
                    <text>

                    showNotfy("@Html.GetResource( "ImpressTrackerNotAllowWarnMsg", "Campaign")", "warning", '', toastroptionsWithNoTime)
            </text>

                        } }
    });

    function validClickMethod() {

        if ($("#ClickMethod").val() > 0) {
            $("#displayClickMethodRequiredMsg").hide();
        } else {
            $("#displayClickMethodRequiredMsg").show();
        }
    }
    function requiredSize() {
        var SelectedHTML5CreativeId = parseInt($('[name="SelectedHTML5CreativeId"]').val());

        if (!(SelectedHTML5CreativeId > 0)) {
      
            $("#displaySelectedHTML5CreativeIdRequiredMsg").show();
        } else {
            $("#displaySelectedHTML5CreativeIdRequiredMsg").hide();
        }
    }
</script>
@using (Html.BeginForm())
{
    RouteData routeData = RouteTable.Routes.GetRouteData(new HttpContextWrapper(System.Web.HttpContext.Current));
    @Html.Hidden("AdTypeId", (int)Model.AdCreativeDto.TypeId);

    @Html.Hidden("AdBannerTypeId", Model.AdCreativeDto.AdBannerType.HasValue ? (int)Model.AdCreativeDto.AdBannerType : (int?)null);
    @Html.Hidden("TileImage", Model.AdCreativeDto.TileImageId);
    @Html.HiddenFor(p => p.AdCreativeDto.IsAdPaused);
    @Html.HiddenFor(p => p.AdCreativeDto.IsSecureCompliant);
    <div id="dialog-form" title="@Html.GetResource("Preview")" style="display: none;">
        <div class="tablet-bg">
            <img id="imgPreview" />
        </div>
    </div>
    <div id="statusDialog-form" title="@Html.GetResource("PauseAdConfirmationTitle", "Campaign")" style="display: none; ">
        <div class="go-left data-row">
            @Html.GetResource("PauseAdConfirmation", "Campaign")
        </div>
    </div>
    <div class="data-row section-container">
        <br />
		<div class="data-row section-container">
			@Html.Partial("CreativeSlider")
			<div class=" data-row ">
				<h2>
					@Html.GetResource("AdCreation", "Titles")
				</h2>
				<div class="section-form-container">
                    <div class="section-form-inner-container info-container">
                        @if (Model.AdCreativeDto.ID < 1)
                        {
                            <div class="data-row data-container">
                                <div class="label-container">
                                    <span class="field-title required-field">@Html.GetResource("AdType", "Campaign")</span>
                                </div>
                                <div class="field-container">
                                    <div class="data-row">
                                        @Html.AdFalconDropDownList("AdSubType", Model.AdSubTypes)
                                        <span id="HTML5ToolTip" style="display:none">
                                            @Html.Partial("MoreInfo", "HTML5ToolTip", new ViewDataDictionary { { "Class_Tail", "tail-report" }, { "Style2", "float:none;" } })
                                        </span>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="data-row data-container">
                            <div class="label-container">
                                <span class="field-title required-field">@Html.GetResource("AdName", "Campaign")</span>
                            </div>
                            <div class="field-container">
                                @Html.AdFalconEditorFor(p => p.AdCreativeDto.Name)
                                @Html.AdFalconValidationMessageFor(p => p.AdCreativeDto.Name)
                            </div>
                        </div>
                         @if (!string.IsNullOrEmpty(Model.AdCreativeDto.UniqueId) && Model.AdCreativeDto.UniqueId != "0")
                         {
                        <div class="data-row info-container last-container">
                            <div class="data-row data-container">
                                <div class="label-container">
                                    <span class="field-title required-field">@Html.GetResource("UniqueId", "Global") </span>
                                </div>
                                <div class="field-container">
                                    <span class="slide-text margin-summary UniqueID-line-height">@Model.AdCreativeDto.UniqueId</span>
                                </div>
                            </div>
                        </div>
                         }
                        <div class="data-row data-container">
                            <div class="label-container">
                                <span class="field-title  campaign-upload">@Html.GetResource("AdText", "Campaign")</span>
                            </div>
                            <div class="field-container">
                                @Html.AdFalconEditorFor(p => p.AdCreativeDto.AdText)@Html.AdFalconValidationMessageFor(p => p.AdCreativeDto.AdText)
                                <span id="remainingCharactersDesc" class="data-row guid-text go-left"></span>
                            </div>
                        </div>
                        @if (Model.AdCreativeDto.ID < 1)
                        {

                            <div class="data-row data-container">
                                <div class="label-container">
                                    <span class="field-title required-field">@Html.GetResource("EnvironmentType", "Campaign")</span>
                                </div>
                                <div class="field-container">
                                    @foreach (var item in Model.EnvironmentTypes)
                                    {
                                        if (item.Value != "2")
                                        {<div class="field-container" style="width: 95px">
                                                @Html.GetRadioButton("EnvironmentType", item.Text, value: item.Value, Checked: item.Selected, onChange: "environmentTypeChange")
                                            </div>
                                        }
                                        else

                                        {

                                            <div class="field-container" style="width: 110px">
                                                @Html.GetRadioButton("EnvironmentType", item.Text, value: item.Value, Checked: item.Selected, onChange: "environmentTypeChange")
                                            </div>

                                        }
                                    }


                                </div>
                            </div>
                            <div class="data-row data-container">
                                <div class="label-container">
                                    <span class="field-title required-field">@Html.GetResource("OrientationType", "Campaign")</span>
                                </div>
                                <div class="field-container">
                                    @foreach (var item in Model.OrientationTypes)
                                    {
                                        <div class="field-container" style="width: 95px">
                                            @Html.GetRadioButton("OrientationType", item.Text, value: item.Value, Checked: item.Selected, onChange: "orientationTypeChange")
                                        </div>
                                    }

                                </div>
                            </div>
                            <div class="data-row data-container" id="deviceTypeDiv">
                                <div class="label-container">
                                    <span class="field-title required-field">@Html.GetResource("AdBannerType", "Campaign")</span>
                                </div>
                                <div class="field-container">
                                    @foreach (var item in Model.AdBannerTypes)
                                    {
                                        <div class="field-container" style="width: 95px">
                                            @Html.GetRadioButton("AdBannerType", item.Text, value: item.Value, Checked: item.Selected, onChange: "deviceTypeChange")
                                        </div>
                                    }
                                </div>
                            </div>



                        }
                        else
                        {
                            @Html.Hidden("AdSubType", (int)Model.AdCreativeDto.AdSubType)
                            @Html.Hidden("AdBannerType", (int)Model.AdCreativeDto.AdBannerType)
                            @Html.Hidden("EnvironmentType", (int)Model.AdCreativeDto.EnvironmentType)
                            @Html.Hidden("OrientationType", (int)Model.AdCreativeDto.OrientationType)

                            <div class="data-row data-container">
                                <div class="label-container">
                                    <span class="field-title required-field">@Html.GetResource("EnvironmentType", "Campaign")</span>
                                </div>
                                <div class="field-container">
                                    <span class="side-text">
                                        @Model.EnvironmentTypes.Where(p => p.Value == ((int)Model.AdCreativeDto.EnvironmentType).ToString()).Single().Text
                                    </span>
                                </div>
                            </div>
                            <div class="data-row data-container">
                                <div class="label-container">
                                    <span class="field-title required-field">@Html.GetResource("OrientationType", "Campaign")</span>
                                </div>
                                <div class="field-container">
                                    <span class="side-text">
                                        @Model.OrientationTypes.Where(p => p.Value == ((int)Model.AdCreativeDto.OrientationType).ToString()).Single().Text
                                    </span>
                                </div>
                            </div>
                            <div class="data-row data-container">
                                <div class="label-container">
                                    <span class="field-title required-field">@Html.GetResource("AdType", "Campaign")</span>
                                </div>
                                <div class="field-container">
                                    <span class="side-text">
                                        @Model.AdSubTypeName
                                    </span>
                                </div>
                            </div>
                            <div class="data-row data-container" id="deviceTypeDiv">
                                <div class="label-container">
                                    <span class="field-title required-field">@Html.GetResource("AdBannerType", "Campaign")</span>
                                </div>
                                <div class="field-container">
                                    <span class="side-text">
                                        @Model.AdBannerTypeName
                                    </span>
                                </div>
                            </div>

                        }
                        <div class="data-row data-container" id="IsSecureCompliantDiv">
                            <div class="label-container ">
                                <span class="field-title required-field">@Html.GetResource("Settings", "Commands")</span>
                            </div>
                            <div class="field-container">
                                @* @Html.AdFalconTextBoxFor(m => m.SettingsDto.AppSiteServerSetting.SupportedAdTypes)
                @Html.AdFalconValidationMessageFor(p => p.SettingsDto.AppSiteServerSetting.SupportedAdTypes)*@
                                @Html.GetCheckBox("IsSecureCompliantRich", Html.GetResource("IsSecureCompliant", "Creative"), Model.AdCreativeDto.IsSecureCompliant, "onIsSecureCompliantChangde")




                            </div>
                        </div>

                        @Html.Partial("AdAction/" + Model.AdCreativeDto.ViewName)
                    </div>
					<h2>
						@Html.GetResource("Creative", "Campaign")
					</h2>
					<div class="section-form-container">
						<div class="section-form-inner-container info-container">

							@{
								var isShowed = "";
								var first = "";
								foreach (var adType in Model.CreativeUnitIds())
								{

									if (adType != 7)
									{
										if (Model.AdCreativeDto.ID < 1)
										{
											isShowed = "";
											<div id="CreativeUnitContainer_@(adType)" @Html.Raw(first)>
												@if (Model.PhoneCreativeUnits.ContainsKey(adType))
												{

													<div name="PhoneBannersCreativeUnitContainer" @Html.Raw(isShowed)>
														@Html.Partial("Creative/CreativeUnit/GeneralCreative", new CreativeUnitLisViewModel { AdCreativeDto = Model.AdCreativeDto, CreativeUnits = Model.PhoneCreativeUnits[adType], TypeId = AdTypeIds.RichMedia, AdSubType = (AdSubTypes)adType  ,IsAllowedToSaveImpressionTracker=Model.IsAllowedToSaveImpressionTracker})
													</div>
													isShowed = "style='display: none'";
												}

												@if (Model.TabletCreativeUnits.ContainsKey(adType))
												{
													<div name="TabletBannersCreativeUnitContainer" @Html.Raw(isShowed)>
														@Html.Partial("Creative/CreativeUnit/GeneralCreative", new CreativeUnitLisViewModel { AdCreativeDto = Model.AdCreativeDto, CreativeUnits = Model.TabletCreativeUnits[adType], TypeId = AdTypeIds.RichMedia, AdSubType = (AdSubTypes)adType ,IsAllowedToSaveImpressionTracker=Model.IsAllowedToSaveImpressionTracker })
													</div>
												}
											</div>
										}
										else
										{
											if (Model.PhoneCreativeUnits.ContainsKey(adType))
											{
												<div name="PhoneBannersCreativeUnitContainer">
													@Html.Partial("Creative/CreativeUnit/GeneralCreative", new CreativeUnitLisViewModel { AdCreativeDto = Model.AdCreativeDto, CreativeUnits = Model.PhoneCreativeUnits[adType], TypeId = AdTypeIds.RichMedia, AdSubType = (AdSubTypes)adType ,IsAllowedToSaveImpressionTracker=Model.IsAllowedToSaveImpressionTracker })
												</div>
											}

											if (Model.TabletCreativeUnits.ContainsKey(adType))
											{
												<div name="TabletBannersCreativeUnitContainer">
													@Html.Partial("Creative/CreativeUnit/GeneralCreative", new CreativeUnitLisViewModel { AdCreativeDto = Model.AdCreativeDto, CreativeUnits = Model.TabletCreativeUnits[adType], TypeId = AdTypeIds.RichMedia, AdSubType = (AdSubTypes)adType  ,IsAllowedToSaveImpressionTracker=Model.IsAllowedToSaveImpressionTracker})
												</div>
											}
										}

									}
									else
									{
										<div id="CreativeUnitContainer_@(adType)" @Html.Raw(first)>



											<script type="text/javascript" language="javascript">
                                                    //var maxFileSize(Model.Name) = (Model.);
                                                    //var onchangeImageFunc;
                                                    var onClearedfunczipName = 'onFileCleared'


                                                    @*var onchangefuncName = '@onchnage';*@

                                                    function onFileUpload_HTML5zip(e) {


                                                        jQuery(e.files).each(function () {

                                                        });
                                                    };
													function OnChangeURL(self) {
														$('#' + self.id + '-URLErrorMsg3').hide();
														//check if  url is valid
														var temp = ValidateUrl($('#' + self.id), self.id + '-URLErrorMsg2');

														if (temp) {

															var val = $('#' + self.id).val();
															if (!((val != null) && $.trim(val) != '')) {

																$('#' + self.id + '-URLErrorMsg3').show();
																return false;
															}
															else {

																$('#' + self.id + '-URLErrorMsg3').hide();

																return true;
															}
														}
														else {
															return temp;
														}

													}
                                                    function onFileCleared() {



                                                        $("#SelectedHTML5CreativeId").val("0");
														$("#ClickTagsDiv").empty();

													};
													String.prototype.replaceAll = function (searchStr, replaceStr) {
														var str = this;

														// no match exists in string?
														if (str.indexOf(searchStr) === -1) {
															// return string
															return str;
														}

														// replace and remove first match, and do another recursirve search/replace
														return (str.replace(searchStr, replaceStr)).replaceAll(searchStr, replaceStr);
													}
													function PrepareHTMLForClickTags(URL,varName,z) {


														var str = '<div class="data-row data-container info-container" id="ClickTag_$VariableName$"><div class="label-container"><span class="field-title required-field">$VariableName$</span></div>'
														var str2 = '<div class="field-container"><div class="field-container"><input id="ClickTags_$Z$__TrackingUrl" name="ClickTags[$Z$].TrackingUrl" type="text" onchange="OnChangeURL(this)" class="text-box DynamicImageUrls textbox"   value=""> <input id="ClickTags_$Z$__VariableName" name="ClickTags[$Z$].VariableName" type="hidden" value="$VariableName$">';
														var str3 = '<span id="ClickTags_$Z$__TrackingUrl-URLErrorMsg2" class="validation-arrow field-validation-error errorURLClickTags" style="display: none;"><span class="">@Html.GetResource("UrlMsg")</span></span>';
														var str4 = '<span id="ClickTags_$Z$__TrackingUrl-URLErrorMsg3" class="validation-arrow field-validation-error errorURLClickTags" style="display: none;"><span class="">@Html.GetResource("RequiredMessage", "ResourceSet")</span></span></div></div></div>';

														var mainStr = str + str2 + str3 + str4;
														mainStr = mainStr.replaceAll('$VariableName$', varName);
														mainStr = mainStr.toString().replaceAll('$Z$', z);
														mainStr = mainStr.toString().replaceAll('$URL$', URL);

														return $(mainStr.toString());






													}
											</script>
											<div>
												<div class="data-row data-container">
													@{
														<div class="label-container">
															<span class="field-title required-field">Size</span>
														</div>
														<div class="field-container">
															<div class="data-row">
																@Html.AdFalconDropDownList("SelectedHTML5CreativeId", Model.HTML5Creatives, new { onchange = "requiredSize()" })

																<span id="displaySelectedHTML5CreativeIdRequiredMsg" class="validation-arrow field-validation-error"
																	  style="display: none;"><span class="">@Html.GetResource("RequiredMessage", "ResourceSet")</span></span>
																</div>
															</div>
															@*if (Model.SelectedHTML5DocumentId > 0)
														{

															<a id="clearlnk" href="javascript:void(0);" onclick='clearZipUploadFile(this); onFileCleared();' class="clear-form floating-left">@Html.GetResource("Clear")</a>

														}
														else
														{

															<a id="clearlnk" style="display: none;" href="javascript:void(0);" onclick='clearZipUploadFile(this); onFileCleared();'
															   class="clear-form floating-left">@Html.GetResource("Clear")</a>

														}*@
													}
												</div>
												<div id="zip_0" class="data-row data-container col-sm-8 col-sm-push-2">

													<div class="floating-left data-row">
														<span class="field-title required-field data-row">
															<span class="reverse-link">Please Upload a zip File</span>

														</span>

													</div>
													<div class="floating-right" style="margin-right: 70px;">
														<span id="displayUploadZipFileRequiredMsg" class="validation-arrow field-validation-error"
															  style="display:none;"><span class="">You Must Upload a File</span></span>
													</div>
													<div class="data-row field-container">
														<div class="floating-right uplaod-ctnl-special" sstyle="width:150px">
															@(Html.Telerik().Upload().Name("HTML5zip_upload").Multiple(false).ShowFileList(false)
																				  .Async(async => async.Save("SaveForZip", "Document", new { typeId = 0 }).Remove("Remove", "Document")
																					  .AutoUpload(true)).ClientEvents(events => events.OnSuccess("onFileUploadZipSuccess").OnUpload("onFileUpload_HTML5zip")).HtmlAttributes(new { accept = ".zip" }))


														</div>


														<div class="floating-left">
															<div class="floating-left">
																@{
																	if (Model.SelectedHTML5DocumentId > 0)
																	{

																		<a href="javascript:void(0)" id="fileZip" style="padding:5px;" onclick="downlaodByPostAction('@(Noqoush.AdFalcon.Web.Controllers.Utilities.Config.RootUrl + "Downloader.ashx?docId=" + Model.SelectedHTML5DocumentId.ToString())')" class="floating-left" title="Download as Zip File"><i id="FileNameTxt" class="fa fa-file-zip-o" style="padding:5px;font-size:14px">@(" " + Model.SelectedHTML5FileName)</i></a>

																		<a href="javascript:void(0)" id="NofileZip" style="display:none;padding:5px;" onclick='return false;' class="floating-left" title="No File"><i class="fa fa-file" style="padding:5px; font-size:14px">&nbsp;No File</i></a>
																		<input Name="SelectedHTML5DocumentId" id="SelectedHTML5DocumentId" custom_name="content" type="hidden" value="@Model.SelectedHTML5DocumentId" />

																		<a id="clearlnk" style="display: none;" href="javascript:void(0);" onclick='clearZipUploadFile(this); onFileCleared();'
																		   class="clear-form floating-left">@Html.GetResource("Clear")</a>
																	}
																	else
																	{
																		<a href="javascript:void(0)" id="NofileZip" onclick='return false;' style="padding:5px;" class="floating-left" title="No File"><i class="fa fa-file" style="padding:5px;font-size:14px">&nbsp;No File</i></a>
																		<a href="javascript:void(0)" id="fileZip" style="display:none;padding:5px;" onclick="downlaodByPostAction('@(Noqoush.AdFalcon.Web.Controllers.Utilities.Config.RootUrl + "Downloader.ashx?docId=" + Model.SelectedHTML5DocumentId.ToString())')" class="floating-left" title="Download as Zip File"><i class="fa fa-file-zip-o" id="FileNameTxt" style="padding:5px;font-size:14px"></i></a>

																		<input Name="SelectedHTML5DocumentId" id="SelectedHTML5DocumentId" custom_name="content" type="hidden" value="-1" />

																		<a id="clearlnk" style="display: none;" href="javascript:void(0);" onclick='clearZipUploadFile(this); onFileCleared();'
																		   class="clear-form floating-left">@Html.GetResource("Clear")</a>
																	}
																}
															</div>

														</div>
													</div>
												</div>




												<div id="ClickTagsDiv">


													@{

														if (Model.ClickTags != null)
														{
															for (int z = 0; z < Model.ClickTags.Count(); z++)
															{

																<div class="data-row data-container info-container" id="ClickTag_@Model.ClickTags[z].VariableName">
																	<div class="label-container">
																		<span class="field-title required-field">@Model.ClickTags[z].VariableName</span>
																	</div>
																	<div class="field-container">
																		<div class="field-container">
																			@{
																				@Html.TextBoxFor(x => Model.ClickTags[z].TrackingUrl, new { @onchange = "OnChangeURL(this)", @class = "text-box DynamicImageUrls textbox" + Model.ClickTags[z].ID })
																				@Html.HiddenFor(x => Model.ClickTags[z].VariableName)

																				var idSpan = "ClickTags_" + z + "__TrackingUrl-URLErrorMsg2";
																				var idSpan2 = "ClickTags_" + z + "__TrackingUrl-URLErrorMsg3";
																			}

																			<span id=@idSpan class="validation-arrow field-validation-error errorURLClickTags"
																				  style="display: none;"><span class="">@Html.GetResource("UrlMsg")</span></span>


																				<span id=@idSpan2 class="validation-arrow field-validation-error errorURLClickTags"
																					  style="display: none;"><span class="">@Html.GetResource("RequiredMessage", "ResourceSet")</span></span>
																				</div>

																			</div>
																		</div>

																	}
																}
													}
												</div>


											</div>







										</div>
									}
									first = "style='display: none'";
								}
							}
						</div>
					</div>
					<div id="divRichMediaProtocol" style="display:none">
						<h2>
							@Html.GetResource("RichMediaRequiredProtocol", "Campaign")
						</h2>
						<div class="section-form-inner-container">
							<div class="section-form-inner-container info-container">
								<div class="data-row data-container">
									<div class="label-container"><span class="field-title required-field">@Html.GetResource("RichMediaRequiredProtocol", "Campaign")</span></div>
									<div class="field-container">
										@Html.AdFalconDropDownList("RichMediaRequiredProtocol", Model.RichMediaRequiredProtocolsList)
									</div>

									<div class="field-container" id="IsRequiredDiv" style="display:none;padding-top:7px">
										@Html.GetCheckBox("IsMandatory", @Html.GetResource("IsMandatory", "Global"), Model.IsMandatory)
									</div>
								</div>
							</div>
						</div>
					</div>


					<div id="divCreativeVendor">
						@Html.HiddenFor(m => m.CreativeVendorId)

						<h2>
							@Html.GetResource("CreativeVendor", "Campaign")
						</h2>


						@Html.Partial("CreativeVendorMultiSelect", Model)


					</div>


					<h2>
						@Html.GetResource("Settings", "Commands")
					</h2>
					<div class="section-form-inner-container">
						<div class="section-form-inner-container info-container">
							<div class="data-row data-container">
								<div class="label-container">
									<span class="field-title required-field">@Html.GetResource("Settings", "Commands")</span>
								</div>
								<div class="field-container">

									@Html.GetCheckBox("VerifyTargetingCriteria", Html.GetResource("VerifyTargetingCriteria", "TrackingAd"), Model.AdCreativeDto.VerifyTargetingCriteria)
									@Html.GetCheckBox("UpdateEventsFrequency", Html.GetResource("UpdateEventsFrequency", "TrackingAd"), Model.AdCreativeDto.UpdateEventsFrequency)
									@Html.GetCheckBox("VerifyDailyBudget", Html.GetResource("VerifyDailyBudget", "TrackingAd"), Model.AdCreativeDto.VerifyDailyBudget)
									@Html.GetCheckBox("VerifyCampaignStartAndEndDate", Html.GetResource("VerifyCampaignStartAndEndDate", "TrackingAd"), Model.AdCreativeDto.VerifyCampaignStartAndEndDate)
									@Html.GetCheckBox("UpdateTags", Html.GetResource("UpdateTags", "TrackingAd"), Model.AdCreativeDto.UpdateTags)
									@Html.GetCheckBox("VerifyEventsFrequency", Html.GetResource("VerifyEventsFrequency", "TrackingAd"), Model.AdCreativeDto.VerifyEventsFrequency)
									@Html.GetCheckBox("VerifyPrerequisiteEvents", Html.GetResource("VerifyPrerequisiteEvents", "TrackingAd"), Model.AdCreativeDto.VerifyPrerequisiteEvents)
									@Html.GetCheckBox("ValidateRequestDeviceAndLocationData", Html.GetResource("ValidateRequestDeviceAndLocationData", "TrackingAd"), Model.AdCreativeDto.ValidateRequestDeviceAndLocationData)

								</div>
							</div>
						</div>
					</div>

					<h2>
						@Html.GetResource("Bid", "Campaign")
					</h2>
					<div class="section-form-inner-container">
						<div class="section-form-inner-container info-container">
							<div class="data-row data-container">
								<div class="label-container">
									<span class="field-title required-field">@Html.GetResource("MinimalBid", "Campaign")</span>
								</div>
								<div class="field-container">
									<span class="side-text">@string.Format("{0:F2}", Model.AdCreativeDto.MinBid) $</span>
								</div>
							</div>
							<div class="data-row data-container">
								<div class="label-container">
									<span class="field-title required-field campaign-upload">@Html.GetResource("Bid", "Campaign")</span>
								</div>
								<div class="field-container">
									<span class="small-big-field">@Html.AdFalconTextBox("AdCreativeDto.Bid", Model == null || Model.AdCreativeDto == null ? string.Empty : Model.AdCreativeDto.Bid.ToString("F2"), new { maskType = "decimal", onkeypress = "onbidpress(this)" })</span>
									<span class="side-text">$</span>
									<span id="bidDiscounted" style="color: #E40685;" class="data-row guid-text go-left iea-go-right">@(!Model.DiscountedBid.HasValue || Model.AdCreativeDto.Bid == Model.DiscountedBid ? string.Empty : "(" + string.Format(Html.GetResource("DiscountedBidDesc", "Campaign"), Model.DiscountedBid.Value.ToString("F2")) + ")")</span>
									@Html.AdFalconValidationMessageFor(p => p.AdCreativeDto.Bid)
								</div>
							</div>

						</div>
					</div>
				</div>
				<div class="section-footer">
				</div>
			</div>
		</div>
        <div class="data-row button-container">
            <input type="submit" value="@Html.GetResource("Save", "Commands")" name="Create" class="save-button" onclick="return creativeUnitValidate();" />
            <input type="button" value='@Html.GetResource("Close", "Commands")' class="btn" onclick="redirect('@(string.IsNullOrWhiteSpace(Request.QueryString["returnUrl"]) ? Url.Action("Ads", "Campaign", new { id = routeData.Values["id"], adGroupId = routeData.Values["adGroupId"] }) : Request.QueryString["returnUrl"])    ')" />
        </div>
    </div>
}


