<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="noqoush.Settings" type="System.Configuration.NameValueSectionHandler" allowLocation="true" allowDefinition="Everywhere" allowExeDefinition="MachineToApplication" overrideModeDefault="Allow" restartOnExternalChanges="true" requirePermission="true" />
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" requirePermission="true" />
    <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,Log4net" />
    <section name="dataCacheClient" type="Microsoft.ApplicationServer.Caching.DataCacheClientSection,Microsoft.ApplicationServer.Caching.Core, Version=1.0.0.0,Culture=neutral, PublicKeyToken=31bf3856ad364e35" allowLocation="true" allowDefinition="Everywhere" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data" requirePermission="true" />

    <section name="redisCacheClient" type="StackExchange.Redis.Extensions.Core.Configuration.RedisCachingSectionHandler, StackExchange.Redis.Extensions.Core" />
  </configSections>
  <redisCacheClient allowAdmin="true" connectTimeout="10000" database="0">
    <hosts>
      <add host="192.168.2.135" cachePort="7000" />
      <add host="192.168.2.21" cachePort="7000" />
      <add host="192.168.2.22" cachePort="7000" />
      <add host="192.168.2.135" cachePort="7001" />
      <add host="192.168.2.21" cachePort="7001" />
      <add host="192.168.2.22" cachePort="7001" />
      <add host="192.168.2.135" cachePort="7002" />
      <add host="192.168.2.21" cachePort="7002" />
      <add host="192.168.2.22" cachePort="7002" />
    </hosts>
  </redisCacheClient>
  <dataConfiguration defaultDatabase="DB" />
  <connectionStrings>
    <add name="DB" connectionString="server=192.168.2.25;User Id=root;Password=pass@word1;database=adfalcon_web_dev;Persist Security Info=True;Charset=utf8;" providerName="MySql.Data.MySqlClient" />
    <!--<add name="DB" connectionString="server=192.168.2.25;User Id=root;Password=MyNewPass;database=adfalcon_web_devpercona;Persist Security Info=True;Charset=utf8;" providerName="MySql.Data.MySqlClient" />-->
    <!--<add name="DB" connectionString="server=192.168.2.25;User Id=root;Password=MyNewPass;database=adfalcon_web_devpercona;Persist Security Info=True;Charset=utf8;" providerName="MySql.Data.MySqlClient" />-->
  </connectionStrings>
  <configProtectedData>
    <providers>
      <add useMachineProtection="true" name="DPAPIProtection" type="System.Configuration.DpapiProtectedConfigurationProvider,System.Configuration, Version=2.0.0.0,Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    </providers>
  </configProtectedData>
  <!--<noqoush.Settings>
    <add key="EncryptionKey" value="adfalcon"/>
  </noqoush.Settings>-->
  <noqoush.Settings configProtectionProvider="DPAPIProtection">
    <EncryptedData>
      <CipherData>
        <CipherValue>AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAADkoSCTYOCE+DX5fEVaQS7AQAAAACAAAAAAAQZgAAAAEAACAAAACs08Lm/escJFb2jq5+teiqqN5sJkO7puS5hFIBQv9JwAAAAAAOgAAAAAIAACAAAAD8s85jzUASIbwiXTDqUn6VS80xC7bIxIJN5SKshNgnxcAAAAB0Uk+bxnELgJ6AFqhToEvvCKbHsSiFLTM/bz19LsyAAK5wlM5AXcZ1orL4+vZ5E//a3pLw9P9z+Qz3F7UEfT0XtElU+bTZiaDUZZwvxGvpCifZJlYOawowDxju8raPqd7DUB56Lgnay8i0+otWl56RzQB7ymuXG4HZlnQesP54E+mk6+PdoxskJ8x+HcF3xYybqeoXyw7w/YjIFsNsTuN7aVMWc9lAcp2M+BfFgH2DoSgfnD2+N4zGlp5tImn03dZAAAAAXlMBZrrdJuOotB+F9IIVOrKYbUiNlMJSPejO0TZ6pbEU+qbtLphgexIP2jBN8GSuOSXnBgB0C5J1p46MO7xe/g==</CipherValue>
      </CipherData>
    </EncryptedData>
  </noqoush.Settings>
  <dataCacheClient>
    <securityProperties mode="None" protectionLevel="None" />
    <hosts>
      <host name="192.168.2.21" cachePort="22233" />
    </hosts>
  </dataCacheClient>
  <exceptionHandling>
    <exceptionPolicies>
      <add name="Framework">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow" />
        </exceptionTypes>
      </add>
      <add name="Domain">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow" />
        </exceptionTypes>
      </add>
      <add name="Threading">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow" />
        </exceptionTypes>
      </add>
      <add name="Service Layer">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow">
            <exceptionHandlers>
              <add logCategory="Error" eventId="100" severity="Error" type="Noqoush.Framework.ExceptionHandling.LogExceptionHandler,Noqoush.Framework" name="Error Logging Handler" />
            </exceptionHandlers>
            <!--<add logCategory="Error" eventId="100" severity="Error"
            formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling"
                   type="Noqoush.Framework.ExceptionHandling.LogExceptionHandler,Noqoush.Framework"
                   name="Error Logging Handler" />
            </exceptionHandlers>-->
          </add>
        </exceptionTypes>
      </add>
      <add name="UI">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow" />
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  <hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
    <session-factory>
      <property name="connection.provider">
        NHibernate.Connection.DriverConnectionProvider
      </property>
      <property name="connection.driver_class">
        NHibernate.Driver.MySqlDataDriver
      </property>
      <!--<property name="connection.connection_string">
        server=127.0.0.1;User Id=root;Password=1234;database=performancetest;Persist Security Info=True;
      </property>-->
      <property name="connection.connection_string">
        server=192.168.2.25;User Id=root;Password=pass@word1;database=adfalcon_web_dev;Persist Security Info=True;Charset=utf8;
        <!--server=192.168.2.25;User Id=root;Password=MyNewPass;database=adfalcon_web_devpercona;Persist Security Info=True;Charset=utf8;-->
        <!--server=192.168.2.25;User Id=root;Password=MyNewPass;database=adfalcon_web_devpercona;Persist Security Info=True;Charset=utf8;-->
      </property>
      <property name="dialect">
        NHibernate.Dialect.MySQLDialect
      </property>
      <property name="adonet.batch_size">
        10
      </property>
      <property name="show_sql">
        true
      </property>
      <property name="cache.use_second_level_cache">true</property>
      <property name="cache.use_query_cache">true</property>
      <property name="cache.provider_class">NHibernate.Caches.Velocity.VelocityProvider, NHibernate.Caches.Velocity</property>
      <!--<event type="post-collection-recreate">
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="post-collection-update">
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="post-collection-update">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>-->
      <event type="post-update">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="post-insert">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="post-delete">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>
      <!--<event type="post-update">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="post-insert">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="post-delete">
        <listener class="Noqoush.Framework.DomainServices.AuditTrial.AuditEventListener, Noqoush.Framework.DomainServices" />
      </event>

      <event type="pre-update">
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="pre-insert">
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>
      <event type="pre-delete">
        <listener class="Noqoush.Framework.DomainServices.EventBroker.EventBrokerListener, Noqoush.Framework.DomainServices" />
      </event>-->
    </session-factory>
  </hibernate-configuration>
  <log4net>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="c:/logs/logfile.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="500" />
      <maximumFileSize value="5MB" />
      <staticLogFileName value="true" />
      <filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="DEBUG" />
        <levelMax value="FATAL" />
      </filter>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date|[%thread]|%-5level|%logger|%message%newline|%exception" />
      </layout>
    </appender>
    <root>
      <level value="ALL" />
      <appender-ref ref="RollingFileAppender" />
    </root>
    <logger name="NHibernate">
      <level value="ERROR" />
    </logger>
    <logger name="NHibernate.SQL">
      <level value="ERROR" />
    </logger>
  </log4net>
  <!--
    For a description of web.config changes for .NET 4.5 see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.5" />
      </system.Web>
  -->
  <appSettings>
    <add key="UnavailableDBErrorCodes" value="10061,1042,1041,1040" />
    <add key="CheckDb_Timer_WaitPeriod_InMilliSec" value="10000" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5.1" />
    <pages controlRenderingCompatibilityVersion="4.0" />
  </system.web>
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="basicHttp" allowCookies="true" maxReceivedMessageSize="20000000" maxBufferSize="20000000" maxBufferPoolSize="20000000">
          <readerQuotas maxDepth="32" maxArrayLength="200000000" maxStringContentLength="200000000" />
        </binding>
      </basicHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="True" httpHelpPageEnabled="True" />
          <serviceAuthorization principalPermissionMode="Custom">
            <authorizationPolicies>
              <add policyType="Noqoush.Framework.WCF.Behaviors.WcfAuthorizationPolicy,Noqoush.Framework.WCF" />
            </authorizationPolicies>
          </serviceAuthorization>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
    <services>
      <service name="{{Name}}Service">
        <endpoint binding="basicHttpBinding" address="http://localhost/Noqoush.AdFalcon.AdServer.Integration.Services.Host/{{Name}}Service.svc" />
      </service>
    </services>
    <client>
      <endpoint name="STSClient" address="http://localhost/Noqoush.Framework.Infrastructure.Services.Host/SecurityService.svc" binding="basicHttpBinding" contract="Noqoush.Framework.Security.ISecurityService" />
      <endpoint name="AdServerCachingService" address="http://192.168.2.135/services.api.adfalcon/CommunicationService.svc" binding="basicHttpBinding" contract="Noqoush.AdFalcon.Server.CommunicationService.Services.ICommunicationService" />
      <endpoint name="ResourceService" address="http://localhost/Noqoush.Framework.Infrastructure.Services.Host/ResourceService.svc" binding="basicHttpBinding" contract="Noqoush.Framework.Resources.IResourceService" />
      <endpoint name="ConfigurationSettingService" address="http://localhost/Noqoush.Framework.Infrastructure.Services.Host/ConfigurationSettingService.svc" binding="basicHttpBinding" contract="Noqoush.Framework.ConfigurationSetting.IConfigurationSettingService" />
    </client>
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
  </system.webServer>
  <system.data>
    <DbProviderFactories>
      <remove invariant="MySql.Data.MySqlClient" />
      <add name="MySql.Data.MySqlClient" invariant="MySql.Data.MySqlClient" description=".Net Framework Data Provider for MySQL" type="MySql.Data.MySqlClient.MySqlClientFactory, MySql.Data" />
    </DbProviderFactories>
  </system.data>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="dotless.Core" publicKeyToken="96b446c9e63eae34" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.2.1.0" newVersion="1.2.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Razor" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>