//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections.Generic;
using System.Net;
using ArabyAds.AdFalcon.Domain.Model.Core;
using System;
using System.Text;

namespace ArabyAds.AdFalcon.Domain.Model.Campaign.Targeting
{
    public class IPTargeting : TargetingBase
    {
        public virtual byte[] StartRange { get; set; }
        public virtual byte[] EndRange { get; set; }


     
        public virtual string Description { get; set; }
        public override string GetDescription()
        {

            return string.Format("{0} - {1}", GetString(StartRange), GetString(EndRange));
        }
        public virtual string GetString(byte[] bytes)
        {
            StringBuilder value = new StringBuilder();

            if (bytes!=null)
            {

                for (int ctr = 0; ctr < bytes.Length; ctr++)
                {
                    value.Append(Convert.ToInt32(bytes[ctr]).ToString());

                    if (ctr != bytes.Length - 1) value.Append(".");

                }
            }
            return value.ToString();
        }
        public virtual string GetIPString(string bytesString)
        {
            StringBuilder value = new StringBuilder();
            if (!string.IsNullOrEmpty(bytesString))
            {
                byte[] bytes = Convert.FromBase64String(bytesString);
                if (bytes != null)
                {

                    for (int ctr = 0; ctr < bytes.Length; ctr++)
                    {
                        value.Append(Convert.ToInt32(bytes[ctr]).ToString());

                        if (ctr != bytes.Length - 1) value.Append(".");

                    }
                }
            }
            return value.ToString();
        }


        public override TargetingBase Copy()
        {
            var cloneObj = new IPTargeting()
            {
                StartRange = this.StartRange,
                EndRange = this.EndRange,
                AdGroup = this.AdGroup,
                Type = this.Type,
                IsDeleted = this.IsDeleted,
                Description = this.Description
            };
            return cloneObj;
        }


    }
}

