//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections.Generic;
using System.Runtime.Serialization;
using ArabyAds.AdFalcon.Domain.Common.Model.Core;
using ArabyAds.AdFalcon.Domain.Repositories.Core;

namespace ArabyAds.AdFalcon.Domain.Model.Core
{
    //[DataContract()]
    //public enum CurrencyIds
    //{
    //    [EnumMember]
    //    JD = 1,
    //    [EnumMember]
    //    USD = 2,
    //    [EnumMember]
    //    AED = 3
    //}
    public class Currency : ManagedLookupBase//LookupBase<DeviceType, int>
    {
        #region Values
        /*
        JD=1,
        USD=2,
        AED = 3
         */
        private static ICurrencyRepository _currencyRepository = null;
        private static ICurrencyRepository CurrencyRepository
        {
            get
            {
                if (_currencyRepository == null)
                {
                    _currencyRepository = Framework.IoC.Instance.Resolve<ICurrencyRepository>();
                }
                return _currencyRepository;
            }
        }
        static Currency _jd = null;
        static Currency _usd = null;
        static Currency _aed = null;
        static readonly object LockObj = new object();
        public static Currency JD
        {
            get
            {
                if (checkStatus(_jd))
                {
                    lock (LockObj)
                    {
                        if (checkStatus(_jd))
                        {
                            _jd = CurrencyRepository.Get((int)CurrencyIds.JD);
                        }
                    }
                }
                return _jd;
            }
        }
        public static Currency USD
        {
            get
            {
                if (checkStatus(_usd))
                {
                    lock (LockObj)
                    {
                        if (checkStatus(_usd))
                        {
                            _usd = CurrencyRepository.Get((int)CurrencyIds.USD);
                        }
                    }
                }
                return _usd;
            }
        }
        public static Currency AED
        {
            get
            {
                if (checkStatus(_aed))
                {
                    lock (LockObj)
                    {
                        if (checkStatus(_aed))
                        {
                            _aed = CurrencyRepository.Get((int)CurrencyIds.AED);
                        }
                    }
                }
                return _aed;
            }
        }
        private static bool checkStatus(Currency type)
        {
            if (type != null)
            {
                try
                {
                    type.Name.ToString();
                    return false;
                }
                catch
                {
                    return true;
                }
            }
            else
            {
                return true;
            }
        }
        #endregion
    }
}

