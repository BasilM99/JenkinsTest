//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Runtime.Serialization;
using ArabyAds.Framework;
using ArabyAds.Framework.DataAnnotations;
using ArabyAds.Framework.DomainServices;
using ArabyAds.AdFalcon.Domain.Repositories.Tenant;
using ArabyAds.Framework.ExceptionHandling.Exceptions;

namespace ArabyAds.AdFalcon.Domain.Model.Core
{
    //[DataContract()]
    //public enum PartyType
    //{
    //    [EnumMember]
    //    [EnumText("Account", "Menu")]
    //    Account = 1,
    //    [EnumMember]
    //    [EnumText("Employee", "Party")]
    //    Employee = 2,
        
    //    [EnumMember]
    //    [EnumText("BusinessPartner", "Party")]
    //    BusinessPartner = 7,

    //    [EnumMember]
    //    [EnumText("BusinessPartner", "Party")]
    //    Normal = 4,
    //    [EnumMember]
    //    [EnumText("SSPPartner", "SSPPartners")]
    //    SSP = 3,

    //    [EnumMember]
    //    [EnumText("DSPPartner", "DSPPartners")]
    //    DSP = 5,

    //    [EnumMember]
    //    [EnumText("DPPartner", "DPPartners")]
    //    DP = 6

    //}
    public class Party : IEntity<int>, ITenant<int>
    {
        public virtual int ID { get; set; }
        public virtual Tenant Tenant { get; set; }
        public virtual string Name { get; set; }
        public virtual bool Visible { get; set; }
        public virtual bool IsDeleted { get; set; }
        public virtual bool IsValid { get; set; }
        public virtual string GetDescription()
        {
            return Name;
        }
        public override string ToString()
        {
            return this.Name;
        }
        public virtual void Validate()
        {
            IsValid = false;
            //create business Exception to hold error data list 
            var error = new BusinessException();
            //validate Name
            if (string.IsNullOrWhiteSpace(Name))
            {
                error.Errors.Add(new ErrorData { ID = "PartyNameBR" });
            }
            if (error.Errors.Count > 0)
            {
                IsValid = false;
                throw (error);
            }
            IsValid = DataAnnotationsValidator.TryValidate(this);
            IsValid = true;
        }
        public virtual string TypeNameString { get; set; }
    }
}
